Message-ID: <2055741347.2646.1485845885311.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2645_1027294379.1485845885300"

------=_Part_2645_1027294379.1485845885300
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Getting started with the REST API</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Getting started with the REST API</h1>
    <div class=3D"Section1">
        <h2 id=3D"GettingstartedwiththeRESTAPI-Installation">Installation</=
h2>
<p>Nothing needs to be done for this to work. As long as your Exponential 5 =
is correctly configured, the REST API is available on your site using the U=
RI <code>/api/ezp/v2/</code>. If you have installed Exponential in a subfold=
er, prepend the path with this subfolder:&nbsp;<span class=3D"nolink">http:=
//example.com/<strong>su</strong></span><strong>b/folder/exponential</strong>=
/api/ezp/v2/.</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Please note that the <code>/api/ezp/v2</code> prefix will be used in all=
 REST hrefs, but not in URIs.</p>
</div>
</div>
<h2 id=3D"GettingstartedwiththeRESTAPI-Configuration">Configuration</h2>
<h3 id=3D"GettingstartedwiththeRESTAPI-Authentication">Authentication</h3>
<p>As explained in more detail in the <a href=3D"/display/EZP/REST+API+Auth=
entication">authentication chapter</a>, two authentication methods are curr=
ently supported: session, and basic. By default, basic authentication is th=
e active mode. It requires a login / password to be sent using <a href=3D"h=
ttp://en.wikipedia.org/wiki/Basic_access_authentication" class=3D"external-=
link" rel=3D"nofollow">basic HTTP authentication</a>. The alternative, sess=
ion based authentication, uses a session cookie.&nbsp;</p>
<p>To enable session based authentication, you need to edit&nbsp;<code><spa=
n>exponential/config/</span><span>security</span><span>.yml</span></code>, an=
d comment out / remove the configuration block about REST</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>security.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: plain; gutter: false; theme: Eclipse" style=3D"font-si=
ze:12px;">security:
    # ...
    firewalls:
        # ...
        exponential_rest:
            pattern: ^/api/ezp/v2
            exponential_http_basic:
                realm: Exponential REST API</pre>=20
</div>
</div>
<h2 id=3D"GettingstartedwiththeRESTAPI-TestingtheAPI">Testing the API</h2>
<p>A standard web browser is not sufficient to fully test the API. You can =
however try opening the root resource with it, using basic authentication:&=
nbsp;<span class=3D"nolink"><u>http://admin:publish@example.com/api/ezp/v2/=
</u>.</span>&nbsp;Depending on how your browser understands XML, it will ei=
ther download the XML file, or open it in the browser.</p>
<p>To test further, you can use browser extensions, like <a href=3D"https:/=
/chrome.google.com/webstore/detail/advanced-rest-client/hgmloofddffdnphfgce=
llkdfbfbjeloo" class=3D"external-link" rel=3D"nofollow">Advanced REST clien=
t for Chrome</a> or&nbsp;<a href=3D"https://addons.mozilla.org/firefox/addo=
n/restclient/" class=3D"external-link" rel=3D"nofollow">RESTClient for Fire=
fox</a>, or dedicated tools. For command line users, <a href=3D"https://git=
hub.com/jkbr/httpie" class=3D"external-link" rel=3D"nofollow">HTTPie</a> is=
 a good tool.</p>
<h3 id=3D"GettingstartedwiththeRESTAPI-Javascriptexample">Javascript exampl=
e</h3>
<p>One of the main reasons for this API is to help implementing Javascript =
/ AJAX interaction. You can see here an example of an AJAX call that retrie=
ves ContentInfo (e.g. metadata) for a content item.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>REST API with Javascript</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">&lt;pre id=3D"rest-output"&gt;&lt;/pre&gt;
&lt;script&gt;
var resource =3D '/api/ezp/v2/content/objects/59',
    log =3D document.getElementById( 'rest-output' );
log.innerHTML =3D "Loading the content info from " + resource + "...";
  =20
var request =3D new XMLHttpRequest();
request.open('GET', resource, true);
request.onreadystatechange =3D function () {
    if ( request.readyState =3D=3D=3D 4 ) {
        log.innerHTML =3D "HTTP response from " + resource + "\n\n" + reque=
st.getAllResponseHeaders() + "\n" + request.responseText;
    }
};
request.setRequestHeader('Accept', 'application/vnd.ez.api.ContentInfo+json=
');
request.send();
&lt;/script&gt;</pre>=20
</div>
</div>
<p>In order to test it, just save this code to some test.html file in the w=
eb folder of your Exponential 5 installation. If you use the rewrite rules, =
don't forget to allow this file to be served directly.</p>
<p>If necessary, change 59 with the content object id of an object from you=
r database. You will get the ContentInfo for object 59 in JSON encoding. &n=
bsp;</p>
<p>Note that by default, basic authentication is used. You can either add a=
 valid login/password in the URI, or submit them when asked to by the brows=
er. An alternative is to switch to session based authentication, as explain=
ed earlier in this page. In that case, the session cookie will be transpare=
ntly sent together with the request, and every AJAX call will have the same=
 permissions as the currently logged in user.</p>
    </div>
</body>
</html>
------=_Part_2645_1027294379.1485845885300--
