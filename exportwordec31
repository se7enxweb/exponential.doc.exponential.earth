Message-ID: <1080998699.3814.1485855448839.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3813_1740978397.1485855448838"

------=_Part_3813_1740978397.1485855448838
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>ez_render_field</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>ez_render_field</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<h4 id=3D"ez_render_field-Description">Description</h4>
<p><code>ez_render_field()</code> is a Twig helper allowing you to display =
a Content item's Field value, taking advantage of the template block expose=
d by the Field Type used.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Template blocks for built-in Field Types <a href=3D"https://github.com/e=
zsystems/exponential-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resourc=
es/views/content_fields.html.twig" class=3D"external-link" rel=3D"nofollow"=
>reside in EzPublishCoreBundle</a>.</p>
</div>
</div>
<h4 id=3D"ez_render_field-PrototypeandArguments">Prototype and Arguments</h=
4>
<p><code><strong>ez_render_field(</strong> eZ\Publish\<span>API</span>\Repo=
sitory\Values\Content\Content <strong>content</strong>, string <strong>fiel=
dDefinitionIdentifier</strong>[, hash <strong>params</strong>]&nbsp;<strong=
>)</strong></code></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Argument name</th>
<th colspan=3D"1" class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Description</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code>content</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><code>eZ\Publish\API\Repository\Va=
lues\Content\Content</code></td>
<td class=3D"confluenceTd">Content object the displayable field belongs to.=
</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>fieldDefinitionIdentifier</c=
ode></td>
<td colspan=3D"1" class=3D"confluenceTd"><code>string</code></td>
<td colspan=3D"1" class=3D"confluenceTd">The identifier the Field is refere=
nced by.</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>params</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><code>hash</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>Hash of parameters that will be=
 passed to the template block.</p><p>By default you can pass 2 entries:</p>
<ul>
<li><strong><code>lang</code></strong> (to override the current language, m=
ust be a valid locale with xxx-YY format)</li>
<li><strong><code>template</code></strong> (to override the template to use=
, see below)</li>
<li><code><strong>attr</strong></code> (hash of HTML attributes you want to=
 add to the inner markup)</li>
<li><code><strong>parameters</strong></code> (arbitrary parameters to pass =
to the template block)</li>
</ul>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
Some Field Types might expect specific entries under the=20
<code><strong>parameters</strong></code> key, like the=20
<a href=3D"/display/DEVELOPER/MapLocation+Field+Type">MapLocation Field Typ=
e</a>.
</div>
</div></td>
</tr>
</tbody>
</table>
</div>
<h4 id=3D"ez_render_field-Overrideafieldtemplateblock">Override a field tem=
plate block</h4>
<p>In some cases, you may not want to use the built-in field template block=
 as it might not fit your markup needs. In this case, you can choose to ove=
rride the template block to use by specifying your own template. You can do=
 this inline when calling <code>ez_render_field()</code>, or globally by pr=
epending a field template to use by the helper.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Your template block must comply to a regular Field Type template block, =
<a href=3D"/display/DEVELOPER/Field+Type+template">as explained in the Fiel=
d Type documentation</a>.</p>
</div>
</div>
<h5 id=3D"ez_render_field-Inlineoverride">Inline override</h5>
<p>You can easily use the template you need by filling the <code><strong>te=
mplate</strong></code> entry in the <code>params</code> argument.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ ez_render_field(&nbsp;
       content,&nbsp;
       'my_field_identifier',
       { 'template': 'AcmeTestBundle:fields:my_field_template.html.twig' }
   ) }}</pre>=20
</div>
</div>
<p>The code above will load <code>my_field_template.html.twig</code> locate=
d in <code>AcmeTestBundle/Resources/views/fields/</code>.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# AcmeTestBundle/Resources/views/fields/my_field_template.html.twi=
g #}
{# Assuming "my_field_identifier" from above template example is an ezkeywo=
rd field. #}
{% block ezkeyword_field %}
    {% spaceless %}
        {% if field.value.values|length() &gt; 0 %}
        &lt;ul&gt;
            {% for keyword in field.value.values %}
            &lt;li&gt;{{ keyword }}&lt;/li&gt;
            {% endfor %}
        &lt;/ul&gt;
        {% endif %}
    {% endspaceless %}
{% endblock %}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Overriding a block and calling the parent</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>When overriding a field template block, it is possible to call the "pare=
nt." For this, you need to import original template horizontally, using <a =
href=3D"http://twig.sensiolabs.org/doc/tags/use.html" class=3D"external-lin=
k" rel=3D"nofollow"><strong><code>use</code></strong> Twig tag</a>.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# AcmeTestBundle/Resources/views/fields/my_field_template.html.twi=
g #}
{# Assuming "my_field_identifier" from above template example is an ezkeywo=
rd field. #}
&nbsp;
{% use "EzPublishCoreBundle::content_fields.html.twig" with ezkeyword_field=
 as base_ezkeyword_field %}
&nbsp;
{# Surround base block with a simple div #}
{% block ezkeyword_field %}
    &lt;div class=3D"ezkeyword"&gt;
        {{ block("base_ezkeyword_field") }}
    &lt;/div&gt;
{% endblock %}</pre>=20
</div>
</div>
</div>
</div>
<p>&nbsp;</p>
<h5 id=3D"ez_render_field-Inlineoverrideusingcurrenttemplate">Inline overri=
de using current template</h5>
<p>If you want to override a specific field template only once (i.e. becaus=
e your override would be only valid in your current template), you can spec=
ify the current template to be the source of the field block.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Inline override using current template</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">{% extends "MyBundle::pagelayout.html.twig" %}

{% block content %}
    {# Note that "tags" is a field using ezkeyword fieldType #}
    &lt;div class=3D"tags"&gt;{{ ez_render_field( content, "tags" , { "temp=
late": _self } ) }}&lt;/div&gt;
{% endblock %}

{# Here begins the inline block for my ezkeyword field #}
{% block ezkeyword_field %}
    {% spaceless %}
        {% if field.value.values|length() &gt; 0 %}
        &lt;ul&gt;
            {% for keyword in field.value.values %}
            &lt;li&gt;{{ keyword }}&lt;/li&gt;
            {% endfor %}
        &lt;/ul&gt;
        {% endif %}
    {% endspaceless %}
{% endblock %}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<p class=3D"title">Limitation</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><strong>Using <code>_self</code> will only work if your current template=
 is extending another one.</strong></p>
<p>This is basically the same limitation as for <a href=3D"http://symfony.c=
om/doc/current/book/forms.html#global-form-theming" class=3D"external-link"=
 rel=3D"nofollow">Symfony form themes</a>.</p>
</div>
</div>
<h5 id=3D"ez_render_field-Globaloverride">Global override</h5>
<p>In the case where you want to systematically reuse a field template inst=
ead of the default one, you can append it to the field templates list to us=
e by&nbsp;<code>ez_render_field()</code>.</p>
<p>To make your template available, you must register it to the system.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>app/config/ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    system:
        my_siteaccess:
            field_templates:
                -&nbsp;
                    template: "AcmeTestBundle:fields:my_field_template.html=
.twig"
                    # Priority is optional (default is 0). The higher it is=
, the higher your template gets in the list.
                    priority: 10</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>You can define these rules in a dedicated file instead of <code>app/conf=
ig/ezplatform.yml</code>.<span style=3D"color: rgb(51,51,51);">&nbsp;</span=
>Read the <a href=3D"/display/DEVELOPER/Importing+settings+from+a+bundle">c=
ookbook recipe to learn more about it</a><span style=3D"color: rgb(51,51,51=
);">.</span></p>
</div>
</div>
<p></p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<p></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_3813_1740978397.1485855448838--
