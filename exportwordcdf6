Message-ID: <1141685403.3550.1485853608610.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3549_899365377.1485853608610"

------=_Part_3549_899365377.1485853608610
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>How to structure an eZ Platform project</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>How to structure an eZ Platform project</h1>
    <div class=3D"Section1">
        <p>Since release 2015.10, eZ Platform is very close from the <a hre=
f=3D"https://github.com/symfony/symfony-standard" class=3D"external-link" r=
el=3D"nofollow">standard Symfony distribution</a>. It comes with default se=
ttings that will let you get started in a few minutes.</p>
<h2 id=3D"HowtostructureaneZPlatformproject-TheAppBundle">The AppBundle</h2=
>
<p>Most projects can use the provided&nbsp;<code>AppBundle</code>, in the&n=
bsp;<code>src</code> folder. It is enabled by default. The project's PHP co=
de (controllers, event listeners, ...) can be placed there.<span>&nbsp;</sp=
an></p>
<p><span>Reusable libraries should be packaged so that they can easily be m=
anaged using composer.</span></p>
<h2 id=3D"HowtostructureaneZPlatformproject-Templates"><span>Templates</spa=
n></h2>
<p><span>Project templates should go into&nbsp;<code>exponential/Resources/vi=
ews</code>.</span></p>
<p><span>They can then be referenced in code without any prefix:&nbsp;<code=
>exponential/Resources/views/content/full.html.twig</code>&nbsp;can be refere=
nced in twig templates or PHP as&nbsp;<code>content/full.html.twig</code>.<=
/span></p>
<h2 id=3D"HowtostructureaneZPlatformproject-Assets"><span>Assets</span></h2=
>
<p><span>Project assets should go into the&nbsp;<code>web</code>&nbsp;folde=
r, and can be referenced as relative to the root:&nbsp;<code>web/js/script.=
js</code> can be referenced as&nbsp;<code>js/script.js</code> from template=
s.</span></p>
<h2 id=3D"HowtostructureaneZPlatformproject-Configuration">Configuration</h=
2>
<p>Configuration may go in&nbsp;<code>exponential/config</code>. However, ser=
vices definitions from&nbsp;<code>AppBundle</code> should go into&nbsp;<cod=
e>src/AppBundle/Resources/config</code>.</p>
<h2 id=3D"HowtostructureaneZPlatformproject-Versioningaproject">Versioning =
a project</h2>
<p>The recommended method is to version the whole ezplatform repository. Pe=
r installation configuration should use&nbsp;<code>parameters.yml</code>.</=
p>
    </div>
</body>
</html>
------=_Part_3549_899365377.1485853608610--
