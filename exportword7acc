Message-ID: <1016998629.3172.1485852269265.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3171_288662817.1485852269265"

------=_Part_3171_288662817.1485852269265
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Content and Location view providers</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Content and Location view providers</h1>
    <div class=3D"Section1">
        <p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485852269233 {padding: 0px;}
div.rbtoc1485852269233 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485852269233 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485852269233">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#ContentandLocationviewproviders-View\Manager&amp;View\Provi=
der">View\Manager &amp; View\Provider</a>=20
<ul class=3D"toc-indentation">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#ContentandLocationviewproviders-ProvidedView\Providerimplem=
entations">Provided View\Provider implementations</a></li>=20
</ul>=20
<li><a href=3D"#ContentandLocationviewproviders-CustomView\Provider">Custom=
 View\Provider</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#ContentandLocationviewproviders-DifferencebetweenView\Provi=
der\LocationandView\Provider\Content">Difference between&nbsp;View\Provider=
\Location&nbsp;and&nbsp;View\Provider\Content</a></li>=20
<li><a href=3D"#ContentandLocationviewproviders-WhentodevelopacustomView\Pr=
ovider\(Location|Content)">When to develop a custom View\Provider\(Location=
|Content)</a></li>=20
<li><a href=3D"#ContentandLocationviewproviders-Example">Example</a></li>=
=20
</ul> </li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h1 id=3D"ContentandLocationviewproviders-View\Manager&amp;View\Provider">V=
iew\Manager &amp; View\Provider</h1>
<p>The role of the <code><span>(eZ\Publish\Core\MVC\Symfony\)View\Manager</=
span></code>&nbsp;is to select the right template for displaying a given co=
ntent item or location. It aggregates objects called <em>content and locati=
on view providers</em>&nbsp;which respectively implement&nbsp;<code>eZ\Publ=
ish\Core\MVC\Symfony\View\Provider\Content</code>&nbsp;and&nbsp;<code>eZ\Pu=
blish\Core\MVC\Symfony\View\Provider\Location</code>&nbsp;interfaces.</p>
<p>Each time a content item is to be displayed through the <code>Content\Vi=
ewController</code>, the <code>View\Manager</code> iterates over the regist=
ered content or location&nbsp;<code>View\Provider</code> objects and calls&=
nbsp;<code>getView</code><code>()</code>.</p>
<h3 id=3D"ContentandLocationviewproviders-ProvidedView\Providerimplementati=
ons">Provided View\Provider implementations</h3>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Usage</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code><a href=3D"/display/TECHDOC/View+provider+=
configuration">View provider configuration</a></code></td>
<td class=3D"confluenceTd"><p>Based on application configuration.<br>Former=
ly known as <em>Template override system</em>.</p></td>
</tr>
<tr>
<td class=3D"confluenceTd"><p><code>eZ\Publish\Core\MVC\Legacy\View\Provide=
r\Content</code></p><p><code>eZ\Publish\Core\MVC\Legacy\View\Provider\Locat=
ion</code></p></td>
<td class=3D"confluenceTd"><p>Forwards view selection to the legacy kernel =
by running the old content/view module.<br>Pagelayout used is the one confi=
gured in <code>exponential_legacy.&lt;scope&gt;.view_default_layout</code>.<b=
r>For more details about the <code>&lt;scope&gt;</code> please refer to the=
 <a href=3D"https://confluence.ez.no/display/EZP/Configuration#Configuratio=
n-Scope" rel=3D"nofollow" class=3D"external-link">scope configuration</a> d=
ocumentation.</p></td>
</tr>
</tbody>
</table>
</div>
<h2 id=3D"ContentandLocationviewproviders-CustomView\Provider">Custom View\=
Provider</h2>
<h3 id=3D"ContentandLocationviewproviders-DifferencebetweenView\Provider\Lo=
cationandView\Provider\Content">Difference between&nbsp;<code>View\Provider=
\Location</code>&nbsp;and&nbsp;<code>View\Provider\Content</code></h3>
<ul>
<li>A&nbsp;<code>View\Provider\Location</code>&nbsp;only deals with&nbsp;<c=
ode>Location</code>&nbsp;objects and implements&nbsp;<code>eZ\Publish\Core\=
MVC\Symfony\View\Provider\Location</code>&nbsp;interface.</li>
<li>A&nbsp;<code>View\Provider\Content</code>&nbsp;only deals with&nbsp;<co=
de>ContentInfo</code>&nbsp;objects and implements&nbsp;<code>eZ\Publish\Cor=
e\MVC\Symfony\View\Provider\Content</code>&nbsp;interface.</li>
</ul>
<h3 id=3D"ContentandLocationviewproviders-WhentodevelopacustomView\Provider=
\(Location|Content)">When to develop a custom <code>View\Provider\(Location=
|Content)</code></h3>
<ul>
<li>You want a custom template selection based on a very specific state of =
your application</li>
<li>You depend on external resources for view selection</li>
<li>You want to override the default one (based on configuration) for some =
reason</li>
</ul>
<p><code>View\Provider</code> objects need to be properly registered in the=
 service container with the <code><strong>exponential.location_view_provider<=
/strong></code> or&nbsp;<code><strong>exponential.content_view_provider</stro=
ng></code>&nbsp;service tag.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    acme.location_view_provider.class: Acme\DemoBundle\Content\MyLocationVi=
ewProvider

services:
    acme.location_view_provider:
        class: %ezdemo.location_view_provider.class%
        tags:
            - {name: exponential.location_view_provider, priority: 30}

</pre>=20
</div>
</div>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Tag attribute name</th>
<th class=3D"confluenceTh">Usage</th>
</tr>
<tr>
<td class=3D"confluenceTd">priority</td>
<td class=3D"confluenceTd"><p>An integer giving the priority to the <code><=
span>View\Provider\(Content|Location)</span></code> in the <code>View\Manag=
er</code>.</p><p>The priority range is <strong>from -255 to 255</strong></p=
></td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"ContentandLocationviewproviders-Example">Example</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Custom View\Provider\Location</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php

namespace Acme\DemoBundle\Content;

use eZ\Publish\Core\MVC\Symfony\View\ContentView;
use eZ\Publish\Core\MVC\Symfony\View\Provider\Location as LocationViewProvi=
der;
use eZ\Publish\API\Repository\Values\Content\Location;

class MyLocationViewProvider implements LocationViewProvider
{
    /**
     * Returns a ContentView object corresponding to $location, or void if =
not applicable
     *
     * @param \eZ\Publish\API\Repository\Values\Content\Location $location
     * @param string $viewType
     * @return \eZ\Publish\Core\MVC\Symfony\View\ContentView|null
     */
    public function getView( Location $location, $viewType )
    {
        // Let's check location Id
        switch ( $location-&gt;id )
        {
            // Special template for home page, passing "foo" variable to th=
e template
            case 2:
                return new ContentView( "AcmeDemoBundle:$viewType:home.html=
.twig", array( 'foo' =3D&gt; 'bar' ) );
        }
&nbsp;
       &nbsp;// ContentType identifier (formerly "class identifier")
        switch ( $location-&gt;contentInfo-&gt;contentType-&gt;identifier )
        {
            // For view full, it will load AcmeDemoBundle:full:small_folder=
.html.twig
            case 'folder':
                return new ContentView( "AcmeDemoBundle:$viewType:small_fol=
der.html.twig" );
        }
    }
}</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p></p>
    </div>
</body>
</html>
------=_Part_3171_288662817.1485852269265--
