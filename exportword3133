Message-ID: <654073798.3932.1485855919977.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3931_1517930269.1485855919976"

------=_Part_3931_1517930269.1485855919976
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>The RichText FieldType</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>The RichText FieldType</h1>
    <div class=3D"Section1">
        <p><span>This format is used by eZ P</span></p>
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>This FieldType is not officially supported yet, it will be as of first s=
table eZ Platform release.</p>
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">This FieldType validates and stores s=
tructured richtext, and exposes it in several formats.</span></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Internal name</th>
<th class=3D"confluenceTh">Expected input</th>
</tr>
<tr>
<td class=3D"confluenceTd"><pre>RichText</pre></td>
<td class=3D"confluenceTd"><pre>ezrichtext</pre></td>
<td class=3D"confluenceTd"><pre>mixed</pre></td>
</tr>
</tbody>
</table>
</div>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485855919930 {padding: 0px;}
div.rbtoc1485855919930 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485855919930 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485855919930">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#TheRichTextFieldType-Inputexpectations">Input expectations<=
/a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#TheRichTextFieldType-Inputformats">Input formats</a></li>=
=20
<li><a href=3D"#TheRichTextFieldType-ExampleoftheFieldType'sinternalformat"=
>Example of the FieldType's internal format</a></li>=20
<li><a href=3D"#TheRichTextFieldType-ExampleoftheFieldType'sXHTML5editforma=
t">Example of the FieldType's XHTML5 edit format</a></li>=20
<li><a href=3D"#TheRichTextFieldType-ExampleofusingXMLdocumentininternalfor=
matasastring">Example of using XML document in internal format as a string<=
/a></li>=20
</ul> </li>=20
<li><a href=3D"#TheRichTextFieldType-ValueobjectAPI">Value object API</a></=
li>=20
<li><a href=3D"#TheRichTextFieldType-RESTAPIspecifics">REST API specifics</=
a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#TheRichTextFieldType-CreatingorupdatingContent">Creating or=
 updating Content</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"TheRichTextFieldType-Inputexpectations"><span style=3D"color: rgb=
(0,0,0);">Input expectations</span></h2>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Description</th>
<th class=3D"confluenceTh">Example</th>
</tr>
<tr>
<td class=3D"confluenceTd"><pre>string</pre></td>
<td class=3D"confluenceTd">XML document in one of the FieldType's input for=
mats as a string.</td>
<td class=3D"confluenceTd">See the example below.</td>
</tr>
<tr>
<td class=3D"confluenceTd"><pre>DOMDocument</pre></td>
<td class=3D"confluenceTd"><p><span> <span>XML document in one of the Field=
Type's input formats as a</span> </span></p><p><strong> <code>DOMDocument</=
code> </strong> object.</p></td>
<td class=3D"confluenceTd">See the example below.</td>
</tr>
<tr>
<td class=3D"confluenceTd"><pre>eZ\Publish\Core\FieldType\RichText\Value</p=
re></td>
<td class=3D"confluenceTd">An instance of the FieldType's&nbsp;<strong> <co=
de>Value</code> </strong>&nbsp;object.</td>
<td class=3D"confluenceTd">See the example below.</td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"TheRichTextFieldType-Inputformats"><span style=3D"color: rgb(0,0,=
0);">Input formats</span></h3>
<p><span style=3D"color: rgb(0,0,0);">FieldType works with XML and also exp=
ects an XML value as input, wether as a string,&nbsp;<strong> <code>DOMDocu=
ment</code> </strong> <span> object or&nbsp;<span>FieldType's&nbsp;</span> =
<strong> <code>Value</code> </strong> <span>&nbsp;object. When the value is=
 given as a string or a <strong> <code>DOMDocument</code> </strong> <span s=
tyle=3D"color: rgb(0,0,0);">&nbsp;object, it&nbsp;</span>will be checked fo=
r conformance to the one of the supported input formats, then dispatched to=
 the appropriate converter, to be converted to the FieldType's internal for=
mat. No conversion will be performed if providing the value in FieldType's =
internal format, or when providing the value as <span>FieldType's&nbsp;</sp=
an> <strong> <code>Value</code> </strong> <span>&nbsp;object. In the latter=
 case it will be expected that <strong> <code>Value</code> </strong> <span =
style=3D"color: rgb(0,0,0);">&nbsp;object holds the value in FieldType's in=
ternal format.</span> </span> </span> </span> </span></p>
<p><span style=3D"color: rgb(0,0,0);"> <span> <span>Currently supported inp=
ut formats are described in the table below:</span> </span> </span></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Description</th>
</tr>
<tr>
<td class=3D"confluenceTd">Exponential Docbook variant</td>
<td class=3D"confluenceTd">FieldType's internal format</td>
</tr>
<tr>
<td class=3D"confluenceTd">XHTML5 editing format</td>
<td class=3D"confluenceTd">Typically used with in-browser HTML editor</td>
</tr>
<tr>
<td class=3D"confluenceTd">Legacy eZXML format</td>
<td class=3D"confluenceTd">Compatibility with legacy eZXML format, used by =
<a href=3D"/display/EZP/The+XmlText+FieldType">XmlText FieldType</a> <span =
style=3D"color: rgb(0,0,0);">&nbsp;</span></td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"TheRichTextFieldType-ExampleoftheFieldType'sinternalformat"><span=
 style=3D"color: rgb(0,0,0);">Example of the FieldType's internal format</s=
pan></h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;section xmlns=3D"http://docbook.org/ns/docbook"
         xmlns:xlink=3D"http://www.w3.org/1999/xlink"
         xmlns:ezxhtml=3D"http://ez.no/xmlns/exponential/docbook/xhtml"
         xmlns:ezcustom=3D"http://ez.no/xmlns/exponential/docbook/custom"
         version=3D"5.0-variant exponential-1.0"&gt;
    &lt;title ezxhtml:level=3D"2"&gt;This is a title.&lt;/title&gt;
    &lt;para ezxhtml:class=3D"paraClass"&gt;This is a paragraph.&lt;/para&g=
t;
&lt;/section&gt;</pre>=20
</div>
</div>
<h3 id=3D"TheRichTextFieldType-ExampleoftheFieldType'sXHTML5editformat"><sp=
an style=3D"color: rgb(0,0,0);">Example of the FieldType's XHTML5 edit form=
at</span></h3>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>This format is used by eZ Platform Online Editor and will change with it=
s needs as we continue to evolve this part of the UI.</p>
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);"> <br> </span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;section xmlns=3D"http://ez.no/namespaces/exponential5/xhtml5/edit"=
&gt;
    &lt;h2&gt;This is a title.&lt;/h2&gt;
    &lt;p class=3D"paraClass"&gt;This is a paragraph.&lt;/p&gt;
&lt;/section&gt;</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>For more information about internal format and input formats, see <a hre=
f=3D"https://github.com/ezsystems/exponential-kernel/tree/master/eZ/Publish/C=
ore/FieldType/Tests/RichText/Converter/Xslt/_fixtures" class=3D"external-li=
nk" rel=3D"nofollow">FieldType's conversion test fixtures on GitHub</a>.</p=
>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>For example, ezxml does not use explicit level attributes for &lt;header=
&gt; elements, instead &lt;header&gt; element levels are indicated through =
the level of nesting inside &lt;section&gt; elements.</p>
</div>
</div>
<h3 id=3D"TheRichTextFieldType-ExampleofusingXMLdocumentininternalformatasa=
string"><span style=3D"color: rgb(0,0,0);">Example of using XML document in=
 internal format as a string</span></h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">...
=20
$contentService =3D $repository-&gt;getContentService();
$contentTypeService =3D $repository-&gt;getContentTypeService();
=20
$contentType =3D $contentTypeService-&gt;loadContentTypeByIdentifier( "arti=
cle" );
$contentCreateStruct =3D $contentService-&gt;newContentCreateStruct( $conte=
ntType, "eng-GB" );
=20
$inputString =3D &lt;&lt;&lt;DOCBOOK

&lt;section xmlns=3D"http://docbook.org/ns/docbook"
         xmlns:xlink=3D"http://www.w3.org/1999/xlink"
         xmlns:ezxhtml=3D"http://ez.no/xmlns/exponential/docbook/xhtml"
         xmlns:ezcustom=3D"http://ez.no/xmlns/exponential/docbook/custom"
         version=3D"5.0-variant exponential-1.0"&gt;
    &lt;title ezxhtml:level=3D"2"&gt;This is a title.&lt;/title&gt;
    &lt;para ezxhtml:class=3D"paraClass"&gt;This is a paragraph.&lt;/para&g=
t;
&lt;/section&gt;
DOCBOOK;
=20
$contentCreateStruct-&gt;setField( "description", $inputString );
=20
...</pre>=20
</div>
</div>
<h2 id=3D"TheRichTextFieldType-ValueobjectAPI"><span style=3D"color: rgb(0,=
0,0);">Value object API</span></h2>
<p><span style=3D"color: rgb(0,0,0);"> <strong> <code>eZ\Publish\Core\Field=
Type\RichText\Value</code> </strong>&nbsp;offers following properties:</spa=
n></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Property</th>
<th class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Description</th>
</tr>
<tr>
<td class=3D"confluenceTd"><pre>xml</pre></td>
<td class=3D"confluenceTd"><pre>DOMDocument</pre></td>
<td class=3D"confluenceTd">Internal format value as an instance of&nbsp;<sp=
an> <code>DOMDocument</code>.</span></td>
</tr>
</tbody>
</table>
</div>
<h2 id=3D"TheRichTextFieldType-RESTAPIspecifics"><span style=3D"color: rgb(=
0,0,0);">REST API specifics</span></h2>
<h3 id=3D"TheRichTextFieldType-CreatingorupdatingContent"><span style=3D"co=
lor: rgb(0,0,0);">Creating or updating Content</span></h3>
<p><span style=3D"color: rgb(0,0,0);">When creating RichText content with t=
he REST API, it is possible to provide data as a string, using the "<code>x=
ml</code>" fieldValue key:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;fieldValue&gt;
    &lt;value key=3D"xml"&gt;&amp;lt;?xml version=3D"1.0" encoding=3D"UTF-8=
"?&amp;gt;
&amp;lt;section xmlns=3D"http://docbook.org/ns/docbook" xmlns:xlink=3D"http=
://www.w3.org/1999/xlink" xmlns:ezxhtml=3D"http://ez.no/xmlns/exponential/doc=
book/xhtml" xmlns:ezcustom=3D"http://ez.no/xmlns/exponential/docbook/custom" =
version=3D"5.0-variant exponential-1.0"&amp;gt;
&amp;lt;title ezxhtml:level=3D"2"&amp;gt;This is a title.&amp;lt;/title&amp=
;gt;
&amp;lt;/section&amp;gt;
&lt;/value&gt;
&lt;/fieldValue&gt;</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">When the value given over REST API is=
 transformed into a <span>FieldType's&nbsp;</span> <strong> <code>Value</co=
de> </strong> <span>&nbsp;object, it will be treated as a string. This mean=
s you can use any supported input format for input over REST</span>&nbsp;AP=
I.</span></p>
    </div>
</body>
</html>
------=_Part_3931_1517930269.1485855919976--
