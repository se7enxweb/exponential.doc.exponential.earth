Message-ID: <1659100191.3186.1485852320569.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3185_1914995951.1485852320569"

------=_Part_3185_1914995951.1485852320569
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Content view</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Content view</h1>
    <div class=3D"Section1">
        <p><span class=3D"status-macro aui-lozenge aui-lozenge-error">REWRI=
TE</span></p>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485852320406 {padding: 0px;}
div.rbtoc1485852320406 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485852320406 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485852320406">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-TheViewController">The ViewController</a></li>=
=20
<li><a href=3D"#Contentview-Viewselection">View selection</a></li>=20
<li><a href=3D"#Contentview-Contentviewtemplates">Content view templates</a=
>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Availablevariables">Available variables</a></li=
>=20
<li><a href=3D"#Contentview-Templateinheritanceandsub-requests">Template in=
heritance and sub-requests</a></li>=20
<li><a href=3D"#Contentview-RenderingContentitem'sFields">Rendering Content=
 item's Fields</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-GettingrawFieldvalue">Getting raw Field value</=
a></li>=20
<li><a href=3D"#Contentview-UsingtheFieldType'stemplateblock">Using the Fie=
ld Type's template block</a></li>=20
</ul> </li>=20
<li><a href=3D"#Contentview-RenderingContentname">Rendering Content name</a=
>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Translatedname">Translated name</a></li>=20
<li><a href=3D"#Contentview-NamepropertyinContentInfo">Name property in Con=
tentInfo</a></li>=20
<li><a href=3D"#Contentview-Exposingadditionalvariables">Exposing additiona=
l variables</a></li>=20
</ul> </li>=20
</ul> </li>=20
<li><a href=3D"#Contentview-Makinglinkstootherlocations">Making links to ot=
her locations</a></li>=20
<li><a href=3D"#Contentview-Renderembeddedcontentobjects">Render embedded c=
ontent objects</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Usingez_contentcontroller">Using&nbsp;ez_conten=
t controller</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Availablearguments">Available arguments</a></li=
>=20
</ul> </li>=20
</ul> </li>=20
<li><a href=3D"#Contentview-Renderblock">Render block</a></li>=20
<li><a href=3D"#Contentview-ESI">ESI</a></li>=20
<li><a href=3D"#Contentview-Asynchronousrendering">Asynchronous rendering</=
a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Displayadefaulttext">Display a default text</a>=
=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Contentview-Relatedtopics:">Related topics:</a></li>=20
</ul> </li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"Contentview-TheViewController">The ViewController</h2>
<p>eZ Platform comes with a native controller to display your content, know=
n as the <strong><code>ViewController</code></strong>. It is called each ti=
me you try to reach a Content item from its <strong>Url Alias</strong> (hum=
an readable,&nbsp;translatable&nbsp;URI generated for any content based on =
URL patterns defined per Content Type) and is able to render any content pr=
eviously edited in the admin interface or via the <a href=3D"/display/TECHD=
OC/PHP+API+Tutorials">PHP API Tutorials</a>.</p>
<p>It can also be called straight by its direct URI : <code>/content/view/&=
lt;contentId&gt;/&lt;languageCode&gt;</code></p>
<p>A Content item can also have different <strong>view types</strong> (full=
 page, abstract in a list, block in a landing page, etc.). By default the v=
iew type is <strong>full</strong> (for full page), but it can be anything (=
<em>line</em>, <em>block, etc</em>.).</p>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<p class=3D"title">Important note regarding visibility</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The Location visibility flag, which you can change by hiding/revealing i=
n the Platform UI, is not permission-based and thus acts as a simple potent=
ial filter. <strong>It is not meant to restrict access to content</strong>.=
</p>
<p>If you need to restrict access to a given Content item, use <strong>Sect=
ions </strong>or<strong> Object states</strong>, which are permission-based=
.</p>
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"Contentview-Viewselection">View selection</h2>
<p>To display a Content item, the ViewController uses a view manager which =
selects the appropriate template depending on matching rules.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
For more information about the=20
<strong>view provider configuration</strong>, please=20
<a href=3D"/display/TECHDOC/View+provider+configuration">refer to the dedic=
ated page</a>.
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>You can also <a href=3D"/display/TECHDOC/How+to+use+a+custom+controller+=
to+display+a+content+item+or+location">use your own custom controller to re=
nder a content item/location</a>.</p>
</div>
</div>
<h2 id=3D"Contentview-Contentviewtemplates">Content view templates</h2>
<p>A content view template is like any other template, with several specifi=
c aspects.</p>
<h3 id=3D"Contentview-Availablevariables">Available variables</h3>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Variable name</th>
<th class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Description</th>
</tr>
<tr>
<td class=3D"confluenceTd"><strong><code>location</code></strong></td>
<td class=3D"confluenceTd"><a href=3D"https://github.com/ezsystems/ezp-next=
/blob/master/eZ/Publish/Core/Repository/Values/Content/Location.php" class=
=3D"external-link" rel=3D"nofollow">eZ\Publish\Core\Repository\Values\Conte=
nt\Location</a><a href=3D"https://github.com/ezsystems/ezp-next/blob/master=
/eZ/Publish/Core/Repository/Values/Content/Content.php" class=3D"external-l=
ink" rel=3D"nofollow"></a></td>
<td class=3D"confluenceTd">The Location object. Contains meta information o=
n the content (<a href=3D"https://github.com/ezsystems/ezp-next/blob/master=
/eZ/Publish/Core/Repository/Values/Content/ContentInfo.php" class=3D"extern=
al-link" rel=3D"nofollow">ContentInfo</a>)<br>(only when accessing a Locati=
on)&nbsp;</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code><strong>content</strong></co=
de></td>
<td colspan=3D"1" class=3D"confluenceTd"><a href=3D"https://github.com/ezsy=
stems/ezp-next/blob/master/eZ/Publish/Core/Repository/Values/Content/Conten=
t.php" class=3D"external-link" rel=3D"nofollow">eZ\Publish\Core\Repository\=
Values\Content\Content</a></td>
<td colspan=3D"1" class=3D"confluenceTd">The Content item, containing all F=
ields and version information (<a href=3D"https://github.com/ezsystems/ezp-=
next/blob/master/eZ/Publish/Core/Repository/Values/Content/VersionInfo.php"=
 class=3D"external-link" rel=3D"nofollow">VersionInfo</a>)</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code><strong>noLayout</strong></c=
ode></td>
<td colspan=3D"1" class=3D"confluenceTd">Boolean</td>
<td colspan=3D"1" class=3D"confluenceTd">If true, indicates if the Content =
item/Location is to be displayed without any pagelayout (i.e. AJAX, sub-req=
uests, etc.).<br>It's generally <code>false</code> when displaying a Conten=
t item in view type <strong>full</strong>.</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code><strong>viewBaseLayout</stro=
ng></code></td>
<td colspan=3D"1" class=3D"confluenceTd">String</td>
<td colspan=3D"1" class=3D"confluenceTd">The base layout template to use wh=
en the view is requested to be generated outside of the pagelayout (when <c=
ode>noLayout</code> is true).</td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"Contentview-Templateinheritanceandsub-requests">Template inherita=
nce and sub-requests</h3>
<p>Like any template, a content view template can use <a href=3D"http://sym=
fony.com/doc/current/book/templating.html#template-inheritance-and-layouts"=
 class=3D"external-link" rel=3D"nofollow">template inheritance</a>.&nbsp;Ho=
wever keep in mind that your content may be also requested via <a href=3D"h=
ttp://symfony.com/doc/current/book/templating.html#embedding-controllers" s=
tyle=3D"line-height: 1.42857;" class=3D"external-link" rel=3D"nofollow">sub=
-requests</a> (see below how to render embedded content objects), in which =
case you probably don't want the global layout to be used.</p>
<p>If you use different templates for embedded content views, this should n=
ot be a problem. If you'd rather use the same template, you can use an extr=
a <code>noLayout</code>&nbsp;view parameter for the sub-request, and condit=
ionally extend an empty pagelayout:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{% extends noLayout ? viewbaseLayout : "AcmeDemoBundle::pagelayout.=
html.twig" %}

{% block content %}
...
{% endblock %}</pre>=20
</div>
</div>
<h3 id=3D"Contentview-RenderingContentitem'sFields"><span style=3D"color: r=
gb(0,98,147);">Rendering Content item's Fields</span></h3>
<p>As stated above, a view template receives the requested Content item, ho=
lding all Fields.</p>
<p>In order to display the Fields' value the way you want, you can either m=
anipulate the Field Value object itself, or use a custom template.</p>
<h4 id=3D"Contentview-GettingrawFieldvalue">Getting raw Field value</h4>
<p>Having access to the Content item in the template, you can use <a href=
=3D"https://github.com/ezsystems/exponential-kernel/blob/master/eZ/Publish/Co=
re/Repository/Values/Content/Content.php" class=3D"external-link" rel=3D"no=
follow">its public methods</a> to access all the information you need. You =
can also use the&nbsp;<a href=3D"/display/TECHDOC/ez_field_value">ez_field_=
value</a> helper to get the <a href=3D"/display/EZP/FieldTypes+reference">F=
ield value</a>. It will return the correct language if there are several, b=
ased on language priorities.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# With the following, myFieldValue will be in the content's main l=
anguage, regardless of the current language #}
{% set myFieldValue =3D content.getFieldValue( 'some_field_identifier' ) %}
&nbsp;
{# Here myTranslatedFieldValue will be in the current language if a transla=
tion is available. If not, the content's main language will be used #}
{% set myTranslatedFieldValue =3D ez_field_value( content, 'some_field_iden=
tifier' ) %}</pre>=20
</div>
</div>
<h4 id=3D"Contentview-UsingtheFieldType'stemplateblock">Using the Field Typ=
e's template block</h4>
<p>All built-in Field Types come with <a href=3D"https://github.com/ezsyste=
ms/exponential-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resources/vie=
ws/content_fields.html.twig" class=3D"external-link" rel=3D"nofollow">their=
 own Twig template</a>.&nbsp;You can render any Field using this default te=
mplate using the&nbsp;<code>ez_render_field()</code> helper.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ ez_render_field( content, 'some_field_identifier' ) }}</pre>=20
</div>
</div>
<p>Refer to <a href=3D"/display/TECHDOC/ez_render_field"><code>ez_render_fi=
eld()</code> reference page</a> for further information.</p>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>As this makes use of reusable templates, <strong>using <code>ez_render_f=
ield()</code> is the recommended way and is to be considered the best pract=
ice</strong>.</p>
</div>
</div>
<h3 id=3D"Contentview-RenderingContentname">Rendering Content name</h3>
<p>The <strong>name</strong> of a Content item is its generic "title", gene=
rated by the repository based on the Content Type's naming pattern. It ofte=
n takes the form of a normalized value of the first field, but might be a c=
oncatenation of several fields.&nbsp;There are 2 different ways to access t=
o this special property:</p>
<ul>
<li>Through the name property of ContentInfo (not translated).</li>
<li>Through VersionInfo with the TranslationHelper (translated).</li>
</ul>
<h4 id=3D"Contentview-Translatedname">Translated name</h4>
<p><span>The&nbsp;<em>translated name</em>&nbsp;is held in a <code>VersionI=
nfo</code>&nbsp;object, in the names property which consists of hash indexe=
d by locale. You can easily retrieve it in the right language via the&nbsp;=
<code>TranslationHelper</code>&nbsp;service.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">&lt;h2&gt;Translated content name: {{ ez_content_name( content=
 ) }}&lt;/h2&gt;
&lt;h3&gt;Also works from ContentInfo : {{ ez_content_name( content.content=
Info ) }}&lt;/h3&gt;</pre>=20
</div>
</div>
<p>The helper will by default follow the prioritized languages order.&nbsp;=
If there is no translation for your prioritized languages, the helper will =
always return the name in the main language.</p>
<p>You can also&nbsp;<strong>force a locale</strong>&nbsp;in a second argum=
ent:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">{# Force fre-FR locale. #}
&lt;h2&gt;{{ ez_content_name( content, 'fre-FR' ) }}&lt;/h2&gt;</pre>=20
</div>
</div>
<p>You can refer to&nbsp;<a href=3D"/display/TECHDOC/ez_content_name">ez_co=
ntent_name() reference page</a>&nbsp;for further information.</p>
<h4 id=3D"Contentview-NamepropertyinContentInfo">Name property in ContentIn=
fo</h4>
<p>This property is the actual content name, but <strong>in main language o=
nly</strong> (so it is not translated).</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">&lt;h2&gt;Content name: {{ content.contentInfo.name }}&lt;/h2&=
gt;</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">$contentName =3D $content-&gt;contentInfo-&gt;name;</pre>=20
</div>
</div>
<h4 id=3D"Contentview-Exposingadditionalvariables"><span style=3D"font-size=
: 16.0px;line-height: 1.5;">Exposing additional variables</span></h4>
<p>It is possible to expose additional variables in a content view template=
. See&nbsp;<a href=3D"/display/TECHDOC/Parameters+injection+in+content+view=
s">parameters injection in content views</a>&nbsp;or&nbsp;<a href=3D"/displ=
ay/TECHDOC/How+to+use+a+custom+controller+to+display+a+content+item+or+loca=
tion">using your own custom controller to render a content item/location</a=
>.</p>
<h2 id=3D"Contentview-Makinglinkstootherlocations">Making links to other lo=
cations</h2>
<p>Linking to other locations is fairly easy and is done with a <a href=3D"=
http://symfony.com/doc/2.3/book/templating.html#linking-to-pages" class=3D"=
external-link" rel=3D"nofollow">native&nbsp;<code>path()</code> Twig helper=
</a> (or <code>url()</code> if you want to generate absolute URLs). You jus=
t have to pass it the Location object and <code>path()</code> will generate=
 the URLAlias for you.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Assuming "location" variable is a valid eZ\Publish\API\Repositor=
y\Values\Content\Location object #}
&lt;a href=3D"{{ path( location ) }}"&gt;Some link to a location&lt;/a&gt;<=
/pre>=20
</div>
</div>
<p>If you don't have the Location object, but only its ID, you can generate=
 the URLAlias the following way:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;a href=3D"{{ path( "ez_urlalias", {"locationId": 123} ) }}"&gt;=
Some link to a location, with its Id only&lt;/a&gt;</pre>=20
</div>
</div>
<p>You can also use the Content ID. In that case the generated link will po=
int to the Content item's main Location.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;a href=3D"{{ path( "ez_urlalias", {"contentId": 456} ) }}"&gt;S=
ome link from a contentId&lt;/a&gt;</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Under the hood</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>In the backend, <code>path()</code> uses the Router to generate links.</=
p>
<p>This makes it also easy to generate links from PHP, via the <code>router=
</code> service.</p>
</div>
</div>
<p>See also: <a href=3D"/display/TECHDOC/Cross-siteaccess+links">Cross-site=
access links</a></p>
<h2 id=3D"Contentview-Renderembeddedcontentobjects">Render embedded content=
 objects</h2>
<p>Rendering an embedded content from a Twig template is pretty straight fo=
rward as you just need to <strong>do a subrequest with <code>ez_content</co=
de> controller</strong>.</p>
<h3 id=3D"Contentview-Usingez_contentcontroller">Using&nbsp;<code>ez_conten=
t</code> controller</h3>
<p>This controller is exactly the same as&nbsp;<a href=3D"#Contentview-TheV=
iewController">the ViewController presented above</a>. It has one main&nbsp=
;<code>viewAction</code>, that renders a Content item.</p>
<p>You can use this controller from templates with the following syntax:</p=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render( controller( "ez_content:viewAction", {"contentId": 123, =
"viewType": "line"} ) ) }}</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p>The example above renders the Content whose ID is <strong>123</strong>, =
with the view type&nbsp;<strong>line</strong>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Reference of <code>ez_content</code> controller follows the syntax of <e=
m>controllers as a service</em>, <a href=3D"http://symfony.com/doc/current/=
cookbook/controller/service.html" class=3D"external-link" rel=3D"nofollow">=
as explained in Symfony documentation</a>.</p>
</div>
</div>
<h4 id=3D"Contentview-Availablearguments">Available arguments</h4>
<p>As with any controller, you can pass arguments to <code>ez_content:viewL=
ocation</code> or <code>ez_content:viewContent</code> to fit your needs.</p=
>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Description</th>
<th class=3D"confluenceTh">Type</th>
<th colspan=3D"1" class=3D"confluenceTh">Default value</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code>contentId</code></td>
<td class=3D"confluenceTd"><p>ID of the Content item you want to render.<br=
><strong>Only for <code>ez_content:viewContent</code></strong>&nbsp;</p></t=
d>
<td class=3D"confluenceTd">integer</td>
<td class=3D"confluenceTd">N/A</td>
</tr>
<tr>
<td class=3D"confluenceTd"><code>locationId</code></td>
<td class=3D"confluenceTd">ID of the Location you want to render.<br><stron=
g>Only for <code>ez_content:viewLocation</code></strong>&nbsp;</td>
<td class=3D"confluenceTd">integer</td>
<td colspan=3D"1" class=3D"confluenceTd">Content item's main location, if d=
efined</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>viewType</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>The view type you want to rende=
r your Content item/Location in.<br>Will be used by the ViewManager to sele=
ct a corresponding template, according to defined rules.&nbsp;</p><p>Exampl=
e: full, line, my_custom_view, etc.</p></td>
<td colspan=3D"1" class=3D"confluenceTd">string</td>
<td colspan=3D"1" class=3D"confluenceTd">full</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>layout</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>Indicates if the sub-view needs=
 to use the main layout (see <a href=3D"#Contentview-Availablevariables">av=
ailable variables in a view template</a>)</p><p>&nbsp;</p></td>
<td colspan=3D"1" class=3D"confluenceTd">boolean</td>
<td colspan=3D"1" class=3D"confluenceTd">false</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>params</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>Hash of variables you want to i=
nject to sub-template, key being the exposed variable name.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render(
      controller(&nbsp;
          "ez_content:viewAction",&nbsp;
          {
              "contentId": 123,
              "viewType": "line",
              "params": { "some_variable": "some_value" }
          }
      )
) }}</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd">hash</td>
<td colspan=3D"1" class=3D"confluenceTd">empty hash</td>
</tr>
</tbody>
</table>
</div>
<h2 class=3D"gh-header-title" id=3D"Contentview-Renderblock"><span class=3D=
"js-issue-title">Render block</span></h2>
<p>You can specify which controller will be called for a specific block vie=
w match, much like defining custom controllers for location view or content=
 view match.</p>
<p>Also, since there are two possible actions with which one can view a blo=
ck: <code>ez_page:viewBlock</code> and <code>ez_page:viewBlockById</code>, =
it is possible to specify a controller action with a signature matching eit=
her one of the original actions.</p>
<p>Example of configuration in <code>app/config/ezplatform.yml</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    system:
        eng_frontend_group:
            block_view:
                ContentGrid:
                    template: NetgenSiteBundle:block:content_grid.html.twig
                    controller: NetgenSiteBundle:Block:viewContentGridBlock
                    match:
                        Type: ContentGrid
</pre>=20
</div>
</div>
<h2 id=3D"Contentview-ESI">ESI</h2>
<p>Just as for regular Symfony controllers, you can take advantage of ESI a=
nd use different cache levels:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Using ESI</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render_esi( controller( "ez_content:viewAction", {"contentId": 1=
23, "viewType": "line"} ) ) }}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Only scalable variables can be sent via render_esi (not object)</p>
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"Contentview-Asynchronousrendering">Asynchronous rendering</h2>
<p>Symfony also supports asynchronous content rendering with the help of&nb=
sp;<a href=3D"http://mnot.github.com/hinclude/" class=3D"external-link" rel=
=3D"nofollow">hinclude.js</a>&nbsp;library.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Asynchronous rendering</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render_hinclude( controller( "ez_content:viewAction", {"contentI=
d": 123, "viewType": "line"} ) ) }}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Only scalable variables can be sent via render_hinclude (not object)</p>
</div>
</div>
<h3 id=3D"Contentview-Displayadefaulttext">Display a default text</h3>
<p>If you want to display a default text while a controller is loaded async=
hronously, you have to pass a second parameter to your render_hinclude twig=
 function.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Display a default text during asynchronous loading of a controller</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render_hinclude( controller( 'EzCorporateDesignBundle:Header:use=
rLinks' ), { 'default': "&lt;div style=3D'color:red'&gt;loading&lt;/div&gt;=
" }) }}</pre>=20
</div>
</div>
<p>See also: <a href=3D"/display/TECHDOC/How+to+use+a+custom+controller+to+=
display+a+content+item+or+location">How to use a custom controller to displ=
ay a content item or location</a></p>
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><a href=3D"http://mnot.github.com/hinclude/" class=3D"external-link" rel=
=3D"nofollow">hinclude.js</a> needs to be properly included in your layout =
to work.</p>
<p>Please <a href=3D"http://symfony.com/doc/current/book/templating.html#as=
ynchronous-content-with-hinclude-js" class=3D"external-link" rel=3D"nofollo=
w">refer to Symfony documentation</a> for all available options.</p>
</div>
</div>
<p>&nbsp;</p>
<h5 id=3D"Contentview-Relatedtopics:">Related topics:</h5>
<ul>
<li><a href=3D"/display/TECHDOC/View+provider+configuration">View provider =
configuration</a></li>
<li><a href=3D"/display/TECHDOC/Default+view+templates">Default view templa=
tes</a></li>
<li><a href=3D"/display/TECHDOC/Parameters+injection+in+content+views">Para=
meters injection in content views</a></li>
<li><a href=3D"/display/TECHDOC/How+to+use+a+custom+controller+to+display+a=
+content+item+or+location">How to use a custom controller to display a cont=
ent item or location</a></li>
</ul>
    </div>
</body>
</html>
------=_Part_3185_1914995951.1485852320569--
