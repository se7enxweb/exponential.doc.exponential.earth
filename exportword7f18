Message-ID: <317939532.2748.1485850674370.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2747_371183315.1485850674370"

------=_Part_2747_371183315.1485850674370
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Solr Bundle</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Solr Bundle</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>For use with Exponential 5.4, go to<a href=3D"/display/EZP/Solr+Search+En=
gine+Bundle"> the corresponding documentation page </a>which covers the v1.=
0 version of the bundle compatible with Exponential 5.4.</p>
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"SolrBundle-WhatisSolrSearchEngineBundle?">What is Solr Search Eng=
ine Bundle?</h2>
<p><a class=3D"external-link" href=3D"https://github.com/ezsystems/ezplatfo=
rm-solr-search-engine" rel=3D"nofollow">ezplatform-solr-search-engine</a>&n=
bsp;as the package is called, aims to be a transparent drop in replacement =
for the SQL based "Legacy" search engine powering eZ Platform Search API by=
 default. By enabling Solr and re-indexing your content, all your existing =
Search queries using SearchService, will be powered by Solr automatically. =
This allows you to scale up your eZ Platform installation and be able to co=
ntinue development locally against SQL engine, and have a test infrastructu=
re, Staging and Prod powered by Solr, thus removing considerable load from =
your database so it can focus on more important things, like publishing&nbs=
p;<img class=3D"emoticon emoticon-wink" src=3D"450b34994881dc04bd093e73c25e=
da70" data-emoticon-name=3D"wink" alt=3D"(wink)" width=3D"16" height=3D"16"=
>.</p>
<p><em>See <a href=3D"/display/DEVELOPER/Architecture%3A+An+Open+Source+PHP=
+CMS+Built+On+Symfony2+Full+Stack">Architecture page</a> </em> <em> for fur=
ther information on the architecture of eZ Platform.</em></p>
<h2 id=3D"SolrBundle-HowtosetupSolrSearchengine">How to set up Solr Search =
engine</h2>
<h3 id=3D"SolrBundle-Step0:EnableSolrBundle">Step 0: Enable Solr Bundle</h3=
>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Not needed with eZ Platform</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>This step is not needed as of eZ Platform 15.09, however it is kept here=
 for reference in case you have previously disabled the bundle.</p>
</div>
</div>
<p>&nbsp;</p>
<ol>
<li><p>Check in composer.json if you have the <code>ezsystems/ezplatform-so=
lr-search-engine</code> package, if not add/update composer dependencies:</=
p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>command line</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">composer require --no-update ezsystems/ezplatform-solr-search-engi=
ne:~1.0
composer update</pre>=20
</div>
</div></li>
<li>Make sure EzPublishSolrSearchEngineBundle is activated with the followi=
ng line in&nbsp;<code>app/AppKernel.php</code>&nbsp;file: new&nbsp;<code>Ez=
Systems\EzPlatformSolrSearchEngineBundle\EzSystemsEzPlatformSolrSearchEngin=
eBundle()</code></li>
</ol>
<h3 id=3D"SolrBundle-Step1:Configuring&amp;StartingSolr">Step 1: Configurin=
g &amp; Starting Solr</h3>
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
Example here is for single core, look to=20
<a href=3D"https://cwiki.apache.org/confluence/display/solr/Solr+Cores+and+=
solr.xml" class=3D"external-link" rel=3D"nofollow">Solr</a>=20
<a href=3D"https://wiki.apache.org/solr/CoreAdmin" class=3D"external-link" =
rel=3D"nofollow">documentation</a> for configuring Solr in other ways, also=
 see the provided configuration for some examples.
</div>
</div>
<p>&nbsp;</p>
<p>First download and extract Solr, <strong>we currently support Solr 4.10.=
4</strong>:</p>
<ul>
<li><a href=3D"http://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.=
4.tgz" style=3D"line-height: 1.4285715;" class=3D"external-link" rel=3D"nof=
ollow">solr-4.10.4.tgz</a> <span style=3D"line-height: 1.4285715;"> or </sp=
an> <a href=3D"http://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.=
4.zip" style=3D"line-height: 1.4285715;" class=3D"external-link" rel=3D"nof=
ollow">solr-4.10.4.zip</a></li>
</ul>
<p>&nbsp;</p>
<p>Secondly, copy configuration files needed for eZ Solr Search Engine bund=
le,<em> here from the root of your project to the place you extracted Solr<=
/em>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Command line example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;"># Make sure to change the /opt/solr/ path with where you have plac=
ed Solr
cp -R vendor/ezsystems/ezplatform-solr-search-engine/lib/Resources/config/s=
olr/* /opt/solr/example/solr/collection1/conf/

/opt/solr/bin/solr start -f&nbsp;</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p>Thirdly,&nbsp;Solr Bundle does not commit solr index changes directly on=
 repository updates, leaving it up to you to tune this using&nbsp;<code>sol=
rconfig.xml</code>&nbsp;as best practice suggests, example config:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>solrconfig.xml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;autoCommit&gt;
  &lt;!-- autoCommit is here left as-is like it is out of the box in Solr 4=
.10.4, this controls hard commits for durability/replication --&gt;
  &lt;maxTime&gt;${solr.autoCommit.maxTime:15000}&lt;/maxTime&gt;=20
  &lt;openSearcher&gt;false&lt;/openSearcher&gt;=20
&lt;/autoCommit&gt;

&lt;autoSoftCommit&gt;
  &lt;!-- Soft commits controls mainly when changes becomes visible, by def=
ault we change value from -1 (disabled) to 100ms, to try to strike a balanc=
e between Solr performance and staleness of HttpCache generated by Solr que=
ries --&gt;
  &lt;maxTime&gt;${solr.autoSoftCommit.maxTime:100}&lt;/maxTime&gt;=20
&lt;/autoSoftCommit&gt;</pre>=20
</div>
</div>
<h3 id=3D"SolrBundle-Step2:Configuringbundle">Step 2: Configuring bundle</h=
3>
<p>The Solr search engine bundle can be configured many ways, in the config=
 further below it assumes you have parameters setup for solr dsn and search=
 engine <em>(however both are optional)</em>, example:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>parameters.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">    search_engine: solr
    solr_dsn: 'http://localhost:8983/solr'</pre>=20
</div>
</div>
<p><br>On to configuring the bundle.</p>
<h4 id=3D"SolrBundle-SingleCoreexample(default)">Single Core example&nbsp;(=
default)</h4>
<p>Out of the box in eZ Platform the following is enabled for simple setup:=
</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>config.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">ez_search_engine_solr:
    endpoints:
        endpoint0:
            dsn: %solr_dsn%
            core: collection1
    connections:
        default:
            entry_endpoints:
                - endpoint0
            mapping:
                default: endpoint0</pre>=20
</div>
</div>
<div>
<div class=3D"syntaxhighlighter nogutter  php">
<h4 id=3D"SolrBundle-SharedCoreexample">Shared Core example</h4>
<p>In the following example we have decided to separate one language as the=
 installation contains several similar languages, and one very different la=
nguage that should receive proper language analysis for proper stemming and=
 sorting behavior by Solr:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>config.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">ez_search_engine_solr:
    endpoints:
        endpoint0:
            dsn: %solr_dsn%
            core: core0
        endpoint1:
            dsn: %solr_dsn%
            core: core1
    connections:
        default:
            entry_endpoints:
                - endpoint0
                - endpoint1
            mapping:
                translations:
                    jpn-JP: endpoint1
                # Other languages, for instance eng-US and other western la=
nguages are sharing core
                default: endpoint0</pre>=20
</div>
</div>
<h4 id=3D"SolrBundle-MultiCoreexample">Multi Core example</h4>
<p>If full language analysis features are preferred, then each language can=
 be configured to separate cores.</p>
<p><em>Note: Please make sure to test this setup against single core setup,=
 as it might perform worse than single core if your project uses a lot of l=
anguage fallbacks per siteaccess, as&nbsp;queries&nbsp;will then&nbsp;be&nb=
sp;performed&nbsp;across several cores at once.</em></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>config.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">ez_search_engine_solr:
    endpoints:
        endpoint0:
            dsn: %solr_dsn%
            core: core0
        endpoint1:
            dsn: %solr_dsn%
            core: core1
        endpoint2:
            dsn: %solr_dsn%
            core: core2
        endpoint3:
            dsn: %solr_dsn%
            core: core3
        endpoint4:
            dsn: %solr_dsn%
            core: core4
        endpoint5:
            dsn: %solr_dsn%
            core: core5
        endpoint6:
            dsn: %solr_dsn%
            core: core6
    connections:
        default:
            entry_endpoints:
                - endpoint0
                - endpoint1
                - endpoint2
                - endpoint3
                - endpoint4
                - endpoint5
                - endpoint6
            mapping:
                translations:
                    - jpn-JP: endpoint1
                    - eng-US: endpoint2
                    - fre-FR: endpoint3
                    - ger-DE: endpoint4
                    - esp-ES: endpoint5
                # Not really used, but specified here for fallback if more =
languages are suddenly added by content admins
                default: endpoint0
                # Also use separate core for main languages (differs from c=
ontent object to content object)
                # This is useful to reduce number of cores queried for alwa=
ys available language fallbacks
                main_translations: endpoint6</pre>=20
</div>
</div>
<p><em>&nbsp;</em></p>
</div>
</div>
<h3 id=3D"SolrBundle-Step3:Configuringrepositorywiththespecificsearchengine=
">Step 3: Configuring repository with the specific search engine</h3>
<p><span>The following is an example of configuring Solr Search Engine, whe=
re&nbsp;<code>connection</code>&nbsp;name is same as in example above, and =
engine is set to </span> <code>solr</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    repositories:
        default:
            storage: ~
            search:
                engine: %search_engine%
                connection: default</pre>=20
</div>
</div>
<div class=3D"syntaxhighlighter nogutter  php">
<p><code>%search_engine%</code> is a parameter that is configured in <code>=
app/config/parameters.yml</code>, and should be changed from its default va=
lue "<code>legacy</code>" to "<code>solr</code>" to activate Solr as the Se=
arch engine.</p>
</div>
<h3 id=3D"SolrBundle-Step4:Clearprodcache">Step 4: Clear prod cache</h3>
<p>While Symfony dev environment keeps track of changes to yml files, prod =
does not, so to make sure Symfony reads the new config we clear cache:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">php app/console --env=3Dprod cache:clear</pre>=20
</div>
</div>
<h3 id=3D"SolrBundle-Step5:RunCLIindexingcommand">Step 5: Run CLI indexing =
command</h3>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Make sure to configure your setup for indexing</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Some exceptions might happen on indexing if you have not configured your=
 setup correctly, here are the most common issues you may encounter:</p>
<ul>
<li>Exception if Binary files in database have an invalid path prefix
<ul>
<li>Make sure&nbsp;<code>ezplatform.yml</code>&nbsp;configuration&nbsp;<spa=
n> <span> <code>var_dir</code>&nbsp;is configured properly.</span> </span><=
/li>
<li><span> <span>If your database is inconsistent in regards to file paths,=
 try to update entries to be correct <em>(but make sure to make a backup fi=
rst)</em>.</span> </span></li>
</ul></li>
<li>Exception<span>&nbsp;on unsupported Field Types</span>
<ul>
<li><span>Make sure to implement all Field Types in your installation, or t=
o configure missing ones as&nbsp;<a href=3D"/display/DEVELOPER/Null+Field+T=
ype"> <span class=3D"confluence-link">NullType</span>&nbsp;</a>if implement=
ation is not needed.</span></li>
</ul></li>
<li><span>Content not immediately available&nbsp;</span>
<ul>
<li><span>Solr Bundle is on purpose not committing changes directly on Repo=
sitory updates <em>(on indexing)</em>, but letting you control this using S=
olr configuration.&nbsp;</span> <span>Adjust Solr</span> <strong>autoSoftCo=
mmit&nbsp;</strong> <em>visibility of change to search index)</em> <span> a=
nd/or&nbsp;<strong>autoCommit</strong>&nbsp;<em>(hard commit, for durabilit=
y and replication)&nbsp;</em>to balance performance and load on your Solr i=
nstance against needs you have for&nbsp;"<a class=3D"external-link" href=3D=
"https://cwiki.apache.org/confluence/display/solr/Near+Real+Time+Searching"=
 rel=3D"nofollow">NRT</a>".</span></li>
</ul></li>
<li>Running out of memory during indexing
<ul>
<li>In general <span>make sure to run indexing using prod environment to av=
oid debuggers and loggers from filing up memory.</span></li>
<li class=3D"confluence-link">Stash: Disable in_memory cache as recommended=
 on <a href=3D"/display/DEVELOPER/Repository#Repository-PersistenceCache">P=
ersistence cache</a> for long running scripts.</li>
<li>Flysystem: An open issue exists where you can find further info <a href=
=3D"https://jira.ez.no/browse/EZP-25325" style=3D"line-height: 1.42857;" cl=
ass=3D"external-link" rel=3D"nofollow">https://jira.ez.no/browse/EZP-25325<=
/a></li>
</ul></li>
</ul>
</div>
</div>
<p>Last step is to execute initial indexation of data:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">php app/console --env=3Dprod --siteaccess=3D&lt;name&gt; ezplatfor=
m:solr_create_index</pre>=20
</div>
</div>
<p><span class=3D"status-macro aui-lozenge aui-lozenge-current">V1.7.0</spa=
n></p>
<p>Since v1.7.0 the <code>ezplatform:solr_create_index</code> command is de=
precated, use&nbsp;<code><span style=3D"color: rgb(0,0,0);">php app/console=
</span> ezplatform:reindex</code> instead:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">php app/console --env=3Dprod --siteaccess=3D&lt;name&gt; ezplatfor=
m:reindex</pre>=20
</div>
</div>
<h2 id=3D"SolrBundle-ExtendingtheSolrSearchengineBundle">Extending the Solr=
 Search engine Bundle</h2>
<h3 id=3D"SolrBundle-DocumentFieldMappers">Document Field Mappers</h3>
<p><span class=3D"status-macro aui-lozenge aui-lozenge-current aui-lozenge-=
subtle">V1.2+, AVAILABLE IN EZ PLATFORM V1.7+</span></p>
<p>As a developer you will often find the need to index some additional dat=
a in the search engine. The use cases for this are wide, for example the da=
ta could come from an external source <em>(for example from recommendation =
system)</em>, or from an internal source.</p>
<p>The common use case for the latter is indexing data through the Location=
 hierarchy, for example from the parent Location to the child Location, or =
in the opposite direction, indexing child data on the parent Location. The =
reason might be you want to find the content with fulltext search, or you w=
ant to simplify search for a complicated data model.</p>
<p>To do this effectively, you first need to understand how the data is ind=
exed with Solr Search engine. Documents are indexed per translation, as Con=
tent blocks. In Solr, a block is a nested document structure. In our case, =
parent document represents Content, and Locations are indexed as child docu=
ments of the Content. To avoid duplication, full text data is indexed on th=
e Content document only.</p>
<p>Knowing this, you have the option to index additional data on:</p>
<ul>
<li>all block documents (meaning Content and its Locations, all translation=
s)</li>
<li>all block documents per translation</li>
<li>Content documents</li>
<li>Content documents per translation</li>
<li>Location documents</li>
</ul>
<p>Indexing additional data is done by implementing a document field mapper=
 and registering it at one of the five extension points described above. Yo=
u can create the field mapper class anywhere inside your bundle, as long as=
 when you register it as a service, the "class" parameter" in your <code>se=
rvices.yml</code> matches the correct path. We have three different field m=
appers. Each mapper implements two methods, by the same name, but accepting=
 different arguments:</p>
<ul>
<li><code>ContentFieldMapper</code>
<ul>
<li><code>::accept(Content $content)</code></li>
<li><code>::mapFields(Content $content)</code></li>
</ul></li>
<li><code>ContentTranslationFieldMapper</code>
<ul>
<li><code>::accept(Content $content, $languageCode)</code></li>
<li><code>::mapFields(Content $content, $languageCode)</code></li>
</ul></li>
<li><code>LocationFieldMapper</code>
<ul>
<li><code>::accept(Location $content)</code></li>
<li><code>::mapFields(Location $content)</code></li>
</ul></li>
</ul>
<p>These can be used on the extension points by registering them with the c=
ontainer using service tags, as follows:</p>
<ul>
<li>all block documents
<ul>
<li><code>ContentFieldMapper</code></li>
<li><code>exponential.search.solr.document_field_mapper.block</code></li>
</ul></li>
<li>all block documents per translation
<ul>
<li><code>ContentTranslationFieldMapper</code></li>
<li><code>exponential.search.solr.field_mapper.block_translation</code></li>
</ul></li>
<li>Content documents
<ul>
<li><code>ContentFieldMapper</code></li>
<li><code>exponential.search.solr.document_field_mapper.content</code></li>
</ul></li>
<li>Content documents per translation
<ul>
<li><code>ContentTranslationFieldMapper</code></li>
<li><code>exponential.search.solr.field_mapper.content_translation</code></li=
>
</ul></li>
<li>Location documents
<ul>
<li><code>LocationFieldMapper</code></li>
<li><code>exponential.search.solr.field_mapper.location</code></li>
</ul></li>
</ul>
<p>The following example shows how to index data from the parent Location c=
ontent, in order to make it available for full text search on the children =
content. A concrete use case could be indexing webinar data on the webinar =
events, which are children of the webinar. Field mapper could then look som=
ething like this:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&nbsp;&lt;?php

namespace My\WebinarApp;

use EzSystems\EzPlatformSolrSearchEngine\FieldMapper\ContentFieldMapper;
use eZ\Publish\SPI\Persistence\Content\Handler as ContentHandler;
use eZ\Publish\SPI\Persistence\Content\Location\Handler as LocationHandler;
use eZ\Publish\SPI\Persistence\Content;
use eZ\Publish\SPI\Search;

class WebinarEventTitleFulltextFieldMapper extends ContentFieldMapper
{
    /**
     * @var \eZ\Publish\SPI\Persistence\Content\Type\Handler
     */
    protected $contentHandler;

    /**
     * @var \eZ\Publish\SPI\Persistence\Content\Location\Handler
     */
    protected $locationHandler;

    /**
     * @param \eZ\Publish\SPI\Persistence\Content\Handler $contentHandler
     * @param \eZ\Publish\SPI\Persistence\Content\Location\Handler $locatio=
nHandler
     */
    public function __construct(
        ContentHandler $contentHandler,
        LocationHandler $locationHandler
    ) {
        $this-&gt;contentHandler =3D $contentHandler;
        $this-&gt;locationHandler =3D $locationHandler;
    }

    public function accept(Content $content)
    {
        // ContentType with ID 42 is webinar event
        return $content-&gt;versionInfo-&gt;contentInfo-&gt;contentTypeId =
=3D=3D 42;
    }

    public function mapFields(Content $content)
    {
        $mainLocationId =3D $content-&gt;versionInfo-&gt;contentInfo-&gt;ma=
inLocationId;
        $location =3D $this-&gt;locationHandler-&gt;load($mainLocationId);
        $parentLocation =3D $this-&gt;locationHandler-&gt;load($location-&g=
t;parentId);
        $parentContentInfo =3D $this-&gt;contentHandler-&gt;loadContentInfo=
($parentLocation-&gt;contentId);

        return [
            new Search\Field(
                'fulltext',
                $parentContentInfo-&gt;name,
                new Search\FieldType\FullTextField()
            ),
        ];
    }
}</pre>=20
</div>
</div>
<p>Since we index full text data only on the Content document, you would re=
gister the service like this:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">my_webinar_app.webinar_event_title_fulltext_field_mapper:
    class: My\WebinarApp\WebinarEventTitleFulltextFieldMapper
    arguments:
        - '@exponential.spi.persistence.content_handler'
        - '@exponential.spi.persistence.location_handler'
    tags:
        - {name: exponential.search.solr.field_mapper.content}</pre>=20
</div>
</div>
<h2 id=3D"SolrBundle-Providingfeedback">Providing feedback</h2>
<p>After completing the installation you are now free to use your site as u=
sual. If you get any exceptions for missing features, have feedback on perf=
ormance, or want to discuss, join our community slack channel at&nbsp;<a hr=
ef=3D"https://ezcommunity.slack.com/messages/ezplatform-use/" class=3D"exte=
rnal-link" rel=3D"nofollow">https://ezcommunity.slack.com/messages/ezplatfo=
rm-use/</a></p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"SolrBundle-Inthistopic:">In this topic:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485850674344 {padding: 0px;}
div.rbtoc1485850674344 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485850674344 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485850674344">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SolrBundle-WhatisSolrSearchEngineBundle?">What is Solr Sear=
ch Engine Bundle?</a></li>=20
<li><a href=3D"#SolrBundle-HowtosetupSolrSearchengine">How to set up Solr S=
earch engine</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SolrBundle-Step0:EnableSolrBundle">Step 0: Enable Solr Bund=
le</a></li>=20
<li><a href=3D"#SolrBundle-Step1:Configuring&amp;StartingSolr">Step 1: Conf=
iguring &amp; Starting Solr</a></li>=20
<li><a href=3D"#SolrBundle-Step2:Configuringbundle">Step 2: Configuring bun=
dle</a></li>=20
<li><a href=3D"#SolrBundle-Step3:Configuringrepositorywiththespecificsearch=
engine">Step 3: Configuring repository with the specific search engine</a><=
/li>=20
<li><a href=3D"#SolrBundle-Step4:Clearprodcache">Step 4: Clear prod cache</=
a></li>=20
<li><a href=3D"#SolrBundle-Step5:RunCLIindexingcommand">Step 5: Run CLI ind=
exing command</a></li>=20
</ul> </li>=20
<li><a href=3D"#SolrBundle-ExtendingtheSolrSearchengineBundle">Extending th=
e Solr Search engine Bundle</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SolrBundle-DocumentFieldMappers">Document Field Mappers</a>=
</li>=20
</ul> </li>=20
<li><a href=3D"#SolrBundle-Providingfeedback">Providing feedback</a></li>=
=20
</ul>=20
</div>
<p></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2747_371183315.1485850674370
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: file:///C:/450b34994881dc04bd093e73c25eda70

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAA3NCSVQICAjb4U/gAAAAeFBMVEX/
///ht0zds0vbsUrZr0rZr0rZr0rXrUr/01H90VH7z1D5zVD2zVP3y1D1yU/xx07tx1XwxU7vw07k
wFfjuUzht0zhtkvftUvds0vbsUrQslvZr0rXrUrJrl3Vq0nAqF+3oWGllWScj2aUiWiKgmqBfGx4
dm5wcHAZd7u/AAAAKHRSTlMAEXe7u8zd7v//////////////////////////////////////////
apo9sAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtz
IENTNui8sowAAAAUdEVYdENyZWF0aW9uIFRpbWUANi8xLzEzOKlF0AAAAJ1JREFUGJVFT1sCgjAM
KyClbvIQ0Q0pU1Tk/je02wDztaRL2gAI0owFhxQiEhy6Wuu6GzAJvDCKArQtvIK3I61QBsXP69xa
+cMp5J2Q+5toWeRhcnAVTYsnQTg7cFuCt5DivxBjHXBFn9MuiEVCx/nREF2eX6JrLms1NdMsua+R
KlkLuB0qCRbD6X0ZedkXsQyyaUvdGo7l9vpZqP8DgbkMiplsfQgAAAAASUVORK5CYII=
------=_Part_2747_371183315.1485850674370--
