Message-ID: <2056017229.3528.1485853504511.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3527_582547808.1485853504510"

------=_Part_3527_582547808.1485853504510
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Creating the bundle</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Creating the bundle</h1>
    <div class=3D"Section1">
        <p><span style=3D"color: rgb(0,0,0);">Custom FieldTypes follow the =
Symfony 2 extension mechanism: </span><a href=3D"http://symfony.com/doc/cur=
rent/cookbook/bundles/index.html" class=3D"external-link" rel=3D"nofollow">=
<span style=3D"color: rgb(17,85,204);text-decoration: underline;">bundles</=
span></a><span style=3D"color: rgb(0,0,0);">. We can get started with a bun=
dle using the built-in Symfony 2 bundle generator.</span></p>
<h3 id=3D"Creatingthebundle-Generatingthebundle"><span style=3D"color: rgb(=
102,102,102);">Generating the bundle</span></h3>
<p><span style=3D"color: rgb(0,0,0);">From the eZ &nbsp;Publish 5 root, run=
 the following:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">php exponential/console generate:bundle</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">First, we are asked for the namespace=
. As the vendor, we will use EzSystems as the root namespace. This must of =
course be changed to whatever identifies you as a vendor (your name, compan=
y name, etc). We then choose a preferably unique name for the field type it=
self, and make the name end with Bundle. I=E2=80=99ve chosen TweetFieldType=
Bundle.</span></p>
<p><span style=3D"color: rgb(0,0,0);">&nbsp;</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Bundle namespace: EzSystems/TweetFieldTypeBundle&lt;enter&gt;
</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">We must next input the bundle=E2=80=
=99s name. Nothing exotic here: we concatenate the vendor=E2=80=99s namespa=
ce and the bundle=E2=80=99s namespace, which is the default. We just hit en=
ter:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Bundle name [EzSystemsTweetFieldTypeBundle]:&lt;enter&gt;</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">We are then asked for the target dire=
ctory. We will begin within the src folder, but we could (and should !) ver=
sion it and have it moved to vendor at some point. Again, this is the defau=
lt, and we just hit enter.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Target directory [/home/bertrand/www/exponential5/src]:&lt;enter&gt;=
</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">We must then specify which format the=
 generation must be generated as. We will use yml, since it is what we use =
in Exponential 5 itself. Of course, any other format could have been used.</=
span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Configuration format (yml, xml, php, or annotation): yml&lt;enter&=
gt;</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">The generator will then offer us to g=
enerate the whole directory structure for us. Since our bundle isn=E2=80=99=
t really a standard Symfony full stack bundle, we decline.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Do you want to generate the whole directory structure [no]? no&lt;=
enter&gt;</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">We then get a summary of what will be=
 generated:</span></p>
<p><span style=3D"color: rgb(0,0,0);">&nbsp;</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">You are going to generate a "EzSystems\TweetFieldTypeBundle\EzSyst=
emsTweetFieldTypeBundle" bundle
in "/home/bertrand/www/exponential5/src/" using the "yml" format.
Do you confirm generation [yes]?&lt;enter&gt;</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">After generation, the wizard will off=
er us to update the kernel with our bundle (yes please), and to update the =
app=E2=80=99s routing with our bundle=E2=80=99s route file (no thanks).</sp=
an></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">Generating the bundle code: OK
Checking that the bundle is autoloaded: OK
Confirm automatic update of your Kernel [yes]? &lt;enter&gt;
Enabling the bundle inside the Kernel: OK
Confirm automatic update of the Routing [yes]? no &lt;enter&gt;

</pre>=20
</div>
</div>
<p><span style=3D"color: rgb(0,0,0);">Our bundle should have been generated=
. Navigate to src/EzSystems/EzSystemsTweetBundle, and you should see this s=
tructure:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">$ ls -l src/EzSystems/TweetFieldTypeBundle
Controller
DependencyInjection
EzSystemsTweetFieldTypeBundle.php
Resources
Tests</pre>=20
</div>
</div>
<p><span><br><span style=3D"color: rgb(0,0,0);">&nbsp;</span><span style=3D=
"color: rgb(0,0,0);">Feel free to delete the Controller folder, since we wo=
n=E2=80=99t use it in this tutorial. It could have been useful had our fiel=
d type required an interface of its own.</span></span></p>
    </div>
</body>
</html>
------=_Part_3527_582547808.1485853504510--
