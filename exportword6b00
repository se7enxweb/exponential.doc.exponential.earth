Message-ID: <1116000134.3542.1485853547046.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3541_922169687.1485853547045"

------=_Part_3541_922169687.1485853547045
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>How to implement a Custom Tag for XMLText FieldType</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>How to implement a Custom Tag for XMLText FieldType</h1>
    <div class=3D"Section1">
        <p><span class=3D"status-macro aui-lozenge aui-lozenge-current">EZP=
 5.2 / 2013.07</span></p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Version compatibility</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>This recipe is compatible with <strong>Exponential 5.2 / 2013.07</strong>=
</p>
</div>
</div>
<p>&nbsp;</p>
<h1 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-Customtags">Custom ta=
gs</h1>
<p><strong>XMLText fieldtype</strong> supports a limited number of tags in =
its internal eZXML format to render HTML5. However, it is possible to exten=
d the rendering by implementing <strong>custom tags</strong>.</p>
<p>As HTML5 rendering in Exponential is done through <a href=3D"http://en.wi=
kipedia.org/wiki/XSLT" class=3D"external-link" rel=3D"nofollow">XSLT</a>, y=
ou will need to create an XSL stylesheet to extend the rendering.</p>
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Note on legacy custom tags</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>To be able to edit a custom tag from admin interface, you'll still need =
to <a href=3D"http://doc.ez.no/Exponential/Technical-manual/4.x/Reference/Da=
tatypes/XML-block/Custom-tags" class=3D"external-link" rel=3D"nofollow">reg=
ister your custom tag in the legacy kernel</a> (at least the configuration =
part, template not being mandatory for edition).</p>
</div>
</div>
<p><br><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485853546863 {padding: 0px;}
div.rbtoc1485853546863 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485853546863 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485853546863">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-Customtags">Cus=
tom tags</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-Registeryourcus=
tomXSLstylesheet">Register your custom XSL stylesheet</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-Exampleofacusto=
mXSL">Example of a custom XSL</a></li>=20
</ul> </li>=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-UsingPre-conver=
ters">Using Pre-converters</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-Registeringapre=
-converter">Registering a pre-converter</a></li>=20
</ul> </li>=20
<li><a href=3D"#HowtoimplementaCustomTagforXMLTextFieldType-Overridingexist=
ingXSLtemplates">Overriding existing XSL templates</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-RegisteryourcustomXSL=
stylesheet">Register your custom XSL stylesheet</h2>
<p>To activate your custom tag rendering, you need to create an XSL stylesh=
eet and to register it properly:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    system:
        my_siteaccess:
            fieldtypes:
                ezxml:
                    custom_tags:
                        # Adding exponential/Resources/my_custom.xsl (priorit=
y defaults to 0).
                        - { path: %kernel.root_dir%/Resources/my_custom.xsl=
 }
                        # Adding src/Acme/TestBundle/Resources/another_cust=
om.xsl with priority 10.
                        - { path: %kernel.root_dir%/../src/Acme/TestBundle/=
Resources/another_custom.xsl, priority: 10 }</pre>=20
</div>
</div>
<p>Each entry under <code>custom_tags</code> is a hash having the following=
 properties:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh"><code>path</code></th>
<td class=3D"confluenceTd"><p><strong>Absolute path</strong> to the XSL to =
import.</p>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span style=3D"color: rgb(0,51,102);">Use </span><code>%kernel.root_dir%=
</code><span style=3D"color: rgb(0,51,102);"> parameter to start from </spa=
n><code>exponential/</code><span style=3D"color: rgb(0,51,102);"> folder.</sp=
an></p>
</div>
</div></td>
</tr>
<tr>
<td class=3D"highlight-grey confluenceTd" data-highlight-colour=3D"grey"><c=
ode><strong>priority</strong></code></td>
<td class=3D"confluenceTd"><p>Priority of your stylesheet in the sequence o=
f importing. The higher it is, the higher precedence it will have.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>In XSL imports, in case of template overrides, the last imported XSL alw=
ays wins. Hence custom XSL are loaded in reverse priority order.</p>
</div>
</div></td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-ExampleofacustomXSL">=
Example of a custom XSL</h3>
<p>The following example shows how to render the <a href=3D"https://github.=
com/lolautruche/jvEmbedTag/blob/master/design/standard/templates/content/da=
tatype/view/ezxmltags/youtube.tpl" class=3D"external-link" rel=3D"nofollow"=
>YouTube embed custom tag from jvEmbed legacy extension</a> (see also <a hr=
ef=3D"https://github.com/lolautruche/jvEmbedTag/blob/master/settings/conten=
t.ini.append.php" class=3D"external-link" rel=3D"nofollow">related legacy c=
onfiguration for content</a>).</p>
<p>Note that all selected attributes are in <code>custom</code> namespace (=
this is the case for all custom tags attributes in internal eZXML).</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>youtube.xsl</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">&lt;?xml version=3D"1.0" encoding=3D"UTF-8"?&gt;
&lt;xsl:stylesheet
        version=3D"1.0"
        xmlns:xsl=3D"http://www.w3.org/1999/XSL/Transform"
        xmlns:xhtml=3D"http://ez.no/namespaces/exponential3/xhtml/"
        xmlns:custom=3D"http://ez.no/namespaces/exponential3/custom/"
        xmlns:image=3D"http://ez.no/namespaces/exponential3/image/"
        exclude-result-prefixes=3D"xhtml custom image"&gt;

    &lt;xsl:output method=3D"html" indent=3D"yes" encoding=3D"UTF-8"/&gt;
&nbsp;
    &lt;!-- Template below will match the following custom tag: --&gt;
    &lt;!-- &lt;custom name=3D"youtube" custom:video=3D"//www.youtube.com/e=
mbed/MfOnq-zXXBw" custom:videoWidth=3D"640" custom:videoHeight=3D"380"/&gt;=
 --&gt;
    &lt;xsl:template match=3D"custom[@name=3D'youtube']"&gt;
        &lt;div class=3D"jvembed jvembed-youtube"&gt;
            &lt;iframe&gt;
                &lt;xsl:attribute name=3D"width"&gt;&lt;xsl:value-of select=
=3D"@custom:videoWidth"/&gt;&lt;/xsl:attribute&gt;
                &lt;xsl:attribute name=3D"height"&gt;&lt;xsl:value-of selec=
t=3D"@custom:videoHeight"/&gt;&lt;/xsl:attribute&gt;
                &lt;xsl:attribute name=3D"src"&gt;&lt;xsl:value-of select=
=3D"@custom:video"/&gt;&lt;/xsl:attribute&gt;
                &lt;xsl:attribute name=3D"frameborder"&gt;0&lt;/xsl:attribu=
te&gt;
                &lt;xsl:attribute name=3D"allowfullscreen"/&gt;
            &lt;/iframe&gt;
        &lt;/div&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>PHP functions are registered in the XSLTProcessor, so you can use global=
 PHP functions and static method calls to enhance the XSLT process (using <=
code>php-function</code> and <code>php-functionString</code> XSLT functions=
, see <a href=3D"http://php.net/manual/en/xsltprocessor.registerphpfunction=
s.php" class=3D"external-link" rel=3D"nofollow">further info</a>).</p>
<p>However, given this is only for static PHP code,<strong> it is only suit=
able for very simple use cases!</strong> For most use cases, where you need=
 to inject some service for your logic, for instance Repository, you'll nee=
d to use <strong>Pre-Converters</strong> instead (see below).</p>
</div>
</div>
<h2 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-UsingPre-converters">=
Using Pre-converters</h2>
<p>Pre-converters are services that pre-process the internal XML before the=
 XSLT rendering occurs. It can be useful if you need to manipulate the data=
 stored in eZXML.</p>
<p>An example of use is <a href=3D"https://github.com/lolautruche/EmbedTagB=
undle/blob/master/Converter/XmlText/VideoPreConverter.php" class=3D"externa=
l-link" rel=3D"nofollow">what is done in the EmbedTagBundle for videos</a> =
: video links are transformed in embed links.</p>
<p>Pre-converters receive the whole DOMDocument object for the current fiel=
d. So you can easily do XPath queries and do some DOM manipulation against =
it.</p>
<h3 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-Registeringapre-conve=
rter">Registering a pre-converter</h3>
<p>All pre-converters need to:</p>
<ul>
<li>Implement&nbsp;<span><a rel=3D"nofollow"><code>eZ\Publish\Core\FieldTyp=
e\XmlText\Converter</code></a> interface.</span></li>
<li><span>Be registered as a service, with&nbsp;<code>exponential.ezxml.conve=
rter</code> tag.</span></li>
</ul>
<div>
<p>&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>services.yml in a bundle</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    my.ezxml.pre_converter.class: Acme\TestBundle\XmlText\MyPreConverter
&nbsp;
services:
    my.ezxml.pre_converter:
        class: %my.ezxml.pre_converter.class%
        arguments: [@someDependency, @someOtherDependency]
        tags:
            - { name: exponential.ezxml.converter }</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>MyPreConverter</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php

namespace Acme\TextBundle\XmlText;

use eZ\Publish\Core\FieldType\XmlText\Converter;
use DOMDocument;

class MyPreConverter implements Converter
{
    public function __construct( $someDependency, $someOtherDependency )
    {
        // ...
    }

    /**
     * Does a partial conversion work on $xmlDoc.
     *
     * @param \DOMDocument $xmlDoc
     *
     * @return null
     */
    public function convert( DOMDocument $xmlDoc )
    {
        // Do something on $xmlDoc
        // You can for example walk through the DOM, do XPath queries, add/=
modify attributes...
    }
}

</pre>=20
</div>
</div>
<h2 id=3D"HowtoimplementaCustomTagforXMLTextFieldType-OverridingexistingXSL=
templates">Overriding existing XSL templates</h2>
<p>As XSL stylesheets apply for the whole resulted DOM, you can of course o=
verride existing templates. This is where the <code>priority</code> propert=
y in configuration takes its sense.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Built-in XSL templates have <strong>0</strong> as priority</p>
</div>
</div>
<p>&nbsp;</p>
<p>Consider the following example to switch from usage of <code>&lt;b&gt;</=
code> to <code>&lt;strong&gt;</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>strong.xsl</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">&lt;?xml version=3D"1.0" encoding=3D"UTF-8"?&gt;
&lt;xsl:stylesheet
        version=3D"1.0"
        xmlns:xsl=3D"http://www.w3.org/1999/XSL/Transform"
        xmlns:xhtml=3D"http://ez.no/namespaces/exponential3/xhtml/"
        xmlns:custom=3D"http://ez.no/namespaces/exponential3/custom/"
        xmlns:image=3D"http://ez.no/namespaces/exponential3/image/"
        exclude-result-prefixes=3D"xhtml custom image"&gt;
&nbsp;
    &lt;!-- Original template transforms into &lt;b&gt; --&gt;
    &lt;xsl:template match=3D"strong"&gt;
        &lt;strong&gt;
            &lt;xsl:copy-of select=3D"@*"/&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/strong&gt;
    &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    system:
        my_siteaccess:
            fieldtypes:
                ezxml:
                    custom_tags:
                        # Adding a higher priority to ensure built-in templ=
ate will be overriden.
                        - { path: %kernel.root_dir%/Resources/strong.xsl, p=
riority: 10 }</pre>=20
</div>
</div>
</div>
    </div>
</body>
</html>
------=_Part_3541_922169687.1485853547045--
