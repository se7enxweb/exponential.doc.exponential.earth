Message-ID: <1175402701.2852.1485851013798.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2851_1482180371.1485851013797"

------=_Part_2851_1482180371.1485851013797
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Search</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Search</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<h1 class=3D"confluence-link" id=3D"Search-Introduction">Introduction</h1>
<p class=3D"confluence-link">eZ Platform exposes very powerful&nbsp;Search =
API, allowing both Full Text search and querying the content repository usi=
ng several built-in <span class=3D"confluence-link">Criteria</span> and&nbs=
p;<span class=3D"confluence-link">Sort Clauses</span>.&nbsp;These are suppo=
rted across several search engines, allowing you to plug in another search =
engine without changing your code.</p>
<h2 id=3D"Search-AvailableSearchEngines">Available Search Engines</h2>
<p>Currently 3 search engines exists on their own eZ Platform Bundles:</p>
<ol>
<li><a href=3D"/display/DEVELOPER/Legacy+Search+Engine+Bundle">Legacy</a>, =
a database-powered search engines for basic needs.</li>
<li><a href=3D"/display/DEVELOPER/Solr+Bundle">Solr</a>, an integration pro=
viding better overall performance, much better scalability and support for =
more advance search capabilities&nbsp;<span class=3D"status-macro aui-lozen=
ge aui-lozenge-success">RECOMMENDED</span></li>
<li><a href=3D"/display/DEVELOPER/ElasticSearch+Bundle">ElasticSearch</a>, =
similar to Solr integration, however currently not under active development=
&nbsp;<span class=3D"status-macro aui-lozenge aui-lozenge-error">EXPERIMENT=
AL, NOT SUPPORTED</span></li>
</ol>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1 id=3D"Search-Usage">Usage</h1>
<h2 id=3D"Search-SearchCriteriaandSortClauses">Search Criteria and Sort Cla=
uses</h2>
<p><span class=3D"confluence-link">Search <span class=3D"confluence-link">C=
riteria</span></span><span class=3D"confluence-link">&nbsp;</span> and <spa=
n class=3D"confluence-link">Sort Clauses</span> are <code>value</code> obje=
ct classes used for building Search Query, to define filter criteria and or=
dering of the result set. eZ Platform provides a number of standard Criteri=
a and Sort Clauses that you can use out of the box and that should cover th=
e majority of use cases.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of standard ContentId criterion</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;?php

namespace eZ\Publish\API\Repository\Values\Content\Query\Criterion;

use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\Operator\Speci=
fications;
use eZ\Publish\API\Repository\Values\Content\Query\CriterionInterface;

/**
 * A criterion that matches content based on its id
 *
 * Supported operators:
 * - IN: will match from a list of ContentId
 * - EQ: will match against one ContentId
 */
class ContentId extends Criterion implements CriterionInterface
{
    /**
     * Creates a new ContentId criterion
     *
     * @param int|int[] $value One or more content Id that must be matched.
     *
     * @throws \InvalidArgumentException if a non numeric id is given
     * @throws \InvalidArgumentException if the value type doesn't match th=
e operator
     */
    public function __construct( $value )
    {
        parent::__construct( null, null, $value );
    }

    public function getSpecifications()
    {
        $types =3D Specifications::TYPE_INTEGER | Specifications::TYPE_STRI=
NG;
        return array(
            new Specifications( Operator::IN, Specifications::FORMAT_ARRAY,=
 $types ),
            new Specifications( Operator::EQ, Specifications::FORMAT_SINGLE=
, $types ),
        );
    }

    public static function createFromQueryBuilder( $target, $operator, $val=
ue )
    {
        return new self( $value );
    }
}</pre>=20
</div>
</div>
<h3 id=3D"Search-SearchEngineHandlingofSearchCriteriaandSortClauses">Search=
 Engine Handling of Search Criteria and Sort Clauses</h3>
<p>As&nbsp;<span class=3D"confluence-link">Search Criteria</span> and <span=
 class=3D"confluence-link">Sort Clauses</span> are <code>value</code> objec=
ts which are used to define the Query from API perspective, they are are co=
mmon for all storage engines. Each storage engine needs to implement its ow=
n <code>handler</code> for corresponding Criterion and Sort Clause <code>va=
lue</code> object, which will be used to translate the value object into st=
orage specific search query.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of ContentId criterion handler in Legacy Storage Engine</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;?php

namespace eZ\Publish\Core\Search\Legacy\Content\Common\Gateway\CriterionHan=
dler;

use eZ\Publish\Core\Search\Legacy\Content\Common\Gateway\CriterionHandler;
use eZ\Publish\Core\Search\Legacy\Content\Common\Gateway\CriteriaConverter;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\Core\Persistence\Database\SelectQuery;

/**
 * Content ID criterion handler
 */
class ContentId extends CriterionHandler
{
    /**
     * Check if this criterion handler accepts to handle the given criterio=
n.
     *
     * @param \eZ\Publish\API\Repository\Values\Content\Query\Criterion $cr=
iterion
     *
     * @return boolean
     */
    public function accept( Criterion $criterion )
    {
        return $criterion instanceof Criterion\ContentId;
    }


    /**
     * Generate query expression for a Criterion this handler accepts
     *
     * accept() must be called before calling this method.
     *
     * @param \eZ\Publish\Core\Search\Legacy\Content\Common\Gateway\Criteri=
aConverter $converter
     * @param \eZ\Publish\Core\Persistence\Database\SelectQuery $query
     * @param \eZ\Publish\API\Repository\Values\Content\Query\Criterion $cr=
iterion
     *
     * @return \eZ\Publish\Core\Persistence\Database\Expression
     */
    public function handle( CriteriaConverter $converter, SelectQuery $quer=
y, Criterion $criterion )
    {
        return $query-&gt;expr-&gt;in(
            $this-&gt;dbHandler-&gt;quoteColumn( "id", "ezcontentobject" ),
            $criterion-&gt;value
        );
    }
}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of ContentId criterion handler in Solr Storage engine</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: true; theme: Eclipse" style=3D"font-size:=
12px;">&lt;?php

namespace EzSystems\EzPlatformSolrSearchEngine\Query\Content\CriterionVisit=
or;

use EzSystems\EzPlatformSolrSearchEngine\Query\CriterionVisitor;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\Operator;

/**
 * Visits the ContentId criterion
 */
class ContentIdIn extends CriterionVisitor
{
    /**
     * CHeck if visitor is applicable to current criterion
     *
     * @param Criterion $criterion
     *
     * @return boolean
     */
    public function canVisit( Criterion $criterion )
    {
        return
            $criterion instanceof Criterion\ContentId &amp;&amp;
            ( ( $criterion-&gt;operator ?: Operator::IN ) =3D=3D=3D Operato=
r::IN ||
              $criterion-&gt;operator =3D=3D=3D Operator::EQ );
    }


    /**
     * Map field value to a proper Solr representation
     *
     * @param Criterion $criterion
     * @param CriterionVisitor $subVisitor
     *
     * @return string
     */
    public function visit( Criterion $criterion, CriterionVisitor $subVisit=
or =3D null )
    {
        return '(' .
            implode(
                ' OR ',
                array_map(
                    function ( $value )
                    {
                        return 'id:"' . $value . '"';
                    },
                    $criterion-&gt;value
                )
            ) .
            ')';
    }
}</pre>=20
</div>
</div>
<h3 id=3D"Search-CustomCriteriaandSortClauses">Custom Criteria and Sort Cla=
uses</h3>
<p>Sometimes you will find that standard&nbsp;<span class=3D"confluence-lin=
k"><span class=3D"confluence-link">Search Criteria</span></span> and <span =
class=3D"confluence-link">Sort Clauses</span> provided with Exponential are =
not sufficient for you needs. Most often this will be the case if you have =
developed a custom <span class=3D"confluence-link">Field Type</span> using =
external storage, which therefore can not be searched using standard Field =
Criterion.</p>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<p class=3D"title">On use of Field Criterion/SortClause with large database=
s</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Field Criterion/SortClause does not perform well by design when using SQ=
L database, so if you have a large database and want to use them you either=
 need to use Solr search engine, or develop your own Custom Criterion / Sor=
t Clause to avoid use of attributes (Fields) database table, and instead us=
es a custom simplified table which can handle the amount of data you have.<=
/p>
</div>
</div>
<p>In this case you can implement a custom Criterion or Sort Clause, togeth=
er with the corresponding handlers for the storage engine you are using.</p=
>
<h3 id=3D"Search-DifferencebetweenContentandLocationSearch">Difference betw=
een Content and Location Search</h3>
<p>These are two basic types of searches, you can either search for Locatio=
ns or for Content. Each has dedicated methods in Search Service:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Type of search</th>
<th class=3D"confluenceTh">Method in Search Service</th>
</tr>
<tr>
<td class=3D"confluenceTd">Content</td>
<td class=3D"confluenceTd"><code>findContent()</code></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd">Content</td>
<td colspan=3D"1" class=3D"confluenceTd"><code>findSingle()</code></td>
</tr>
<tr>
<td class=3D"confluenceTd">Location</td>
<td class=3D"confluenceTd"><code>findLocations()</code></td>
</tr>
</tbody>
</table>
</div>
<p>All Criteria and Sort Clauses will be accepted with Location Search, but=
 not all of them can be used with Content Search. Reason for this is that w=
hile one Location always has exactly one Content item, one Content item can=
 have multiple Locations. In this context some Criteria and Sort Clauses wo=
uld produce ambiguous queries and such will therefore not be accepted by Co=
ntent Search.</p>
<p>Content Search will explicitly refuse to accept Criteria and Sort Clause=
s implementing these abstract classes:</p>
<ul>
<li><pre>eZ\Publish\API\Repository\Values\Content\Query\<span>Criterion\</s=
pan>Location</pre></li>
<li><pre>eZ\Publish\API\Repository\Values\Content\SortClause\<span>Criterio=
n\</span>Location</pre></li>
</ul>
<h3 id=3D"Search-HowtoconfigureyourownCriterionandSortClauseHandlers">How t=
o configure your own Criterion and Sort Clause Handlers</h3>
<p>After you have implemented your Criterion / Sort Clause and its handler,=
 you will need to configure the handler for the service container using ded=
icated service tags for each type of search. Doing so will automatically re=
gister it and handle your Criterion / Search Clause when it is given as a p=
arameter to one of the Search Service methods.</p>
<p>Available tags for Criterion handlers in Legacy Storage Engine are:</p>
<ul>
<li><code>exponential.<span>search</span>.legacy.gateway.criterion_handler.co=
ntent</code></li>
<li><code>exponential.<span>search</span>.legacy.gateway.criterion_handler.lo=
cation</code></li>
</ul>
<p>Available tags for Sort Clause handlers in Legacy Storage Engine are:</p=
>
<ul>
<li><code>exponential.<span>search</span>.legacy.gateway.sort_clause_handler.=
content</code></li>
<li><code>exponential.<span>search</span>.legacy.gateway.sort_clause_handler.=
location</code></li>
</ul>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>You will find all the native handlers and the tags for the Legacy Storag=
e Engine available in the eZ/Publish/Core/settings/storage_engines/legacy<s=
pan class=3D"separator">/</span><strong class=3D"final-path">search_query_h=
andlers.yml</strong> file.</p>
</div>
</div>
<h4 id=3D"Search-ExampleofregisteringContentIdCriterionhandler,commonforbot=
hContentandLocationSearch">Example of registering ContentId Criterion handl=
er, common for both Content and Location Search</h4>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Registering Criterion handler</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">services:
  &nbsp; exponential.search.legacy.gateway.criterion_handler.common.content_i=
d:
        class: eZ\Publish\Core\Search\Legacy\Content\Common\Gateway\Criteri=
onHandler\ContentId
        arguments: [@exponential.api.storage_engine.legacy.dbhandler]
        tags:
          - {name: exponential.search.legacy.gateway.criterion_handler.conten=
t}
          - {name: exponential.search.legacy.gateway.criterion_handler.locati=
on}</pre>=20
</div>
</div>
<h4 id=3D"Search-ExampleofregisteringDepthSortClausehandlerforLocationSearc=
h">Example of registering Depth Sort Clause handler for Location Search</h4=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Registering Sort Clause handler</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">exponential.search.legacy.gateway.sort_clause_handler.location.depth=
:
    class: eZ\Publish\Core\Search\Legacy\Content\Location\Gateway\SortClaus=
eHandler\Location\Depth
    arguments: [@exponential.api.storage_engine.legacy.dbhandler]
    tags:
        - {name: exponential.search.legacy.gateway.sort_clause_handler.locati=
on}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">See also</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>See also <a href=3D"http://symfony.com/doc/current/book/service_containe=
r.html#service-parameters" class=3D"external-link" rel=3D"nofollow">Symfony=
 documentation about Service Container</a> for passing parameters</p>
</div>
</div>
<p>&nbsp;</p>
<h3 class=3D"line" id=3D"Search-CriteriaIndependenceExample">Criteria Indep=
endence Example</h3>
<div class=3D"line">
With Exponential you can have multiple location content. Criterions do not r=
elate to others criterion you can&nbsp; use the Public API and Criterion to=
 search this content, it can lead to a comportement you are not expecting.
</div>
<div class=3D"line">
Example of Criterions not relating to each other:
</div>
<div class=3D"line">
&nbsp;
</div>
<div class=3D"line">
There is a Content with two Locations: Location A and Location B
</div>
<ul>
<li class=3D"line">Location A is visible</li>
<li class=3D"line">Location B is hidden</li>
</ul>
<div class=3D"line">
&nbsp;
</div>
<div class=3D"line">
Searching with LocationId criterion with Location B id and Visibility crite=
rion with Visibility::VISIBLE will return the Content because conditions ar=
e satisfied:
</div>
<ul>
<li class=3D"line">Content has Location B</li>
<li class=3D"line">Content is visible (it has Location A that is visible)</=
li>
</ul>
<div class=3D"line">
&nbsp;
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
=20
use eZ\Publish\API\Repository\Values\Content\Query;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\LogicalAnd;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\LocationId;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\Visibility;
=20
/** @var string|int $locationBId */
/** @var \eZ\Publish\API\Repository\Repository $repository */

$searchService =3D $repository-&gt;getSearchService();
=20
$query =3D new Query(
    array(
        'filter' =3D&gt; new LogicalAnd(
            array(
                new LocationId( $locationBId ),
                new Visibility( Visibility::VISIBLE ),
            )
        )
    )
);
=20
$searchResult =3D $searchService-&gt;findContent( $query );
=20
// Content is found
$content =3D $searchResult-&gt;searchHits[0];</pre>=20
</div>
</div>
<h2 id=3D"Search-Reindexing">Reindexing</h2>
<p>To (re)create the search engine index for configured search engines (per=
 siteaccess repository), use the <code><span style=3D"color: rgb(0,0,0);">p=
hp app/console</span> ezplatform:reindex</code> command.</p>
<h1 id=3D"Search-Reference">Reference</h1>
<h2 id=3D"Search-SearchCriteriaReference">Search Criteria Reference</h2>
<p>See the <a href=3D"/display/DEVELOPER/Search+Criteria+Reference">dedicat=
ed page with Search Criteria reference</a>.</p>
<h2 id=3D"Search-SortClausesReference">Sort Clauses Reference</h2>
<p>See the <a href=3D"/display/DEVELOPER/Sort+Clauses+Reference">dedicated =
page with Sort Clauses reference</a>.</p>
<p>&nbsp;</p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"Search-Inthistopic:">In this topic:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485851013763 {padding: 0px;}
div.rbtoc1485851013763 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485851013763 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485851013763">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Search-Introduction">Introduction</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Search-AvailableSearchEngines">Available Search Engines</a>=
</li>=20
</ul> </li>=20
<li><a href=3D"#Search-Usage">Usage</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Search-SearchCriteriaandSortClauses">Search Criteria and So=
rt Clauses</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Search-SearchEngineHandlingofSearchCriteriaandSortClauses">=
Search Engine Handling of Search Criteria and Sort Clauses</a></li>=20
<li><a href=3D"#Search-CustomCriteriaandSortClauses">Custom Criteria and So=
rt Clauses</a></li>=20
<li><a href=3D"#Search-DifferencebetweenContentandLocationSearch">Differenc=
e between Content and Location Search</a></li>=20
<li><a href=3D"#Search-HowtoconfigureyourownCriterionandSortClauseHandlers"=
>How to configure your own Criterion and Sort Clause Handlers</a></li>=20
<li><a href=3D"#Search-CriteriaIndependenceExample">Criteria Independence E=
xample</a></li>=20
</ul> </li>=20
<li><a href=3D"#Search-Reindexing">Reindexing</a></li>=20
</ul> </li>=20
<li><a href=3D"#Search-Reference">Reference</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Search-SearchCriteriaReference">Search Criteria Reference</=
a></li>=20
<li><a href=3D"#Search-SortClausesReference">Sort Clauses Reference</a></li=
>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h4 id=3D"Search-Relatedtopics:">Related topics:</h4>
<p><a href=3D"/display/DEVELOPER/Legacy+Search+Engine+Bundle">Legacy Search=
 Engine Bundle</a></p>
<p><a href=3D"/display/DEVELOPER/Solr+Bundle">Solr Bundle</a></p>
<p><a href=3D"/display/DEVELOPER/ElasticSearch+Bundle">ElasticSearch Bundle=
</a></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2851_1482180371.1485851013797--
