Message-ID: <934039524.3190.1485852335977.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3189_1413236952.1485852335977"

------=_Part_3189_1413236952.1485852335977
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Language Switcher</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Language Switcher</h1>
    <div class=3D"Section1">
        <p><span><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485852335947 {padding: 0px;}
div.rbtoc1485852335947 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485852335947 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></span></p>
<div class=3D"toc-macro rbtoc1485852335947">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#LanguageSwitcher-Description">Description</a></li>=20
<li><a href=3D"#LanguageSwitcher-Usage">Usage</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#LanguageSwitcher-Configuration:explicittranslationsiteacces=
ses">Configuration: explicit translation siteaccesses</a></li>=20
<li><a href=3D"#LanguageSwitcher-Configuration:morecomplextranslationsetup"=
>Configuration: more complex translation setup</a></li>=20
<li><a href=3D"#LanguageSwitcher-Configuration:usingimplicitrelatedsiteacce=
sses">Configuration: using implicit related siteaccesses</a></li>=20
<li><a href=3D"#LanguageSwitcher-Inatemplate">In a template</a></li>=20
<li><a href=3D"#LanguageSwitcher-Usingsub-requests">Using sub-requests</a><=
/li>=20
<li><a href=3D"#LanguageSwitcher-UsingPHP">Using PHP</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<br>
<p></p>
<h2 id=3D"LanguageSwitcher-Description"><span>Description</span></h2>
<p><span>A Content item can be translated into several languages. Those lan=
guages are configured in the system and exposed in siteaccesses via a prior=
itized list of languages:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential
    system:
        eng:
            languages: [eng-GB]
        # In fre siteaccess, fre-FR is always preferred, and fallback to en=
g-GB if needed.
        fre:
            languages: [fre-FR, eng-GB]</pre>=20
</div>
</div>
<p><span><span>When visiting a Content item, it may be useful to let the us=
er switch from one translation to another, more appropriate to them. This i=
s precisely the goal of the language switcher.</span></span></p>
<p><span><span><span>The language switcher relies on the&nbsp;</span><a hre=
f=3D"/display/TECHDOC/Cross-siteaccess+links">Cross-SiteAccess linking feat=
ure</a><span>&nbsp;to generate links to the Content item's translation, and=
 on&nbsp;</span><a href=3D"/display/TECHDOC/RouteReference">RouteReference =
feature</a><span>.<br><br></span></span></span></p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span><span><span>If you install the DemoBundle with at least 2 differen=
t languages, you will be able to see the Language Switcher and to test it.<=
/span></span></span></p>
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"LanguageSwitcher-Usage"><span><span><span>Usage</span></span></sp=
an></h2>
<h3 id=3D"LanguageSwitcher-Configuration:explicittranslationsiteaccesses"><=
span><span><span>Configuration: explicit <em>translation siteaccesses</em><=
/span></span></span></h3>
<p><span><span><span><span>Configuration is not mandatory, but can help to =
distinguish which siteaccesses can be considered&nbsp;</span><em>translatio=
n siteaccesses</em><span>.</span></span></span></span></p>
<p>&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        default_siteaccess: eng
        list:
            - ezdemo_site
            - eng
            - fre
            - ezdemo_site_admin

        groups:
            ezdemo_frontend_group:
                - ezdemo_site
                - eng
                - fre

    # ...

    system:
        # Specifying which SiteAccesses are used for translation
        ezdemo_frontend_group:
            translation_siteaccesses: [fre, eng]
        eng:
            languages: [eng-GB]
        fre:
            languages: [fre-FR, eng-GB]
        ezdemo_site:
            languages: [eng-GB]</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><strong>Note</strong>: Top prioritized language is always used for as th=
e siteaccess language reference (e.g.&nbsp;<code>fre-FR</code>&nbsp;for&nbs=
p;<code>fre</code> siteaccess in the example above).</p>
<p>If several translation siteaccesses share the same language reference,&n=
bsp;<strong>the first declared siteaccess always wins</strong>.</p>
</div>
</div>
<h3 id=3D"LanguageSwitcher-Configuration:morecomplextranslationsetup">Confi=
guration: more complex translation setup</h3>
<p>There are some cases where your siteaccesses share settings (repository,=
 content settings, etc.), but you don't want all of them to share the same&=
nbsp;<code>translation_siteaccesses</code>&nbsp;setting. This can be the ca=
se when you use siteaccesses for mobile.</p>
<p>Solution is as easy as defining new groups:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        default_siteaccess: eng
        list:
            - ezdemo_site
            - eng
            - fre
            - mobile_eng
            - mobile_fre
            - ezdemo_site_admin

        groups:
            # This group can be used for common front settings
            ezdemo_common_group:
                - ezdemo_site
                - eng
                - fre
                - mobile_eng
                - mobile_fre

            ezdemo_frontend_group:
                - ezdemo_site
                - eng
                - fre

            ezdemo_mobile_group
                - mobile_eng
                - mobile_fre

    # ...

    system:
        # Translation SiteAccesses for regular frontend
        ezdemo_frontend_group:
            translation_siteaccesses: [fre, eng]

        # Translation SiteAccesses for mobile frontend
        ezdemo_mobile_group:
            translation_siteaccesses: [mobile_fre, mobile_eng]

        eng:
            languages: [eng-GB]
        fre:
            languages: [fre-FR, eng-GB]
        ezdemo_site:
            languages: [eng-GB]

        mobile_eng:
            languages: [eng-GB]
        mobile_fre:
            languages: [fre-FR, eng-GB]</pre>=20
</div>
</div>
<h3 id=3D"LanguageSwitcher-Configuration:usingimplicitrelatedsiteaccesses">=
Configuration: using implicit <em>related siteaccesses</em></h3>
<p>If&nbsp;<code>translation_siteaccesses</code>&nbsp;setting is not provid=
ed, implicit&nbsp;<em>related siteaccesses</em>&nbsp;will be used instead. =
Siteaccesses are considered&nbsp;<em>related</em>&nbsp;if they share:</p>
<ul>
<li>The same repository</li>
<li>The same root location Id (see&nbsp;<a href=3D"/display/TECHDOC/Multisi=
te+using+content_root">Multisite feature</a>)</li>
</ul>
<h3 id=3D"LanguageSwitcher-Inatemplate">In a template</h3>
<p><span>To generate a language switch link, you need to generate the&nbsp;=
</span><code>RouteReference</code><span>, with the&nbsp;</span><code>langua=
ge</code><span>&nbsp;parameter. This can easily be done with&nbsp;</span><c=
ode>ez_route()</code><span>&nbsp;Twig function:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Given that "location" variable is a valid Location object #}
&lt;a href=3D"{{ url( ez_route( location, {"language": "fre-FR"} ) ) }}"&gt=
;{{ ez_content_name( content ) }}&lt;/a&gt;

{# Generating a link to a declared route instead of Location #}
&lt;a href=3D"{{ url( ez_route( 'my_route', {"language": "fre-FR"} ) ) }}"&=
gt;My link&lt;/a&gt;</pre>=20
</div>
</div>
<p><span><span>You can also omit the route, in this case, the current route=
 will be used (i.e. switch the current page):</span></span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Using Twig named parameters #}
&lt;a href=3D"{{ url( ez_route( params=3D{"language": "fre-FR"} ) ) }}"&gt;=
My link&lt;/a&gt;

{# Identical to the following, using ordered parameters #}
&lt;a href=3D"{{ url( ez_route( null, {"language": "fre-FR"} ) ) }}"&gt;My =
link&lt;/a&gt;</pre>=20
</div>
</div>
<h3 id=3D"LanguageSwitcher-Usingsub-requests">Using sub-requests</h3>
<p>When using sub-requests, you lose the context of the master request (e.g=
. current route, current location, etc.). This is because sub-requests can =
be displayed separately, with ESI or Hinclude.</p>
<p>If you want to render language switch links in a sub-request with a corr=
ect&nbsp;<code>RouteReference</code>, you must pass it as an argument to yo=
ur sub-controller from the master request.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Render the language switch links in a sub-controller #}
{{ render( controller( 'AcmeTestBundle:Default:languages', {'routeRef': ez_=
route()} ) ) }}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\TestBundle\Controller;

use eZ\Bundle\EzPublishCoreBundle\Controller;
use eZ\Publish\Core\MVC\Symfony\Routing\RouteReference;

class DefaultController extends Controller
{
    public function languagesAction( RouteReference $routeRef )
    {
        return $this-&gt;render( 'AcmeTestBundle:Default:languages.html.twi=
g', array( 'routeRef' =3D&gt; $routeRef ) );
    }
}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# languages.html.twig #}

{# Looping over all available languages to display the links #}
{% for lang in exponential.availableLanguages %}
    {# This time, we alter the "siteaccess" parameter directly. #}
    {# We get the right siteaccess with the help of exponential.translationSi=
teAccess() helper #}
    {% do routeRef.set( "siteaccess", exponential.translationSiteAccess( lang=
 ) ) %}
    &lt;a href=3D"{{ url( routeRef ) }}"&gt;{{ lang }}&lt;/a&gt;&lt;br /&gt=
;
{% endfor %}</pre>=20
</div>
</div>
<ul>
<li><code>exponential.translationSiteAccess( language )</code>&nbsp;returns t=
he siteaccess name for provided language (or&nbsp;<code>null</code>&nbsp;if=
 it cannot be found)</li>
<li><code>exponential.availableLanguages()</code>&nbsp;returns the list of av=
ailable languages.</li>
</ul>
<h3 id=3D"LanguageSwitcher-UsingPHP">Using PHP</h3>
<p><span>You can easily generate language switch links from PHP too, with t=
he&nbsp;</span><code>RouteReferenceGenerator</code><span>&nbsp;service:</sp=
an></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// Assuming we're in a controller
/** @var \eZ\Publish\Core\MVC\Symfony\Routing\Generator\RouteReferenceGener=
atorInterface $routeRefGenerator */
$routeRefGenerator =3D $this-&gt;get( 'exponential.route_reference.generator'=
 );
$routeRef =3D $routeRefGenerator-&gt;generate( $location, array( 'language'=
 =3D&gt; 'fre-FR' ) );
$link =3D $this-&gt;generateUrl( $routeRef );</pre>=20
</div>
</div>
<p><span><span><br></span></span></p>
<p><span><span>You can also retrieve all available languages with the&nbsp;=
</span><code>TranslationHelper</code><span>:</span></span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/** @var \eZ\Publish\Core\Helper\TranslationHelper $translationHelp=
er */
$translationHelper =3D $this-&gt;get( 'exponential.translation_helper' );
$availableLanguages =3D $translationHelper-&gt;getAvailableLanguages();</pr=
e>=20
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_3189_1413236952.1485852335977--
