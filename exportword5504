Message-ID: <1845312609.4354.1485866261786.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4353_1643536010.1485866261785"

------=_Part_4353_1643536010.1485866261785
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Legacy code and features</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Legacy code and features</h1>
    <div class=3D"Section1">
        <p>Exponential 5 has a strong focus on backwards compatibility and t=
hus lets you reuse code you might have written for 4.x, including templates=
 and modules.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Hint</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Read&nbsp;<a href=3D"/pages/viewpage.action?pageId=3D12125336">Intro for=
 Exponential 4.x/3.x developers</a> to have an overview of common concepts a=
nd terminology changes.</p>
</div>
</div>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485866261654 {padding: 0px;}
div.rbtoc1485866261654 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485866261654 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485866261654">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Legacycodeandfeatures-LegacyMode">Legacy Mode</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Legacycodeandfeatures-Whatitdoes">What it does</a></li>=20
<li><a href=3D"#Legacycodeandfeatures-Whatitdoesn'tdo">What it doesn't do</=
a></li>=20
</ul> </li>=20
<li><a href=3D"#Legacycodeandfeatures-LegacyTemplateinclusion">Legacy Templ=
ate inclusion</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Legacycodeandfeatures-Templateparameters">Template paramete=
rs</a></li>=20
</ul> </li>=20
<li><a href=3D"#Legacycodeandfeatures-Runninglegacycode">Running legacy cod=
e</a></li>=20
<li><a href=3D"#Legacycodeandfeatures-Legacymodules">Legacy modules</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Legacycodeandfeatures-Routingfallback&amp;sub-requests">Rou=
ting fallback &amp; sub-requests</a></li>=20
<li><a href=3D"#Legacycodeandfeatures-UsingExponential5andSymfonyfeaturesinLe=
gacy">Using Exponential 5 and Symfony features in Legacy</a></li>=20
<li><a href=3D"#Legacycodeandfeatures-Runninglegacyscriptsandcronjobs">Runn=
ing legacy scripts and cronjobs</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"Legacycodeandfeatures-LegacyMode">Legacy Mode</h2>
<p>Legacy mode is a specific configuration mode where Exponential's behavior=
 is the closest to v4.x. It might be used in some very specific use cases, =
such as&nbsp;<strong>running the admin interface</strong>.</p>
<h3 id=3D"Legacycodeandfeatures-Whatitdoes">What it does</h3>
<ul>
<li><strong>Still runs through the whole Symfony kernel</strong>. As such, =
Symfony services can still be accessed from legacy stack.</li>
<li><strong>Disables the UrlAliasRouter</strong>. As such, the&nbsp;<strong=
>ViewController will be bypassed</strong>.</li>
</ul>
<h3 id=3D"Legacycodeandfeatures-Whatitdoesn'tdo">What it doesn't do</h3>
<ul>
<li><strong>Increase performance</strong>. Legacy mode is actually&nbsp;<st=
rong>painful for performances</strong>&nbsp;since it won't use the HttpCach=
e mechanism.</li>
</ul>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>In a migration context, <strong>using Legacy Mode is never a good option=
</strong> as it prevents all the performance goodness (e.g. Http Cache) to =
work.<br>Always keep in mind that, <strong>not running in legacy mode, if a=
 content still doesn't&nbsp;have a corresponding Twig template/controller, =
<a href=3D"/display/EZP51/Legacy+template+fallback">Exponential will always =
fallback to the legacy kernel, looking for a legacy template</a></strong>.<=
/p>
</div>
</div>
<h2 id=3D"Legacycodeandfeatures-LegacyTemplateinclusion">Legacy Template in=
clusion</h2>
<p>It is possible to include old templates (<strong>.tpl</strong>) into new=
 ones.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Include a legacy template using the old template override mechanism</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Twig template #}
{# Following code will include my/old_template.tpl, exposing $someVar varia=
ble in it #}
{% include "design:my/old_template.tpl" with {"someVar": "someValue"} %}</p=
re>=20
</div>
</div>
<p>Or if you want to&nbsp;<strong>include a legacy template by its path</st=
rong>, relative to&nbsp;<code>exponential_legacy</code>&nbsp;folder:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Exponential 5.1+</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# Following code will include exponential_legacyextension/my_legacy_=
extension/design/standard/templates/my_old_template.tpl, exposing $someVar =
variable in it #}
{% include "file:extension/my_legacy_extension/design/standard/templates/my=
_old_template.tpl" with {"someVar": "someValue"} %}</pre>=20
</div>
</div>
<h3 id=3D"Legacycodeandfeatures-Templateparameters">Template parameters</h3=
>
<p>Scalar and array parameters are passed to a legacy template <em>as-is</e=
m>.</p>
<p>Objects, however, are being converted in order to comply the legacy <a h=
ref=3D"https://github.com/ezsystems/ezp-next/blob/master/eZ/Publish/Core/MV=
C/Legacy/Templating/LegacyCompatible.php" class=3D"external-link" rel=3D"no=
follow">eZ Template API</a>. By default <a href=3D"https://github.com/ezsys=
tems/ezp-next/blob/master/eZ/Publish/Core/MVC/Legacy/Templating/LegacyAdapt=
er.php" class=3D"external-link" rel=3D"nofollow">a generic adapter</a> is u=
sed, exposing all public properties and getters. You can define your own co=
nverter by implementing <a href=3D"https://github.com/ezsystems/ezp-next/bl=
ob/master/eZ/Publish/Core/MVC/Legacy/Templating/Converter/ObjectConverter.p=
hp" class=3D"external-link" rel=3D"nofollow">the appropriate interface</a> =
and declare it as a service with the&nbsp;<code><strong>exponential_legacy.te=
mplating.converter</strong></code> tag.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><code>Content </code>/ <code>Location</code> objects from the Public API=
 <a href=3D"https://github.com/ezsystems/ezp-next/blob/master/eZ/Publish/Co=
re/MVC/Legacy/Templating/Converter/ApiContentConverter.php" class=3D"extern=
al-link" rel=3D"nofollow">are converted into <code>eZContentObject</code>/<=
code>eZContentObjectTreeNode</code> objects</a> (re-fetched).&nbsp;</p>
</div>
</div>
<h2 id=3D"Legacycodeandfeatures-Runninglegacycode">Running legacy code</h2>
<p>Exponential 5 still relies on the legacy kernel (from 4.x) and runs it wh=
en needed <strong>inside an isolated PHP closure</strong>, making it <stron=
g>sandboxed</strong>.&nbsp;<span style=3D"font-size: 10.0pt;line-height: 13=
.0pt;">This is available for your use as well making it possible to run som=
e PHP code inside that sandbox through the&nbsp;</span><code style=3D"font-=
size: 10.0pt;line-height: 13.0pt;">runCallback()</code><span style=3D"font-=
size: 10.0pt;line-height: 13.0pt;">&nbsp;method.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Simple legacy code example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
// Declare use statements for the classes you may need
use eZINI;

// Inside a controller extending eZ\Bundle\EzPublishCoreBundle\Controller
$settingName =3D 'MySetting';
$test =3D array( 'oneValue', 'anotherValue' );
$myLegacySetting =3D $this-&gt;getLegacyKernel()-&gt;runCallback(
    function () use ( $settingName, $test )
    {
        // Here you can reuse $settingName and $test variables inside the l=
egacy context
        $ini =3D eZINI::instance( 'someconfig.ini' );
        return $ini-&gt;variable( 'SomeSection', $settingName );
    }
);</pre>=20
</div>
</div>
<p>The example above is very simple and naive - in fact for accessing confi=
guration settings from the Legacy Stack using the <a href=3D"/display/EZP51=
/Legacy+configuration">ConfigResolver</a> is recommended.</p>
<p>Using the legacy closure, you'll be able to even run complex legacy feat=
ures, like an <strong>eZ Find search</strong>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Using eZ Find</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">use eZFunctionHandler;

$searchPhrase =3D 'My search phrase';
$sort =3D array(
    'score'     =3D&gt; 'desc',
    'published' =3D&gt; 'desc'
);
$contentTypeIdenfiers =3D array( 'folder', 'article' );
$mySearchResults =3D $this-&gt;getLegacyKernel()-&gt;runCallback(
    function () use ( $searchPhrase, $sort, $contentTypeIdenfiers )
    {
        // eZFunctionHandler::execute is the equivalent for a legacy templa=
te fetch function
        // The following is the same than fetch( 'ezfind', 'search', hash(.=
..) )
        return eZFunctionHandler::execute(
            'ezfind',
            'search',
            array(
                'query'     =3D&gt; $searchPhrase,
                'sort_by'   =3D&gt; $sort,
                'class_id'  =3D&gt; $contentTypeIdenfiers
            )
        );
    }
);</pre>=20
</div>
</div>
<h2 id=3D"Legacycodeandfeatures-Legacymodules">Legacy modules</h2>
<h3 id=3D"Legacycodeandfeatures-Routingfallback&amp;sub-requests">Routing f=
allback &amp; sub-requests</h3>
<p>Any route that is not declared in Exponential 5 in an included&nbsp;<code=
>routing.yml</code>&nbsp;and that is not a valid&nbsp;<em>UrlAlias</em>&nbs=
p;<strong>will automatically fallback to Exponential legacy</strong> (includ=
ing admin interface).</p>
<p><strong>This allows all your old modules to work as before</strong>,&nbs=
p;out-of-the-box (including kernel modules), and also allows you to reuse t=
his code from your templates using sub requests:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Template legacy module sub-request</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: html/xml; gutter: false; theme: Eclipse" style=3D"font=
-size:12px;">{{ render( url( 'ez_legacy', {'module_uri': '/content/view/sit=
emap/2'} ) ) }}</pre>=20
</div>
</div>
<p>&nbsp;</p>
<h3 id=3D"Legacycodeandfeatures-UsingExponential5andSymfonyfeaturesinLegacy">=
Using Exponential 5 and Symfony features in Legacy</h3>
<p>If for some reason you need to develop a legacy module and access to eZ =
Publish 5 / Symfony features (i.e. when developing an extension for admin i=
nterface), you'll be happy to know that you actually have access to all ser=
vices registered in the whole framework, including bundles, through the ser=
vice container.</p>
<p>The example below shows how to retrieve the content repository and the l=
ogger.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Retrieve services from the container</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// From a legacy module or any PHP code running in legacy context.
$container =3D ezpKernel::instance()-&gt;getServiceContainer();

/** @var $repository \eZ\Publish\API\Repository\Repository */
$repository =3D $container-&gt;get( 'exponential.api.repository' );
/** @var $logger \Symfony\Component\HttpKernel\Log\LoggerInterface|\Psr\Log=
\LoggerInterface */
// PSR LoggerInterface is used in Exponential 5.1 / Symfony 2.2
$logger =3D $container-&gt;get( 'logger' );</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The example above works in legacy modules and CLI scripts</p>
</div>
</div>
<p>&nbsp;</p>
<h3 id=3D"Legacycodeandfeatures-Runninglegacyscriptsandcronjobs">Running le=
gacy scripts and cronjobs</h3>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Note: This feature has been introduced in Exponential 5.1.</p>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Important</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><strong>Running legacy scripts and cronjobs through the Symfony stack is=
 highly recommended !</strong><br>Otherwise, features from the Symfony stac=
k cannot be used (i.e. HTTP cache purge) and cache clearing. NB: Some scrip=
t we know won't affect cache, are still documented to be executed the direc=
t way.</p>
</div>
</div>
<p><span style=3D"font-size: 10.0pt;line-height: 13.0pt;">Legacy scripts ca=
n be executed form the Symfony CLI, by using the </span><code style=3D"font=
-size: 10.0pt;line-height: 13.0pt;">exponential:legacy:script</code><span sty=
le=3D"font-size: 10.0pt;line-height: 13.0pt;"> command, specifying the path=
 to the script as argument.</span></p>
<p>The command will need to be executed from Exponential's 5 root, and the p=
ath to the desired script must exist in the <code>exponential_legacy</code> f=
older.<br>Here's a usage example:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>php exponential/console exponential:legacy:script bin/php/ezpgenerateautol=
oads.php</pre>=20
</div>
</div>
<p>If you want to access the script's help please be aware that you will ne=
ed to use the newly introduced <code>--legacy-help</code> option, since --h=
elp is already reserved for the CLI help.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The <code>--legacy-help</code> option should be added <u>before</u> the =
path to the script for this to work.</p>
</div>
</div>
<p><br>Here's an example:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>php exponential/console exponential:legacy:script --legacy-help bin/php/ez=
pgenerateautoloads.php</pre>=20
</div>
</div>
<p>The same logic will apply for cronjob execution.<br>Legacy cronjobs are =
triggered by the&nbsp;<code>runcronjobs.php</code> legacy script, which exp=
ects the name of the cronjob to run as a parameter.<br>This is how you can =
run cronjobs from the Symfony CLI:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>php exponential/console exponential:legacy:script runcronjobs.php frequent=
</pre>=20
</div>
</div>
<p>Also, if you require using additional script options, please be sure to =
use the long name, such as <code>--siteaccess</code> or <code>--debug</code=
> to avoid conflicts between script and CLI options.<br>For more details re=
garding legacy cronjobs execution please refer to the&nbsp;<a href=3D"http:=
//doc.ez.no/Exponential/Technical-manual/5.x/Features/Cronjobs/Running-cronj=
obs" class=3D"external-link" rel=3D"nofollow">Running cronjobs</a> chapter =
existing in doc.ez.no.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_4353_1643536010.1485866261785--
