Message-ID: <2117545092.4102.1485856700605.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4101_1330744678.1485856700605"

------=_Part_4101_1330744678.1485856700605
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Step 2 - Customizing the general layout</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Step 2 - Customizing the general layout</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<p>We will begin by customizing the global layout of our site, in order to =
end up with this rendering:</p>
<p><strong> <span class=3D"confluence-embedded-file-wrapper image-center-wr=
apper"><img class=3D"confluence-embedded-image image-center" src=3D"/plugin=
s/servlet/confluence/placeholder/unknown-attachment?locale=3Den_GB&amp;vers=
ion=3D2" title=3D"index_final.png"></span> <br> </strong></p>
<p><strong> <br> </strong></p>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485856700572 {padding: 0px;}
div.rbtoc1485856700572 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485856700572 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485856700572">=20
<ul class=3D"toc-indentation">=20
<li><span class=3D"TOCOutline">1</span> <a href=3D"#Step2-Customizingthegen=
erallayout-Contentrenderingconfiguration">Content rendering configuration</=
a></li>=20
<li><span class=3D"TOCOutline">2</span> <a href=3D"#Step2-Customizingthegen=
erallayout-Creatingthetemplate">Creating the template</a></li>=20
<li><span class=3D"TOCOutline">3</span> <a href=3D"#Step2-Customizingthegen=
erallayout-Fixingtheassets">Fixing the assets</a></li>=20
<li><span class=3D"TOCOutline">4</span> <a href=3D"#Step2-Customizingthegen=
erallayout-Renderingthecontent">Rendering the content</a></li>=20
<li><span class=3D"TOCOutline">5</span> <a href=3D"#Step2-Customizingthegen=
erallayout-Extractingthelayout">Extracting the layout</a></li>=20
</ul>=20
</div>
<p></p>
<p>First, go to the root of your eZ Platform site. You should see the root =
folder of the clean install, without any kind of layout. You can go to <cod=
e>/ez</code>, edit this Content item and see that this page changes. When <=
code>/</code> is requested, eZ Platform renders the root content using the =
<code>ez_content:viewContent</code> controller. We will customize this step=
 by instructing Platform to use a custom template to render this particular=
 item.</p>
<blockquote>
<p>eZ Platform organizes content as a tree. Each Content item is referenced=
 by a Location, and each Location as a parent. The root content Location ha=
s the ID <code>2</code> by default.</p>
</blockquote>
<h2 id=3D"Step2-Customizingthegenerallayout-Contentrenderingconfiguration">=
Content rendering configuration</h2>
<p>To use a custom template when rendering the root content, let's create a=
 <code>content_view</code> configuration block for <code>exponential</code>.<=
/p>
<p>We will use the <code>default</code> namespace, but we could have used a=
ny siteaccess instead. Edit <code>app/config/ezplatform.yml</code>. At the =
end, add the following block, right after the language configuration (pay a=
ttention to indentation: <code>default</code> should be at the same level a=
s <code>site_group</code>):</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: groovy; gutter: false; theme: RDark" style=3D"font-siz=
e:12px;">        default:
=09=09    content_view:
=09=09        full:
=09=09=09        root_folder:
=09=09=09            template: "full/root_folder.html.twig"
=09=09=09            match:
=09=09=09=09            Id\Location: 2</pre>=20
</div>
</div>
<p>This tells Platform to use the <code>template</code> when rendering any =
content referenced by the Location with the id <code>2</code>. There is a w=
hole set of <a href=3D"https://doc.ez.no/display/TECHDOC/View+provider+conf=
iguration#Viewproviderconfiguration-Matchers" rel=3D"nofollow">view matcher=
s</a> that can be used to customize rendering depending on any criterion.</=
p>
<h2 id=3D"Step2-Customizingthegenerallayout-Creatingthetemplate">Creating t=
he template</h2>
<ol>
<li><a class=3D"external-link" href=3D"https://github.com/bdunogier/platfor=
m-workshop/blob/master/src/Workshop/TutorialBundle/Resources/public/index.h=
tml" rel=3D"nofollow">Download index.html</a></li>
<li>Save it in <code>app/Resources/views</code> as <code> <code>app/Resourc=
es/views/</code>full/root_folder.html.twig</code>.</li>
<li>Refresh the site's root and you should see the site's structure, but wi=
thout any styles or images. Let's fix this.</li>
<li>Edit the <code>root_folder.html.twig</code> template.</li>
</ol>
<h2 id=3D"Step2-Customizingthegenerallayout-Fixingtheassets">Fixing the ass=
ets</h2>
<ol>
<li>The first thing to do is to fix the loading of stylesheets, scripts and=
 design images.</li>
<li><a class=3D"external-link" href=3D"https://github.com/ezsystems/ezsc201=
5-beginner-tutorial/blob/master/assets.zip" rel=3D"nofollow">Download asset=
s.zip</a> by clicking on the "Raw" button on Github.</li>
<li>Then unpack its contents to the <code>web</code> directory of your proj=
ect. You will end up with <code>web/assets/</code>, containing <code>css</c=
ode>, <code>js</code> and <code>images</code> subfolders.</li>
<li>In the template, in the<code> &lt;html&gt;</code> section, change the <=
code>&lt;style&gt;</code> tags about bootstrap and custom CSS lines&nbsp; (=
lines 15 to 21) with the following code:</li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>root_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">{% stylesheets 'assets/css/*' filter=3D'cssrewrite' %}
    &lt;link rel=3D"stylesheet" href=3D"{{ asset_url }}" /&gt;
{% endstylesheets %}</pre>=20
</div>
</div>
<p>As explained in the <a href=3D"http://symfony.com/doc/current/cookbook/a=
ssetic/asset_management.html#including-css-stylesheets" class=3D"external-l=
ink" rel=3D"nofollow">Symfony assetic doc</a>, this will iterate over the f=
iles in <code>web/assets/css</code> and load them as stylesheets. Refresh t=
he page and you should now see the static design of the site. At the bottom=
 of the template, you will find <code>&lt;script&gt;</code> tags that load =
jQuery and Bootstrap javascript (around line 360). Replace them with an equ=
ivalent block for scripts:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>root_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">{% javascripts 'assets/js/*' %}
    &lt;script src=3D"{{ asset_url }}"&gt;&lt;/script&gt;
{% endjavascripts %}</pre>=20
</div>
</div>
<p>Let's finish this by fixing the design images. Locate the <code>&lt;img&=
gt;</code> tag with <code>"images/128_bike_white_avenir.png"</code>. Change=
 the <code>src</code> to <code>{{ asset('assets/images/128_bike_white_aveni=
r.png') }}</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>root_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">&lt;img alt=3D"Brand" src=3D"{{ asset('assets/images/128_bike_white_a=
venir.png') }}"&gt;</pre>=20
</div>
</div>
<p>Do the same for <code>"images/logo_just_letters.png"</code> and refresh =
the page. The design should now be in order, with the logo, fonts and color=
s as the first image of this page.</p>
<h2 id=3D"Step2-Customizingthegenerallayout-Renderingthecontent">Rendering =
the content</h2>
<p>At this point, the <code>root_folder.html.twig</code> template is static=
. It doesn't render any dynamic data from the repository.</p>
<p>The root is rendered by the <code>ez_content:viewAction</code> controlle=
r action. This action assigns the currently viewed content as the <code>con=
tent</code> Twig variable. We will use that variable to display some of the=
 fields from the root content. Replace the central section of the template,=
 around line 90, with the following block:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>root_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">&lt;section class=3D"buttons"&gt;
    &lt;div class=3D"container"&gt;
        &lt;div class=3D"row regular-content-size"&gt;
            &lt;div class=3D"col-xs-10 col-xs-offset-1 box-style"&gt;
                &lt;h3 class=3D"center bottom-plus new-header"&gt;{{ ez_con=
tent_name(content) }}&lt;/h3&gt;
                &lt;div class=3D"col-xs-10 text-justified"&gt;{{ ez_render_=
field(content, 'description') }}&lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;</pre>=20
</div>
</div>
<p>The page will now show the values of title and description fields of the=
 root Platform Content.</p>
<h2 id=3D"Step2-Customizingthegenerallayout-Extractingthelayout">Extracting=
 the layout</h2>
<p>The general layout of the site, with the navigation, footer, scripts, et=
c., is written down in the template we use to render the root. Let's extrac=
t the part that is common to all the pages so that we can re-use it.</p>
<p>Twig supports a powerful <a href=3D"http://twig.sensiolabs.org/doc/templ=
ates.html#template-inheritance" class=3D"external-link" rel=3D"nofollow">te=
mplate inheritance</a> api. Templates may declare named blocks. Any templat=
e may extend other templates, and modify the blocks defined by its parents.=
</p>
<p>Create a new <code>app/Resources/views/pagelayout.html.twig</code> templ=
ate and copy the contents of the current <code>root_folder.html.twig</code>=
 into it. Change the central section from the previous chapter as follows:<=
/p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>pagelayout.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">&lt;section class=3D"buttons"&gt;
    &lt;div class=3D"container"&gt;
        &lt;div class=3D"row regular-content-size"&gt;
            &lt;div class=3D"col-xs-10 col-xs-offset-1 box-style"&gt;
                {% block content %}
                {% endblock %}
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/section&gt;</pre>=20
</div>
</div>
<p>This defines a block named "content". Other templates can add content to=
 it, so that the result of the execution of the controller is contained wit=
hin the site's general layout.</p>
<p>Edit <code>root_folder.html.twig</code> and replace the whole content of=
 the file with the following code:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>root_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: RDark" style=3D"font-size:1=
2px;">{% extends "pagelayout.html.twig" %}
{% block content %}
&lt;h3 class=3D"center bottom-plus new-header"&gt;{{ ez_content_name(conten=
t) }}&lt;/h3&gt;
&lt;div class=3D"col-xs-10 text-justified"&gt;{{ ez_render_field(content, '=
description') }}&lt;/div&gt;
{% endblock %}</pre>=20
</div>
</div>
<p>This will re-use <code>pagelayout.html.twig</code> and replace the <code=
>content</code> block with the title and description from the root folder. =
We could easily create more blocks in the pagelayout so that templates can =
modify other parts of the page (footer, head, navigation), and we will over=
 the course of this tutorial. We can now create more templates that inherit=
 from <code>pagelayout.html.twig</code>, and customize how content is rende=
red.</p>
<p>Let's do it for the Ride Content Type.</p>
<hr>
<p>Next:&nbsp;<a href=3D"/display/TECHDOC/Step+3+-+Create+your+content+mode=
l">Step 3 - Create your content model</a> &gt;</p>
<p>&lt; Previous: <a href=3D"/display/TECHDOC/Step+1+-+Getting+Ready">Step =
1 - Getting Ready</a></p>
<p>&nbsp;</p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<div class=3D"panel" style=3D"border-color: #f58220;border-width: 2px;">
<div class=3D"panelHeader" style=3D"border-bottom-width: 2px;border-bottom-=
color: #f58220;">
<b>Tutorial path</b>
</div>
<div class=3D"panelContent">=20
<p> </p>
<div class=3D"plugin_pagetree">=20
<ul class=3D"plugin_pagetree_children_list plugin_pagetree_children_list_no=
leftspace">=20
<div class=3D"plugin_pagetree_children">=20
</div>=20
</ul>=20
<fieldset class=3D"hidden">=20
<input type=3D"hidden" name=3D"treeId" value=3D"">=20
<input type=3D"hidden" name=3D"treeRequestId" value=3D"/plugins/pagetree/na=
turalchildren.action?decorator=3Dnone&amp;excerpt=3Dfalse&amp;sort=3Dpositi=
on&amp;reverse=3Dfalse&amp;disableLinks=3Dfalse&amp;expandCurrent=3Dfalse">=
=20
<input type=3D"hidden" name=3D"treePageId" value=3D"">=20
<input type=3D"hidden" name=3D"noRoot" value=3D"false">=20
<input type=3D"hidden" name=3D"rootPageId" value=3D"30711737">=20
<input type=3D"hidden" name=3D"rootPage" value=3D"">=20
<input type=3D"hidden" name=3D"startDepth" value=3D"0">=20
<input type=3D"hidden" name=3D"spaceKey" value=3D"TECHDOC">=20
<input type=3D"hidden" name=3D"i18n-pagetree.loading" value=3D"Loading...">=
=20
<input type=3D"hidden" name=3D"i18n-pagetree.error.permission" value=3D"Una=
ble to load page tree. It seems that you do not have permission to view the=
 root page.">=20
<input type=3D"hidden" name=3D"i18n-pagetree.eeror.general" value=3D"There =
was a problem retrieving the page tree. Please check the server log file fo=
r more information.">=20
<input type=3D"hidden" name=3D"loginUrl" value=3D"/login.action?os_destinat=
ion=3D%2Fexportword%3FpageId%3D31431617">=20
<input type=3D"hidden" name=3D"mobile" value=3D"false">=20
<fieldset class=3D"hidden">=20
<input type=3D"hidden" name=3D"ancestorId" value=3D"30711737">=20
</fieldset>=20
</fieldset>=20
</div>=20
<p></p>=20
</div>
</div>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_4101_1330744678.1485856700605--
