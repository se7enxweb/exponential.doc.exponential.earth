Message-ID: <282639364.4250.1485862013648.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4249_411254882.1485862013647"

------=_Part_4249_411254882.1485862013647
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Extension load ordering</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Extension load ordering</h1>
    <div class=3D"Section1">
        <h3 id=3D"Extensionloadordering-Introduction">Introduction</h3>
<p>In Exponential 4.4 and higher, there is a mechanism that enables extensio=
ns to define in which order they should be loaded in regards to other, rela=
ted, extensions. The function automates the extension load ordering to help=
 avoid situations where extensions does not work&nbsp;properly&nbsp;in case=
 of wrong order.</p>
<p><a name=3D"eztoc131603_0_2" rel=3D"nofollow"></a></p>
<h3 id=3D"Extensionloadordering-Requirements">Requirements</h3>
<p>For the extension load ordering mechanism to be active, extensions shoul=
d be recent enough to contain the needed metadata stored in the "<code>exte=
nsion.xml</code>" file, so make sure you use the extensions certified for y=
our Exponential version (see: Technical manual / &lt;version&gt;&nbsp;/ Inst=
allation&nbsp;/&nbsp;Requirements ).</p>
<p><a name=3D"eztoc131603_0_3" rel=3D"nofollow"></a></p>
<h3 id=3D"Extensionloadordering-Configuration">Configuration</h3>
<p>To activate the extension load ordering, the following configuration set=
ting should be enabled in "<code>site.ini.append.php</code>" in setting/ove=
rride:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>[ExtensionSettings]
ExtensionOrdering=3Denabled</pre>=20
</div>
</div>
<h3 id=3D"Extensionloadordering-Extensionordering">Extension ordering</h3>
<p>The order in which active extensions appear in the "<code>site.ini</code=
>" under <code><code>&lt;eZ_Publish_root_folder&gt;/exponential_legacy</code>=
/settings/override/site.ini</code> "<code>[ExtensionSettings]</code> <code>=
ActiveExtensions=3D</code>" is important for the selection of templates and=
, possibly, configuration settings. For this reason, users must insure that=
 the correct order is used for extensions that have dependencies on other e=
xtensions. For example eZ Find must be activated before eZ Webin. The same =
rule applies for the eZ Teamroom extension: eZ Teamroom and all its depende=
nt extensions, such as eZ Lightbox and eZ Event, need to be activated befor=
e eZ Webin.</p>
<p>Although extensions can be activated using the Administrator Interface, =
as for now the admin interface does not provide a way to re-order the exten=
sions, manually or automatically. This implies that the order can only be d=
efined in site.ini.</p>
<p>Defining the correct order can sometimes be tricky when many extensions =
need to be considered. By providing metadata to the extension loading, manu=
al extension load ordering is now a thing of the past.</p>
<p><a name=3D"eztoc131603_0_5" rel=3D"nofollow"></a></p>
<h3 id=3D"Extensionloadordering-Metadata">Metadata</h3>
<p>By providing metadata for the extension load ordering we enable eZ Publi=
sh to correctly determine the correct order itself. The metadata about exte=
nsion ordering is optional. These metadata are now declared using an XML fi=
le, that can also be used to replace what is currently in "<code>ezinfo.php=
</code>". This file is named "<code>extension.xml</code>", located at the r=
oot of the extension. It has the following content:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>&lt;?xml version=3D"1.0" encoding=3D"utf-8" ?&gt;
 &lt;software&gt;
     &lt;metadata&gt;
         &lt;name&gt;Extension name&lt;/name&gt;
         &lt;description&gt;Extension description&lt;/description&gt;
         &lt;version&gt;X.Y.Z&lt;/version&gt;
         &lt;copyright&gt;Copyright text&lt;/copyright&gt;
         &lt;license&gt;License type&lt;/license&gt;
         &lt;info_url&gt;http://url/to/extension/site&lt;/info_url&gt;
         &lt;author&gt;Extension author&lt;/author&gt;
=20
         &lt;software&gt;
             &lt;uses&gt;
                 &lt;name&gt;Used library/software 1&lt;/name&gt;
                 &lt;license&gt;Used library/software 1  license&lt;/licens=
e&gt;
                 &lt;copyright&gt;Used library/software 1  copyright&lt;/co=
pyright&gt;
                 &lt;info_url&gt;Used library/software 1  URL&lt;/info_url&=
gt;s
                 &lt;version&gt;Used library/software 1  version&lt;/versio=
n&gt;
             &lt;/uses&gt;
            &lt;uses&gt;
                &lt;name&gt;Used library/software 2&lt;/name&gt;
                &lt;license&gt;Used library/software 2  license&lt;/license=
&gt;
                &lt;copyright&gt;Used library/software 2  copyright&lt;/cop=
yright&gt;
                &lt;info_url&gt;Used library/software 2  URL&lt;/info_url&g=
t;s
                &lt;version&gt;Used library/software 2  version&lt;/version=
&gt;
            &lt;/uses&gt;
=20
         &lt;/software&gt;
=20
     &lt;/metadata&gt;
=20
     &lt;dependencies&gt;
         &lt;uses&gt;
             &lt;extension name=3D"usedExtension" /&gt;
         &lt;/uses&gt;
        &lt;requires&gt;
            &lt;extension name=3D"requiredExtension" /&gt;
        &lt;/requires&gt;
         &lt;extends&gt;
             &lt;extension name=3D"extendedExtension" /&gt;
         &lt;/extends&gt;
     &lt;/dependencies&gt;
=20
 &lt;/software&gt;</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p>The first block (software/metadata) replaces "<code>ezinfo.php</code>". =
The fields are equivalent to those found in the info() method of the 'old' =
ezinfo. The sub-node software/metadata/software replaces the previous 3rdpa=
rty_libraries entry. One software/metadata/software/uses node must be used =
for each library.</p>
<p>The second block (software/dependencies) contains 3 sub-nodes:</p>
<ul>
<li>
<div>
<strong>uses:</strong> indicates that the referenced extension is used by t=
his extension.
</div></li>
<li>
<div>
<strong>requires:</strong> indicates that the referenced extension is requi=
red by this extension.
</div></li>
<li>
<div>
<strong>extends:</strong> indicates that the referenced extension is overlo=
aded by this extension.
</div></li>
</ul>
<p><strong>Note:</strong> 'uses' and 'requires' currently have the same eff=
ect, but their behavior will change when real dependencies checking is deve=
loped in the future.</p>
<p><a name=3D"eztoc131603_0_6" rel=3D"nofollow"></a></p>
<h3 id=3D"Extensionloadordering-Knowissue">Know issue</h3>
<ol>
<li>
<div>
Extension load ordering breaks possibility to define your cluster (
<code>file.ini</code>) settings for siteaccess and extensions as the functi=
onality loads cluster before extension and siteaccess settings are loaded.
</div></li>
<li>
<div>
Extension load ordering has a small impact on performance
</div></li>
</ol>
<p>In both cases work around is to disable extension load ordering.</p>
    </div>
</body>
</html>
------=_Part_4249_411254882.1485862013647--
