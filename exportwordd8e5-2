Message-ID: <505589897.2934.1485851323182.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2933_1230787140.1485851323182"

------=_Part_2933_1230787140.1485851323182
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Custom policies</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Custom policies</h1>
    <div class=3D"Section1">
        <p><span class=3D"status-macro aui-lozenge aui-lozenge-current">PLA=
TFORM &gt;=3D 2015.09</span></p>
<h1 id=3D"Custompolicies-Description">Description</h1>
<p>eZ content repository uses the concept of roles and policies in order to=
 authorize a user to do something (e.g. read content).</p>
<ul>
<li>A role is composed of policies and can be assigned to a user or a user =
group.</li>
<li>A policy is composed of a combination of&nbsp;<strong>module</strong>&n=
bsp;and&nbsp;<strong>function</strong>&nbsp;(e.g.&nbsp;<code>content/read</=
code>,&nbsp;<code>content</code>&nbsp;being the module and&nbsp;<code>read<=
/code>&nbsp;being the function).</li>
<li>Depending on&nbsp;<strong>module</strong>&nbsp;and&nbsp;<strong>functio=
n</strong>&nbsp;combination, a policy can also be composed of limitations.<=
/li>
</ul>
<p>It is possible for any bundle to expose available policies via a&nbsp;<c=
ode>PolicyProvider</code>&nbsp;which can be added to EzPublishCoreBundle's =
DIC extension.</p>
<h1 id=3D"Custompolicies-PolicyProvider">PolicyProvider</h1>
<p>A&nbsp;<code>PolicyProvider</code>&nbsp;is an object providing a hash co=
ntaining declared modules, functions and limitations.</p>
<ul>
<li>Each policy provider provides a collection of permission&nbsp;<em>modul=
es</em>.</li>
<li>Each module can provide&nbsp;<em>functions</em>&nbsp;(e.g. "content/rea=
d": "content" is the module, "read" is the function)</li>
<li>Each function can provide a collection of limitations.</li>
</ul>
<p>Policies configuration hash contains declared these modules, functions a=
nd limitations.<br>First level key is the module name, value is a hash of a=
vailable functions, with function name as key.<br>Function value is an arra=
y of available limitations, identified by the alias declared in LimitationT=
ype service tag.<br>If no limitation is provided, value can be <code>null</=
code> or an empty array.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">[
    "content" =3D&gt; [
        "read" =3D&gt; ["Class", "ParentClass", "Node", "Language"],
        "edit" =3D&gt; ["Class", "ParentClass", "Language"]
    ],
    "custom_module" =3D&gt; [
        "custom_function_1" =3D&gt; null,
        "custom_function_2" =3D&gt; ["CustomLimitation"]
    ],
]</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Limitations need to be implemented as&nbsp;<em>limitation types</em>&nbs=
p;and declared as services identified with&nbsp;<code>exponential.limitationT=
ype</code>&nbsp;tag.&nbsp;Name provided in the hash for each limitation is =
the same value set in <code>alias</code> attribute in the service tag.</p>
</div>
</div>
<h2 id=3D"Custompolicies-Example">Example</h2>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\FooBundle\AcmeFooBundle\Security;

use eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ConfigB=
uilderInterface;
use eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Security\PolicyProvid=
er\PolicyProviderInterface;

class MyPolicyProvider implements PolicyProviderInterface
{
    public function addPolicies(ConfigBuilderInterface $configBuilder)
    {
        $configBuilder-&gt;addConfig([
             "custom_module" =3D&gt; [
                 "custom_function_1" =3D&gt; null,
                 "custom_function_2" =3D&gt; ["CustomLimitation"],
             ],
         ]);
    }
}</pre>=20
</div>
</div>
<h2 id=3D"Custompolicies-YamlPolicyProvider">YamlPolicyProvider</h2>
<p><span>An abstract class based on YAML is provided:&nbsp;</span><code>eZ\=
Bundle\EzPublishCoreBundle\DependencyInjection\Security\PolicyProvider\Yaml=
PolicyProvider</code><span>.<br></span><span style=3D"line-height: 1.42857;=
">It defines an abstract&nbsp;</span><code style=3D"line-height: 1.42857;">=
getFiles()</code><span style=3D"line-height: 1.42857;">&nbsp;method. </span=
></p>
<p><span style=3D"line-height: 1.42857;">Extend <code>YamlPolicyProvider</c=
ode> and implement <code>getFiles()</code> to return absolute paths to your=
 YAML files.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\FooBundle\AcmeFooBundle\Security;

use eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Security\PolicyProvid=
er\YamlPolicyProvider;

class MyPolicyProvider extends YamlPolicyProvider
{
    protected function getFiles()
    {
        return [
             __DIR__ . '/../Resources/config/policies.yml',
         ];
    }
}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>AcmeFooBundle/Resources/config/policies.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">custom_module:
    custom_function_1: ~
    custom_function_2: [CustomLimitation]</pre>=20
</div>
</div>
<h2 id=3D"Custompolicies-Extendingexistingpolicies"><span style=3D"line-hei=
ght: 1.42857;">Extending existing policies</span></h2>
<p>A <code>PolicyProvider</code> may provide new functions to a module, and=
 additional limitations to an existing function.&nbsp;<br><strong style=3D"=
line-height: 1.42857;">It is however strongly encouraged to add functions t=
o your own policy modules.</strong></p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>It is not possible to remove an existing module, function or limitation =
from a policy.</p>
</div>
</div>
<h1 id=3D"Custompolicies-IntegratingthePolicyProviderintoEzPublishCoreBundl=
e">Integrating the PolicyProvider into EzPublishCoreBundle</h1>
<p><span>For a PolicyProvider to be active, it must be properly declared in=
 EzPublishCoreBundle. <br>A bundle just has to retrieve CoreBundle's DIC ex=
tension and call&nbsp;</span><code>addPolicyProvider()</code><span>. This m=
ust be done in bundle's&nbsp;</span><code>build()</code><span>&nbsp;method.=
</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\FooBundle\AcmeFooBundle;

use Symfony\Component\HttpKernel\Bundle\Bundle;

class AcmeFooBundle extends Bundle
{
    public function build(ContainerBuilder $container)
    {
        parent::build($container);

        // ...
&nbsp;
        // Retrieve "exponential" container extension.
        $eZExtension =3D $container-&gt;getExtension('exponential');
        // Add the policy provider.
        $eZExtension-&gt;addPolicyProvider(new MyPolicyProvider());
    }
}</pre>=20
</div>
</div>
<h1 id=3D"Custompolicies-Corepolicies"><span>Core policies</span></h1>
<p><span style=3D"line-height: 1.42857;"><span>Policies used internally in =
repository services are defined in&nbsp;</span><code><a href=3D"https://git=
hub.com/ezsystems/exponential-kernel/blob/master/eZ/Bundle/EzPublishCoreBundl=
e/Resources/config/policies.yml" class=3D"external-link" rel=3D"nofollow">E=
zPublishCoreBundle/Resources/config/policies.yml</a></code><span>.</span></=
span></p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_2933_1230787140.1485851323182--
