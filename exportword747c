Message-ID: <1198764341.4008.1485856322422.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4007_437262653.1485856322422"

------=_Part_4007_437262653.1485856322422
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Purge</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Purge</h1>
    <div class=3D"Section1">
        <p style=3D"margin-left: 0.0px;">&nbsp;</p>
<p style=3D"margin-left: 0.0px;">This explains the content cache purge&nbsp=
;mechanism, while publishing content from the admin interface or from a con=
tainer aware script (will not work with pure&nbsp;<code>eZScript</code>&nbs=
p;atm, but will with new CLI scripts).<br>Note that the approach is fully c=
ompatible with native reverse proxies like&nbsp;<strong>Varnish</strong>&nb=
sp;(but in this case you won't use all&nbsp;<code>HttpCache</code>&nbsp;rel=
ated code).</p>
<h2 id=3D"Purge-Description">Description</h2>
<p>On publish, one or several Http PURGE requests are sent to the backend. =
This request will have a specific header&nbsp;<code>X-Location-Id</code>&nb=
sp;(in the case of 1 request per location to purge) or&nbsp;<code>X-Group-L=
ocation-Id</code>&nbsp;(in the case of 1 request for all location to purge)=
.</p>
<h2 id=3D"Purge-HttpPURGErequests">Http PURGE requests</h2>
<h3 id=3D"Purge-Emulatedpurgerequests">Emulated purge requests</h3>
<p>By default, PURGE requests will be emulated and sent to the cache Store.=
 Cache purge will thus be synchronous.<br>This is the default behavior.&nbs=
p;<strong>No Http requests will be sent to the backend when publishing</str=
ong>.</p>
<p><strong>Configuration:</strong></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    http_cache:
        purge_type: local</pre>=20
</div>
</div>
<h3 id=3D"Purge-Onepurgerequestforalllocations,aka&quot;SingleHttp&quot;">O=
ne purge request for all locations, aka "SingleHttp"</h3>
<p>Only one Http PURGE request is sent for purging every needed locations.<=
/p>
<p>A request for purging locations&nbsp;<code>123</code>&nbsp;and&nbsp;<cod=
e>456</code>&nbsp;would be:</p>
<pre><code>PURGE / HTTP 1.1 <br>Host: localhost <br>X-Group-Location-Id: 12=
3; 456 </code></pre>
<p><strong>Configuration</strong></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    http_cache:
        purge_type: single_http</pre>=20
</div>
</div>
<h3 id=3D"Purge-Onerequestperlocation,aka&quot;MultipleHttp&quot;">One requ=
est per location, aka "MultipleHttp"</h3>
<p>One Http PURGE request will be sent&nbsp;<em>per location to purge</em><=
/p>
<p>A request for purging locations&nbsp;<code>123</code>&nbsp;and&nbsp;<cod=
e>456</code>&nbsp;would result to:</p>
<pre><code>PURGE / HTTP 1.1 <br>Host: localhost <br>X-Location-Id: 123 </co=
de></pre>
<p>AND</p>
<pre><code>PURGE / HTTP 1.1 <br>Host: localhost <br>X-Location-Id: 456 </co=
de></pre>
<p><strong>Configuration:</strong></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    http_cache:
        purge_type: multiple_http</pre>=20
</div>
</div>
<h2 id=3D"Purge-Purgeallcontent">Purge all content</h2>
<p>When purging all cached content, a single Http PURGE request is sent (ex=
cept for&nbsp;<em>local</em>&nbsp;purge type), with<code>X-Location-Id</cod=
e>&nbsp;set to&nbsp;<code>*</code>:</p>
<pre><code>PURGE / HTTP 1.1 <br>Host: localhost <br>X-Location-Id: * </code=
></pre>
<h2 id=3D"Purge-Multipleservers">Multiple servers</h2>
<p>If you need to purge several servers at once (e.g. multiple Varnish infr=
astructure), you can set this up in the siteaccess configuration:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>exponential.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    http_cache:
        purge_type: single_http

    system:
        my_siteacess:
            http_cache:
                purge_servers: ["http://varnish.server1", "http://varnish.s=
erver2", "http://varnish.server3"]</pre>=20
</div>
</div>
<h2 id=3D"Purge-Manualpurging">Manual purging</h2>
<p>Manual purging is also possible:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">$locationIds =3D array( 123, 456 );
$container-&gt;get( 'exponential.http_cache.purger' )-&gt;purge( $locationIds=
 );</pre>=20
</div>
</div>
<p>&nbsp;</p>
<div class=3D"highlight" style=3D"margin-left: 0.0px;">
<pre>&nbsp;</pre>
</div>
    </div>
</body>
</html>
------=_Part_4007_437262653.1485856322422--
