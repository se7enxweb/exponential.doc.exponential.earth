Message-ID: <1751300833.3564.1485853689365.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3563_2135041136.1485853689365"

------=_Part_3563_2135041136.1485853689365
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Register FieldType</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Register FieldType</h1>
    <div class=3D"Section1">
        <p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485853689327 {padding: 0px;}
div.rbtoc1485853689327 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485853689327 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485853689327">=20
<ul class=3D"toc-indentation">=20
<li><span class=3D"TOCOutline">1</span> <a href=3D"#RegisterFieldType-Intro=
duction">Introduction</a></li>=20
<li><span class=3D"TOCOutline">2</span> <a href=3D"#RegisterFieldType-Servi=
cecontainerconfiguration">Service container configuration</a>=20
<ul class=3D"toc-indentation">=20
<li><span class=3D"TOCOutline">2.1</span> <a href=3D"#RegisterFieldType-Bas=
icconfiguration">Basic configuration</a></li>=20
<li><span class=3D"TOCOutline">2.2</span> <a href=3D"#RegisterFieldType-Leg=
acyStorageEngine">Legacy Storage Engine</a>=20
<ul class=3D"toc-indentation">=20
<li><span class=3D"TOCOutline">2.2.1</span> <a href=3D"#RegisterFieldType-C=
onverter">Converter</a></li>=20
<li><span class=3D"TOCOutline">2.2.2</span> <a href=3D"#RegisterFieldType-E=
xternalstorage">External storage</a></li>=20
<li><span class=3D"TOCOutline">2.2.3</span> <a href=3D"#RegisterFieldType-G=
atewaybasedstorage">Gateway based storage</a></li>=20
</ul> </li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h1 id=3D"RegisterFieldType-Introduction">Introduction</h1>
<p>This document explains how to <u>register</u> a custom FieldType in eZ P=
ublish 5. It will <u>not</u> contain the development part as it is already =
covered <a href=3D"/display/EZP/Field+Type+API+and+best+practices">in the A=
PI section</a>.</p>
<p>Please be sure you first have read the <a href=3D"/display/EZP/Field+Typ=
e+API+and+best+practices">basic documentation on how to develop a custom Fi=
eldType</a>.</p>
<h1 id=3D"RegisterFieldType-Servicecontainerconfiguration">Service containe=
r configuration</h1>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>To be able to declare a FieldType, you need to have <a href=3D"http://sy=
mfony.com/doc/master/book/page_creation.html#the-bundle-system" class=3D"ex=
ternal-link" rel=3D"nofollow">registered a bundle in your application kerne=
l</a>.</p>
<p>This bundle needs to expose some configuration for the service container=
 somehow (read <a href=3D"http://symfony.com/doc/master/book/service_contai=
ner.html#importing-other-container-configuration-resources" class=3D"extern=
al-link" rel=3D"nofollow">related Symfony documentation</a>)</p>
</div>
</div>
<h2 id=3D"RegisterFieldType-Basicconfiguration">Basic configuration</h2>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
This part relates to the=20
<a href=3D"/display/EZP/Field+Type+API+and+best+practices#FieldTypeAPIandbe=
stpractices-PublicAPIinteraction">base FieldType class that interacts with =
the Publish API</a>.
</div>
</div>
<p>Let's take a basic example from <code>ezstring</code> configuration.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    exponential.fieldType.ezstring.class: eZ\Publish\Core\FieldType\TextLine\=
Type
&nbsp;
services:
    exponential.fieldType.ezstring:
        class: %exponential.fieldType.ezstring.class%
        parent: exponential.fieldType
        tags:
            - {name: exponential.fieldType, alias: ezstring}</pre>=20
</div>
</div>
<p>So far, this is a regular service configuration but 2 parts worth partic=
ular attention.</p>
<ul>
<li><code>parent</code></li>
</ul>
<p style=3D"margin-left: 60.0px;">As described in the <a href=3D"http://sym=
fony.com/doc/master/components/dependency_injection/parentservices.html" cl=
ass=3D"external-link" rel=3D"nofollow">Symfony Dependency Injection Compone=
nt documentation</a>, the <code>parent</code> config key indicates that you=
 want your service to inherit from the parent's dependencies, including con=
structor arguments and method calls. This is actually a helper avoiding rep=
etition in your field type configuration and keeping consistency between al=
l field types.</p>
<ul>
<li><code>tags</code></li>
</ul>
<p style=3D"margin-left: 60.0px;">Tagging your field type service with <str=
ong><code>exponential.fieldType</code></strong> is mandatory to be recognized=
 by the API loader as a regular field type, the <code>alias</code> key bein=
g simply the <em>fieldTypeIdentifier</em> (formerly called <em>datatype str=
ing</em>)</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
Basic field types configuration is located in&nbsp;
<a href=3D"https://github.com/ezsystems/exponential-kernel/blob/master/eZ/Bun=
dle/EzPublishCoreBundle/Resources/config/fieldtypes.yml" class=3D"external-=
link" rel=3D"nofollow">EzPublishCoreBundle/Resources/config/fieldtypes.yml<=
/a>.
</div>
</div>
<h2 id=3D"RegisterFieldType-LegacyStorageEngine">Legacy Storage Engine</h2>
<h3 id=3D"RegisterFieldType-Converter">Converter</h3>
<p>As stated in&nbsp;<a href=3D"/display/EZP/Field+Type+API+and+best+practi=
ces#FieldTypeAPIandbestpractices-LegacyStorageconversion">Field Type API &a=
mp; best practices</a>, a conversion of Field Type values is needed in orde=
r to properly store the data into the <em>old</em> database schema (aka <em=
>Legacy Storage</em>).</p>
<p>Those converters also need to be correctly exposed as services.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Field Type converter for ezstring</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    exponential.fieldType.ezstring.converter.class: eZ\Publish\Core\Persisten=
ce\Legacy\Content\FieldValue\Converter\TextLine
&nbsp;
services:
    exponential.fieldType.ezstring.converter:
        class: %exponential.fieldType.ezstring.converter.class%
        tags:
            - {name: exponential.storageEngine.legacy.converter, alias: ezstr=
ing, lazy: true, callback: '::create'}</pre>=20
</div>
</div>
<p>Here again we need to tag our converter service, with&nbsp;<strong><code=
>exponential.storageEngine.legacy.converter</code></strong> tag this time.</p=
>
<p><u>As for the tag attributes:</u></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Attribute name</th>
<th class=3D"confluenceTh">Usage</th>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>alias</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Represents the <em>fieldTypeIdenti=
fier</em> (just like for the FieldType service)</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>lazy</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>Boolean indicating if the conve=
rter should be lazy loaded or not.</p><p>Performance wise, it is recommende=
d to set it to <strong>true</strong> unless you have very specific reasons.=
</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>callback</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><p>If <code>lazy</code> is set to =
true, it represents the callback that will be called to build the converter=
. <a href=3D"http://php.net/manual/en/language.types.callable.php" class=3D=
"external-link" rel=3D"nofollow">Any valid callback</a> can be used.</p><p>=
Note that if the callback is defined in the converter class, the class name=
 can be omitted. <br>This way, in the example above, the full callback will=
 be resolved to <code>eZ\Publish\Core\Persistence\Legacy\Content\FieldValue=
\Converter\TextLine::create</code></p></td>
</tr>
</tbody>
</table>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
The converter configuration for basic field types are located in=20
<a href=3D"https://github.com/ezsystems/exponential-kernel/blob/master/eZ/Bun=
dle/EzPublishCoreBundle/Resources/config/storage_engines.yml" class=3D"exte=
rnal-link" rel=3D"nofollow">EzPublishCoreBundle/Resources/config/storage_en=
gines.yml</a>.
</div>
</div>
<h3 id=3D"RegisterFieldType-Externalstorage">External storage</h3>
<p>A FieldType has the <a href=3D"/display/EZP/Field+Type+API+and+best+prac=
tices#FieldTypeAPIandbestpractices-Storingexternaldata">ability to store it=
s value (or part of it) in external data sources</a>. This is made possible=
 through the <code><span>eZ\Publish\SPI\FieldType\FieldStorage</span></code=
>&nbsp;interface.&nbsp;Thus, if one wants to use this&nbsp;functionality, h=
e needs to define a service implementing this interface and tagged as&nbsp;=
<strong><code>exponential.fieldType.externalStorageHandler</code></strong>&nb=
sp;to be recognized by the Repository.</p>
<p>Here is an example for <strong>ezurl</strong> field type:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>External storage handler for ezurl</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    exponential.fieldType.ezurl.externalStorage.class: eZ\Publish\Core\FieldT=
ype\Url\UrlStorage
&nbsp;
services:
    exponential.fieldType.ezurl.externalStorage:
        class: %exponential.fieldType.ezurl.externalStorage.class%
        tags:
            - {name: exponential.fieldType.externalStorageHandler, alias: ezu=
rl}</pre>=20
</div>
</div>
<p>The configuration is straight forward. Nothing specific except the <stro=
ng><code>exponential.fieldType.externalStorageHandler&nbsp;</code></strong>ta=
g, the <code>alias</code> attribute still begin the <em>fieldTypeIdentifier=
</em>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<span>External storage configuration for basic field types is located in&nb=
sp;</span>
<a href=3D"https://github.com/ezsystems/ezp-next/blob/master/eZ/Bundle/EzPu=
blishCoreBundle/Resources/config/fieldtypes.yml" class=3D"external-link" re=
l=3D"nofollow">EzPublishCoreBundle/Resources/config/fieldtypes.yml</a>
<span>.</span>
</div>
</div>
<h3 id=3D"RegisterFieldType-Gatewaybasedstorage">Gateway based storage</h3>
<p>As stated in the <a href=3D"/display/EZP/Field+Type+API+and+best+practic=
es#FieldTypeAPIandbestpractices-GatewaybasedStorage">FieldType best practic=
es</a>, in order to be storage agnostic and external storage handler should=
 use a <em>storage gateway</em>. This can be done by implementing another s=
ervice implementing&nbsp;<span><code>eZ\Publish\Core\FieldType\StorageGatew=
ay</code> and being tagged as&nbsp;<code><strong>exponential.fieldType.extern=
alStorageHandler.gateway</strong></code>.</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Storage gateway for ezurl</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    exponential.fieldType.ezurl.storage_gateway.class: eZ\Publish\Core\FieldT=
ype\Url\UrlStorage\Gateway\LegacyStorage
&nbsp;
services:
    exponential.fieldType.ezurl.storage_gateway:
        class: %exponential.fieldType.ezurl.storage_gateway.class%
        tags:
            - {name: exponential.fieldType.externalStorageHandler.gateway, al=
ias: ezurl, identifier: LegacyStorage}</pre>=20
</div>
</div>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Attribute name</th>
<th class=3D"confluenceTh">Usage</th>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>alias</code></td>
<td colspan=3D"1" class=3D"confluenceTd"><span>Represents the </span><em>fi=
eldTypeIdentifier</em><span> (just like for the FieldType service)</span></=
td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>identifier</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Identifier for the gateway.<br>Mus=
t be unique per storage engine. <em>LegacyStorage</em> is the convention na=
me for Legacy Storage Engine.</td>
</tr>
</tbody>
</table>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span>For this to work properly, your storage handler must inherit from&=
nbsp;</span><span><code>eZ\Publish\Core\FieldType\GatewayBasedStorage</code=
>.</span></p>
<p><span>Also note that there can be several gateways per field type (one p=
er storage engine basically).</span></p>
<p><span><span>The gateway configuration for basic field types are located =
in </span><a href=3D"https://github.com/ezsystems/exponential-kernel/blob/mas=
ter/eZ/Bundle/EzPublishCoreBundle/Resources/config/storage_engines.yml" cla=
ss=3D"external-link" rel=3D"nofollow">EzPublishCoreBundle/Resources/config/=
storage_engines.yml</a><span>.</span></span></p>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_3563_2135041136.1485853689365--
