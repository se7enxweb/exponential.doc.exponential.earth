Message-ID: <816969525.4228.1485861883267.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4227_696849776.1485861883267"

------=_Part_4227_696849776.1485861883267
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Configuration</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Configuration</h1>
    <div class=3D"Section1">
        <p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485861883127 {padding: 0px;}
div.rbtoc1485861883127 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485861883127 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485861883127">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Configuration-TheBasics">The Basics</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Configuration-Example">Example</a></li>=20
</ul> </li>=20
<li><a href=3D"#Configuration-DynamicconfigurationwiththeConfigResolver">Dy=
namic configuration with the ConfigResolver</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Configuration-Scope">Scope</a></li>=20
<li><a href=3D"#Configuration-ConfigResolverUsage">ConfigResolver Usage</a>=
</li>=20
<li><a href=3D"#Configuration-InjecttheConfigResolverinyourservices">Inject=
 the ConfigResolver in your services</a></li>=20
<li><a href=3D"#Configuration-Customlocaleconfiguration(5.1+)">Custom local=
e configuration (5.1+)</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"Configuration-TheBasics">The Basics</h2>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Important</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Configuration is tightly related to the service container. <br>To fully =
understand the following content, you need to be aware of <a href=3D"/displ=
ay/EZP51/Service+Container">Symfony's service container</a> and <a href=3D"=
http://symfony.com/doc/current/book/service_container.html#service-paramete=
rs" class=3D"external-link" rel=3D"nofollow">its configuration</a>.</p>
</div>
</div>
<p>Basic configuration handling in Exponential is similar to what is commonl=
y possible with Symfony. Regarding this, you can define key/value pairs in =
<a href=3D"http://symfony.com/doc/current/book/service_container.html#impor=
ting-other-container-configuration-resources" class=3D"external-link" rel=
=3D"nofollow">your configuration files</a>, under the main <strong>paramete=
rs</strong> key (like in&nbsp;<strong><a href=3D"https://github.com/ezsyste=
ms/exponential5/blob/master/app/config/parameters.yml.dist" class=3D"external=
-link" rel=3D"nofollow">parameters.yml</a></strong>).</p>
<p>Internally and by convention, keys follow a <strong>dot syntax</strong>&=
nbsp;where the different segments follow your configuration hierarchy. Keys=
 are usually prefixed by a&nbsp;<em>namespace</em>&nbsp;corresponding to yo=
ur application.<br>Values can be anything, <strong>including arrays and dee=
p hashes</strong>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
Exponential core configuration is prefixed by=20
<strong>ezsettings</strong> namespace, while=20
<em>internal</em> configuration (not to be used directly) is prefixed by=20
<strong>exponential</strong> namespace.
</div>
</div>
<h3 id=3D"Configuration-Example">Example</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Configuration</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    myapp.parameter.name: someValue
    myapp.boolean.param: true
    myapp.some.hash:
        foo: bar
        an_array: [apple, banana, pear]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Usage from a controller</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// Inside a controller
$myParameter =3D $this-&gt;container-&gt;getParameter( 'myapp.parameter.nam=
e' );</pre>=20
</div>
</div>
<h2 id=3D"Configuration-DynamicconfigurationwiththeConfigResolver">Dynamic =
configuration with the ConfigResolver</h2>
<p>In Exponential, it is fairly common to have different settings depending =
on the current siteaccess (e.g. languages, <a href=3D"/display/EZP51/View+p=
rovider+configuration">view provider</a> configuration).</p>
<h3 id=3D"Configuration-Scope">Scope</h3>
<p style=3D"margin-left: 0.0px;"><strong>Dynamic configuration&nbsp;</stron=
g>can be resolved depending on a <em>scope</em>.</p>
<p>Available scopes are (in order of precedence) :</p>
<ol>
<li><em>global</em></li>
<li>SiteAccess</li>
<li>SiteAcces group</li>
<li><em>default</em></li>
</ol>
<p>It gives the opportunity to define settings for a given siteaccess, for =
instance, like in the <a href=3D"http://doc.ez.no/Exponential/Technical-manu=
al/4.x/Concepts-and-basics/Configuration" class=3D"external-link" rel=3D"no=
follow">legacy INI override system</a>.</p>
<p>This mechanism is not limited to Exponential internal settings (aka&nbsp;=
<strong><em>ezsettings</em>&nbsp;namespace</strong>) and is applicable for =
specific needs (bundle related, project related, etc).</p>
<h3 id=3D"Configuration-ConfigResolverUsage">ConfigResolver Usage</h3>
<p>Dynamic configuration is handled by a <strong>config resolver</strong>. =
It consists in a service object mainly exposing&nbsp;<code>hasParameter()</=
code> and <code>getParameter()</code> methods.&nbsp;The idea is to check th=
e different <em>scopes</em> available for a given <em>namespace</em>&nbsp;t=
o find the appropriate parameter.</p>
<p>In order to work with the config resolver, your dynamic settings must co=
mply internally to the following name format : <code>&lt;namespace&gt;.&lt;=
scope&gt;.parameter.name</code>.</p>
<p>&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Namespace + scope example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    # Some internal configuration
    ezsettings.default.content.default_ttl: 60
    ezsettings.ezdemo_site.content.default_ttl: 3600
&nbsp;
    # Here "myapp" is the namespace, followed by the siteaccess name as the=
 parameter scope
    # Parameter "foo" will have a different value in ezdemo_site and ezdemo=
_site_admin
    myapp.ezdemo_site.foo: bar
    myapp.ezdemo_site_admin.foo: another value
    # Defining a default value, for other siteaccesses
    myapp.default.foo: Default value
&nbsp;
    # Defining a global setting, available for all siteaccesses
    #myapp.global.some.setting: This is a global value</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// Inside a controller, assuming siteaccess being "ezdemo_site"
/** @var $configResolver \eZ\Publish\Core\MVC\ConfigResolverInterface **/
$configResolver =3D $this-&gt;getConfigResolver();
&nbsp;
// ezsettings is the default namespace, so no need to precise it
// The following will resolve ezsettings.&lt;siteaccessName&gt;.content.def=
ault_ttl
// In the case of ezdemo_site, will return 3600.
// Otherwise it will return the value for ezsettings.default.content.defaul=
t_ttl (60)
$locationViewSetting =3D $configResolver-&gt;getParameter( 'content.default=
_ttl' );
&nbsp;
$fooSetting =3D $configResolver-&gt;getParameter( 'foo', 'myapp' );
// $fooSetting's value will be 'bar'
&nbsp;
// Force scope
$fooSettingAdmin =3D $configResolver-&gt;getParameter( 'foo', 'myapp', 'ezd=
emo_site_admin' );
// $fooSetting's value will be 'another value'
&nbsp;
// Note that the same applies for hasParameter()</pre>=20
</div>
</div>
<p>Both&nbsp;<code>getParameter()</code>&nbsp;and&nbsp;<code>hasParameter()=
</code>&nbsp;can take 3 different arguments:</p>
<ol>
<li><code>$paramName</code>&nbsp;(i.e. the name of the parameter you need)<=
/li>
<li><code>$namespace</code>&nbsp;(i.e. your application namespace,&nbsp;<em=
>myapp</em>&nbsp;in the previous example. If null, the default namespace wi=
ll be used, which is&nbsp;<strong>ezsettings</strong>&nbsp;by default)</li>
<li><code>$scope</code>&nbsp;(i.e. a siteaccess name. If null, the current =
siteaccess will be used)</li>
</ol>
<h3 id=3D"Configuration-InjecttheConfigResolverinyourservices">Inject the C=
onfigResolver in your services</h3>
<p>You can use the <strong>ConfigResolver</strong> in your own services whe=
never needed. To do this, just inject the <code><strong>exponential.config.re=
solver </strong>service</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    my_service.class: My\Cool\Service
&nbsp;
services:
    my_service:
        class: %my_service.class%
        arguments: [@exponential.config.resolver]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
namespace My\Cool;
&nbsp;
use eZ\Publish\Core\MVC\ConfigResolverInterface;
&nbsp;
class Service
{
   &nbsp;/**
     * @var \eZ\Publish\Core\MVC\ConfigResolverInterface
     */
    private $configResolver;
&nbsp;
    public function __construct( ConfigResolverInterface $configResolver )
    {
        $this-&gt;configResolver =3D $configResolver;
        $myParam =3D $this-&gt;configResolver-&gt;getParameter( 'foo', 'mya=
pp' );
    }
&nbsp;
    // ...
}</pre>=20
</div>
</div>
<h3 id=3D"Configuration-Customlocaleconfiguration(5.1+)">Custom locale conf=
iguration (5.1+)</h3>
<p>If you need to use a custom locale they can also be configurable in <cod=
e>exponential.yml</code>, adding them to the <em>conversion map</em>:</p>
<div class=3D"preformatted panel" style=3D"border-width: 1px;">
<div class=3D"preformattedContent panelContent">=20
<pre>exponential:
    # Locale conversion map between Exponential format (i.e. fre-FR) to POSI=
X (i.e. fr_FR).&nbsp;
    # The key is the Exponential locale. Check locale.yml in EzPublishCoreBu=
ndle to see natively supported locales.
    locale_conversion:
        eng-DE: en_DE</pre>=20
</div>
</div>
<p>A locale <em>conversion map</em> example <a href=3D"https://github.com/e=
zsystems/exponential-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resourc=
es/config/locale.yml" class=3D"external-link" rel=3D"nofollow">can be found=
 in the <code>core</code> bundle, on <code>locale.yml</code></a>.</p>
<p>&nbsp;</p>
<p></p>
<ul class=3D"childpages-macro">
<li><a href=3D"/display/EZP51/Legacy+configuration">Legacy configuration</a=
></li>
<li><a href=3D"/display/EZP51/Legacy+configuration+injection">Legacy config=
uration injection</a></li>
<li><a href=3D"/display/EZP51/Logging+configuration">Logging configuration<=
/a></li>
<li><a href=3D"/display/EZP51/Persistence+cache+configuration">Persistence =
cache configuration</a></li>
<li><a href=3D"/display/EZP51/View+provider+configuration">View provider co=
nfiguration</a></li>
</ul>
<p></p>
    </div>
</body>
</html>
------=_Part_4227_696849776.1485861883267--
