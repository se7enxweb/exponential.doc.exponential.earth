Message-ID: <6927827.4028.1485856410351.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_4027_907202608.1485856410350"

------=_Part_4027_907202608.1485856410350
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Context aware HTTP cache in Exponential 5.2-5.3</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Context aware HTTP cache in Exponential 5.2-5.3</h1>
    <div class=3D"Section1">
        <p><a class=3D"external-link" href=3D"https://github.com/ezsystems/=
exponential-kernel/blob/master/doc/specifications/cache/context_aware_http_ca=
che.md#workflow" name=3D"workflow" style=3D"text-decoration: none;" rel=3D"=
nofollow"></a>This feature is available from <strong>Exponential <span class=
=3D"status-macro aui-lozenge aui-lozenge-current">5.2</span> / <span class=
=3D"status-macro aui-lozenge aui-lozenge-current">2013.07</span></strong></=
p>
<h2 id=3D"ContextawareHTTPcacheinExponential5.2-5.3-Workflow">Workflow</h2>
<ol>
<li>Reverse proxy receives the HTTP request (without the user hash).</li>
<li><p>Reverse proxy does a sub-request (emulated in the case of&nbsp;<em>H=
ttpCache</em>).</p><p>Sub-request&nbsp;<strong>must</strong>&nbsp;have the =
following headers:</p>
<ul>
<li><code style=3D"margin-left: 2.0px;">X-HTTP-Override: AUTHENTICATE</code=
></li>
<li><code style=3D"margin-left: 2.0px;">Accept: application/vnd.ez.UserHash=
+text</code></li>
<li>Original cookie (mainly to keep trace of the sessionId)</li>
</ul></li>
<li><p>Exponential returns an HTTP response containing the user hash in&nbsp=
;<code>X-User-Hash</code>&nbsp;header.</p></li>
<li><p>Reverse proxy adds the&nbsp;<code>X-User-Hash</code>&nbsp;header to =
the original request.</p></li>
</ol>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Note on performance</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>User hash is <strong>not</strong> generated for each <code>AUTHENTICATE<=
/code> request. It is cached using the <code>Cookie</code> header string as=
 key. <br><strong>Hence each user has its own hash, generated once per sess=
ion.</strong></p>
<p>Hash generation being based by default on roles and limitations, <strong=
>a user can share the same hash with another one</strong> if their profile =
are similar. This is precisely what offers the possibility to <em>share HTT=
P cache</em> between several logged-in users.</p>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>You can customize user hash generation. Read&nbsp;<a href=3D"/display/EZ=
P/How+to+customize+UserHash+generation">How to customize UserHash generatio=
n</a> in the developer cookbook to learn more about this.</p>
</div>
</div>
<h2 id=3D"ContextawareHTTPcacheinExponential5.2-5.3-Varnish"><span style=3D"c=
olor: rgb(0,0,0);">Varnish</span></h2>
<p>Described behavior comes out of the box with Symfony reverse proxy, but =
it's of course possible ot use Varnish to achieve the same.</p>
<p>This can be done thanks to&nbsp;<a href=3D"https://github.com/varnish/li=
bvmod-curl" style=3D"text-decoration: none;" class=3D"external-link" rel=3D=
"nofollow">Varnish Curl vmod</a>.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: perl; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">import curl;

sub vcl_recv {
    # Do a standard lookup on assets
    # Note that file extension list below is not extensive, so consider com=
pleting it to fit your needs.
    if (req.request =3D=3D "GET" &amp;&amp; req.url ~ "\.(css|js|gif|jpe?g|=
bmp|png|tiff?|ico|img|tga|wmf|svg|swf|ico|mp3|mp4|m4a|ogg|mov|avi|wmv|zip|g=
z|pdf|ttf|eot|wof)$") {
        return (lookup);
    }

    if (req.request =3D=3D "GET") {
        # Pre-authenticate request to get shared cache, even when authentic=
ated
        if (req.http.Cookie !~ "eZSESSID" ) {
            # User don't have session cookie =3D&gt; Set a hardcoded anonym=
ous hash
            set req.http.X-User-Hash =3D "38015b703d82206ebc01d17a39c727e5"=
;
        } else {
            # User is authenticated =3D&gt; fetch user hash
            curl.header_add("X-HTTP-Override: AUTHENTICATE");
            curl.header_add("Accept: application/vnd.ez.UserHash+text");
            curl.header_add("Cookie: " + req.http.Cookie);
            # Customize with real backend host
            # E.g. curl.get("http://www.metalfrance.net");
            curl.get("http://&lt;host_of_your_backend&gt;/");
            if (curl.status() =3D=3D 200) {
                set req.http.X-User-Hash =3D curl.header("X-User-Hash");
            }
        }
    }

    # If it passes all these tests, do a lookup anyway;
    return (lookup);
}</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Securing hash generation request</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>By default, hash generation requests are granted for localhost (<code>12=
7.0.0.1</code>,&nbsp;<code>::1</code>,&nbsp;<code>fe80::1</code>).</p>
<p>If you want to enlarge the scope (e.g. if your Varnish server is not run=
ning on the same machine), you can override&nbsp;<code>canGenerateUserHash(=
)</code>&nbsp;protected method in your main kernel class (mostly&nbsp;<code=
>EzPublishKernel</code>).</p>
</div>
</div>
    </div>
</body>
</html>
------=_Part_4027_907202608.1485856410350--
