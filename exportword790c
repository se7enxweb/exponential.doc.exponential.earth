Message-ID: <2028073786.2708.1485850465749.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2707_655943516.1485850465749"

------=_Part_2707_655943516.1485850465749
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>SiteAccess</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>SiteAccess</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<h1 id=3D"SiteAccess-Introduction">Introduction</h1>
<p>eZ Platform allows you to maintain multiple sites in one installation us=
ing a feature called <strong>siteaccesses</strong>.</p>
<p>In short, a siteaccess is a set of configuration settings that is used w=
hen the site is reached through a specific address.</p>
<p>When the user accesses the site, the system analyzes the uri and compare=
s it to rules specified in the configuration. If it finds a set of fitting =
rules, this siteaccess is used.</p>
<h2 id=3D"SiteAccess-Whatdoesasiteaccessdo?">What does a siteaccess do?</h2=
>
<p>A siteaccess overrides the default configuration. This means that if the=
 siteaccess does not specify some aspect of the configuration, the default =
values will be used. The default configuration is also used when no siteacc=
ess can be matched to a situation.&nbsp;</p>
<p>A siteaccess can decide many things about the website, for example the d=
atabase, language or var directory that are used.</p>
<h2 id=3D"SiteAccess-Howisasiteaccessselected?">How is a siteaccess selecte=
d?</h2>
<p>A siteaccess is selected using one or more matchers =E2=80=93 rules base=
d on the uri or its parts. Example matching criteria are elements of the ur=
i, host name (or its parts), port number, etc.</p>
<p>For detailed information on how siteaccess matchers work, see <a href=3D=
"https://doc.ez.no/display/DEVELOPER/SiteAccess#SiteAccess-SiteaccessMatchi=
ng" rel=3D"nofollow">Siteaccess Matching</a>.</p>
<h2 id=3D"SiteAccess-Whatcanyouusesiteaccessesfor?">What can you use siteac=
cesses for?</h2>
<p>Typical uses of a siteaccess are:</p>
<ul>
<li>different language versions of the same site identified by a uri part; =
one siteaccess for one language</li>
<li>two different versions of a website: one siteaccess with a public inter=
face for visitors and one with a restricted interface for administrators</l=
i>
</ul>
<p>&nbsp;</p>
<p>Both the rules for siteaccess matching and its effects are located in th=
e main <strong>app/config/ezplatform.yml </strong>configuration file.</p>
<h2 id=3D"SiteAccess-Usecase:multilanguagesites">Use case: multilanguage si=
tes</h2>
<p>A site has content in two languages: English and Norwegian. It has one U=
RI per language:&nbsp;<span class=3D"nolink">http://example.com/eng</span> =
and http://example.com/nor. Uri parts of each language (eng, nor) are mappe=
d to a&nbsp;<em>siteaccess</em>, commonly named like the uri part: <code>en=
g</code>, <code><span>nor</span></code>. Using semantic configuration, each=
 of these siteaccesses can be assigned a prioritized list of languages it s=
hould display:</p>
<ul>
<li>The English site would display content in English and ignore Norwegian =
content;</li>
<li>The Norwegian site would display content in Norwegian but also in Engli=
sh&nbsp;<em>if it does not exist in Norwegian</em>.</li>
</ul>
<p>Such configuration would look like this:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
=09siteaccess:
=09=09# There are two siteaccess
=09=09list: [eng, nor]
&nbsp;
=09=09# eng is the default one if no prefix is specified
        default_siteaccess: eng

=09=09# the first URI of the element is used to find a siteaccess with a si=
milar name
        match:
=09=09    URIElement: 1


exponential:
=09# root node for configuration per siteaccess=20
=09system:
=09=09# Configuration for the 'eng' siteaccess
        eng:
=09=09=09languages: [eng-GB]
        nor:
            languages: [nor-NO, eng-GB]</pre>=20
</div>
</div>
<h2 id=3D"SiteAccess-Thedefaultscope">The default scope</h2>
<p>When no particular context is required, it is fine to use the `default` =
scope instead of specifying a siteaccess.</p>
<h1 id=3D"SiteAccess-Configuration">Configuration</h1>
<h2 id=3D"SiteAccess-Basics">Basics</h2>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Important</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Configuration is tightly related to the service container. <br>To fully =
understand the following content, you need to be familiar with <a href=3D"/=
display/DEVELOPER/Service+Container">Symfony's service container</a> and <a=
 href=3D"http://symfony.com/doc/current/book/service_container.html#service=
-parameters" class=3D"external-link" rel=3D"nofollow">its configuration</a>=
.</p>
</div>
</div>
<p>Basic configuration handling in eZ Platform is similar to what is common=
ly possible with Symfony. Regarding this, you can define key/value pairs in=
 <a href=3D"http://symfony.com/doc/current/book/service_container.html#impo=
rting-other-container-configuration-resources" class=3D"external-link" rel=
=3D"nofollow">your configuration files</a>, under the main <strong>paramete=
rs</strong> key (like in&nbsp;<strong><a href=3D"https://github.com/ezsyste=
ms/exponential5/blob/master/app/config/parameters.yml.dist" class=3D"external=
-link" rel=3D"nofollow">parameters.yml</a></strong>).</p>
<p>Internally and by convention, keys follow a <strong>dot syntax</strong>&=
nbsp;where the different segments follow your configuration hierarchy. Keys=
 are usually prefixed by a&nbsp;<em>namespace</em>&nbsp;corresponding to yo=
ur application. Values can be anything, <strong>including arrays and deep h=
ashes</strong>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
eZ Platform core configuration is prefixed by=20
<strong>ezsettings</strong> namespace, while=20
<em>internal</em> configuration (not to be used directly) is prefixed by=20
<strong>exponential</strong> namespace.
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>For configuration that is meant to be exposed to an end-user (or end-dev=
eloper), it's usually a good idea to also <a href=3D"http://symfony.com/doc=
/current/components/config/definition.html" class=3D"external-link" rel=3D"=
nofollow">implement semantic configuration</a>.</p>
<p>Note that it is also possible to <span class=3D"confluence-link"><a href=
=3D"/display/DEVELOPER/Exposing+SiteAccess-aware+configuration+for+your+bun=
dle">implement SiteAccess aware semantic configuration</a></span>.</p>
</div>
</div>
<h3 id=3D"SiteAccess-Example">Example</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Configuration</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    myapp.parameter.name: someValue
    myapp.boolean.param: true
    myapp.some.hash:
        foo: bar
        an_array: [apple, banana, pear]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Usage from a controller</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// Inside a controller
$myParameter =3D $this-&gt;container-&gt;getParameter( 'myapp.parameter.nam=
e' );</pre>=20
</div>
</div>
<h2 id=3D"SiteAccess-DynamicconfigurationwiththeConfigResolver">Dynamic con=
figuration with the ConfigResolver</h2>
<p>In eZ Platform it is fairly common to have different settings depending =
on the current siteaccess (e.g. languages, <a href=3D"/display/DEVELOPER/Co=
ntent+Rendering#ContentRendering-Viewproviderconfiguration">view provider</=
a> configuration).</p>
<h3 id=3D"SiteAccess-Scope">Scope</h3>
<p style=3D"margin-left: 0.0px;"><strong>Dynamic configuration&nbsp;</stron=
g>can be resolved depending on a <em>scope</em>.</p>
<p>Available scopes are (in order of precedence) :</p>
<ol>
<li><em>global</em></li>
<li>SiteAccess</li>
<li>SiteAccess group</li>
<li><em>default</em></li>
</ol>
<p>It gives the opportunity to define settings for a given siteaccess, for =
instance, like in the <a href=3D"http://doc.ez.no/Exponential/Technical-manu=
al/4.x/Concepts-and-basics/Configuration" class=3D"external-link" rel=3D"no=
follow">legacy INI override system</a>.</p>
<p>This mechanism is not limited to eZ Platform internal settings (aka&nbsp=
;<strong><em>ezsettings</em>&nbsp;namespace</strong>) and is applicable for=
 specific needs (bundle-related, project-related, etc.).</p>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Always prefer semantic configuration especially for internal eZ settings=
.<br>Manually editing internal eZ settings is possible, but at your own ris=
k, as unexpected behavior can occur.</p>
</div>
</div>
<h3 id=3D"SiteAccess-ConfigResolverUsage">ConfigResolver Usage</h3>
<p>Dynamic configuration is handled by a <strong>config resolver</strong>. =
It consists in a service object mainly exposing&nbsp;<code>hasParameter()</=
code> and <code>getParameter()</code> methods.&nbsp;The idea is to check th=
e different <em>scopes</em> available for a given <em>namespace</em>&nbsp;t=
o find the appropriate parameter.</p>
<p>In order to work with the config resolver, your dynamic settings must co=
mply internally with the following name format: <code>&lt;namespace&gt;.&lt=
;scope&gt;.parameter.name</code>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
The following configuration is=20
<strong>an example of internal usage</strong> inside the code of eZ Platfor=
m.
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Namespace + scope example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    # Some internal configuration
    ezsettings.default.content.default_ttl: 60
    ezsettings.ezdemo_site.content.default_ttl: 3600
&nbsp;
    # Here "myapp" is the namespace, followed by the siteaccess name as the=
 parameter scope
    # Parameter "foo" will have a different value in ezdemo_site and ezdemo=
_site_admin
    myapp.ezdemo_site.foo: bar
    myapp.ezdemo_site_admin.foo: another value
    # Defining a default value, for other siteaccesses
    myapp.default.foo: Default value
&nbsp;
    # Defining a global setting, used for all siteaccesses
    #myapp.global.some.setting: This is a global value</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">// Inside a controller, assuming siteaccess being "ezdemo_site"
/** @var $configResolver \eZ\Publish\Core\MVC\ConfigResolverInterface **/
$configResolver =3D $this-&gt;getConfigResolver();
&nbsp;
// ezsettings is the default namespace, so no need to specify it
// The following will resolve ezsettings.&lt;siteaccessName&gt;.content.def=
ault_ttl
// In the case of ezdemo_site, will return 3600.
// Otherwise it will return the value for ezsettings.default.content.defaul=
t_ttl (60)
$locationViewSetting =3D $configResolver-&gt;getParameter( 'content.default=
_ttl' );
&nbsp;
$fooSetting =3D $configResolver-&gt;getParameter( 'foo', 'myapp' );
// $fooSetting's value will be 'bar'
&nbsp;
// Force scope
$fooSettingAdmin =3D $configResolver-&gt;getParameter( 'foo', 'myapp', 'ezd=
emo_site_admin' );
// $fooSetting's value will be 'another value'
&nbsp;
// Note that the same applies for hasParameter()</pre>=20
</div>
</div>
<p>Both&nbsp;<code>getParameter()</code>&nbsp;and&nbsp;<code>hasParameter()=
</code>&nbsp;can take 3 different arguments:</p>
<ol>
<li><code>$paramName</code>&nbsp;(i.e. the name of the parameter you need)<=
/li>
<li><code>$namespace</code>&nbsp;(i.e. your application namespace,&nbsp;<em=
>myapp</em>&nbsp;in the previous example. If null, the default namespace wi=
ll be used, which is&nbsp;<strong>ezsettings</strong>&nbsp;by default)</li>
<li><code>$scope</code>&nbsp;(i.e. a siteaccess name. If null, the current =
siteaccess will be used)</li>
</ol>
<h3 id=3D"SiteAccess-InjecttheConfigResolverinyourservices">Inject the Conf=
igResolver in your services</h3>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Instead of injecting the whole ConfigResolver service, you may directly =
<a href=3D"https://doc.ez.no/display/DEVELOPER/SiteAccess#SiteAccess-Dynami=
cSettingsInjection" rel=3D"nofollow">inject your SiteAccess-aware settings =
(aka dynamic settings) into your own services</a>.</p>
</div>
</div>
<p>&nbsp;</p>
<p>You can use the <strong>ConfigResolver</strong> in your own services whe=
never needed. To do this, just inject the <code><strong>exponential.config.re=
solver </strong>service</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    my_service.class: My\Cool\Service
&nbsp;
services:
    my_service:
        class: %my_service.class%
        arguments: [@exponential.config.resolver]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
namespace My\Cool;
&nbsp;
use eZ\Publish\Core\MVC\ConfigResolverInterface;
&nbsp;
class Service
{
   &nbsp;/**
     * @var \eZ\Publish\Core\MVC\ConfigResolverInterface
     */
    private $configResolver;
&nbsp;
    public function __construct( ConfigResolverInterface $configResolver )
    {
        $this-&gt;configResolver =3D $configResolver;
        $myParam =3D $this-&gt;configResolver-&gt;getParameter( 'foo', 'mya=
pp' );
    }
&nbsp;
    // ...
}</pre>=20
</div>
</div>
<h2 id=3D"SiteAccess-Customlocaleconfiguration">Custom locale configuration=
</h2>
<p>If you need to use a custom locale they can also be configurable in <cod=
e>ezplatform.yml</code>, adding them to the <em>conversion map</em>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    # Locale conversion map between Exponential format (i.e. fre-FR) to POSI=
X (i.e. fr_FR).=20
    # The key is the Exponential locale. Check locale.yml in EzPublishCoreBu=
ndle to see natively supported locales.
    locale_conversion:
        eng-DE: en_DE</pre>=20
</div>
</div>
<p>A locale <em>conversion map</em> example <a href=3D"https://github.com/e=
zsystems/exponential-kernel/blob/master/eZ/Bundle/EzPublishCoreBundle/Resourc=
es/config/locale.yml" class=3D"external-link" rel=3D"nofollow">can be found=
 in the <code>core</code> bundle, on <code>locale.yml</code></a>.</p>
<h2 id=3D"SiteAccess-SiteaccessMatching">Siteaccess Matching</h2>
<p>Siteaccess matching is done through <strong>eZ\Publish\MVC\SiteAccess\Ma=
tcher</strong>&nbsp;objects. You can configure this matching and even devel=
op custom matchers.</p>
<p>To be usable, every siteaccess must be provided a matcher.</p>
<p>You can configure siteaccess matching in your main <strong>app/config/ez=
platform.yml</strong>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        default_siteaccess: ezdemo_site
        list:
            - ezdemo_site
            - eng
            - fre
            - fr_eng
            - ezdemo_site_admin
        groups:
            ezdemo_site_group:
                - ezdemo_site
                - eng
                - fre
                - fr_eng
                - ezdemo_site_admin
        match:
            Map\URI:
                ezdemo_site: ezdemo_site
                fre: fre
                ezdemo_site_admin: ezdemo_site_admin
</pre>=20
</div>
</div>
<p>You need to set several parameters:</p>
<ul>
<li><strong>exponential.siteaccess.default_siteaccess</strong></li>
<li><strong>exponential.siteaccess.list</strong></li>
<li><em>(optional)</em> <strong> exponential.siteaccess.groups</strong></li>
<li><strong>exponential.siteaccess.match</strong></li>
</ul>
<p><strong>exponential.siteaccess.default_siteaccess</strong> is the default =
siteaccess that will be used if matching was not successful. This ensures t=
hat a siteaccess is always defined.</p>
<p><strong>exponential.siteaccess.list</strong> is the list of all available =
siteaccesses in your website.</p>
<p><em>(optional)</em> <strong>exponential.siteaccess.groups</strong> defines=
 which groups siteaccesses belong to. This is useful when you want to mutua=
lize settings between several siteaccesses and avoid config duplication. Si=
teaccess groups are treated the same as regular siteaccesses as far as conf=
iguration is concerned.</p>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>A siteaccess can be part of several groups.</p>
<p>A siteaccess configuration has always precedence on the group configurat=
ion.</p>
</div>
</div>
<p><strong>exponential.siteaccess.match</strong> <span> holds the matching co=
nfiguration. It consists in a hash where the key is the name of the matcher=
 class. If the matcher class doesn't start with a </span> <strong>\</strong=
> <span>, it will be considered relative to </span> <code>eZ\Publish\MVC\Si=
teAccess\Matcher</code> <span> (e.g. </span> <code>Map\Host</code> <span> w=
ill refer to&nbsp;</span> <span> <code>eZ\Publish\MVC\SiteAccess\Matcher\Ma=
p\Host</code>)</span></p>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span>Every <strong>custom matcher</strong> can be specified with a <str=
ong>fully qualified class name</strong> (e.g. <code>\My\SiteAccess\Matcher<=
/code>) or by a <strong>service identifier prefixed by @</strong> (e.g. <co=
de>@my_matcher_service</code>).</span></p>
<ul>
<li><span>In the case of a fully qualified class name, the matching configu=
ration will be passed in the constructor.</span></li>
<li><span>In the case of a service, it must implement <code>eZ\Bundle\EzPub=
lishCoreBundle\SiteAccess\Matcher</code>. The matching configuration will b=
e passed to <code>setMatchingConfiguration()</code>.</span></li>
</ul>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Make sure to type the matcher in correct case. If it is in wrong case li=
ke "Uri" instead of "URI," it will happily work on systems like Mac OS X be=
cause of case insensitive file system, but will fail when you deploy it to =
a Linux server. This is a known artifact of <a href=3D"http://www.php-fig.o=
rg/psr/psr-0/" class=3D"external-link" rel=3D"nofollow">PSR-0 autoloading</=
a> of PHP classes.</p>
</div>
</div>
<h3 id=3D"SiteAccess-Availablematchers">Available matchers</h3>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Description</th>
<th class=3D"confluenceTh">Configuration</th>
<th colspan=3D"1" class=3D"confluenceTh">Example</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code>URIElement</code></td>
<td class=3D"confluenceTd">Maps a URI element to a siteaccess.<br>This is t=
he default matcher used when choosing <br>URI matching in setup wizard.&nbs=
p;</td>
<td class=3D"confluenceTd"><p>The element number you want to match (startin=
g from 1).</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            URIElement: 1</pre>=20
</div>
</div><p><span> <strong>Important:</strong> When using a value &gt; 1, it w=
ill concatenate the elements with _</span></p></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>URI:</strong> <code>/ez=
demo_site/foo/bar</code></p><p><u>Element number</u>: 1 <br> <u>Matched sit=
eaccess</u>: ezdemo_site</p><p><u>Element number</u>: 2<br> <u>Matched site=
access</u>: ezdemo_site_foo</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>URIText</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Matches URI using <em>pre</em> and=
/or <em>post</em> sub-strings <br>in the first URI segment</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>The prefix and/or suffix (none =
are required)</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            URIText:
                prefix: foo
                suffix: bar</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>URI:</strong> <code>/fo=
otestbar/my/content</code></p><p><u>Prefix</u>: foo<br> <u>Suffix</u>: bar<=
br> <u>Matched siteaccess</u>: test&nbsp;</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>HostElement</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Maps an element in the host name t=
o a siteaccess.</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>The element number you want to =
match (starting from 1).</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            HostElement: 2</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>Host name:</strong> <co=
de><a href=3D"http://www.example.com" class=3D"external-link" rel=3D"nofoll=
ow">www.example.com</a></code></p><p><u>Element number</u>: 2<br> <u>Matche=
d siteaccess</u>: example&nbsp;</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>HostText</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Matches a siteaccess in the host n=
ame, <br>using <em>pre</em> and/or <em>post</em> sub-strings.</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>The prefix and/or suffix (none =
are required)</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            HostText:
                prefix: www.
                suffix: .com</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>Host name</strong>: <co=
de><a href=3D"http://www.foo.com" class=3D"external-link" rel=3D"nofollow">=
www.foo.com</a></code></p><p><u>Prefix</u>: www.<br> <u>Suffix</u>: .com<br=
> <u>Matched siteaccess</u>: foo&nbsp;</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>Map\Host</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Maps a host name to a siteaccess.<=
/td>
<td colspan=3D"1" class=3D"confluenceTd"><p>A hash map of host/siteaccess</=
p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Map\Host:
                www.foo.com: foo_front
                adm.foo.com: foo_admin
                www.bar-stuff.fr: bar_front
                adm.bar-stuff.fr: bar_admin</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>In eZ Enterprise, when using the&nbsp;<code>Map\Host</code> matcher, you=
 need to provide the following line in your Twig template (e.g. in the head=
 of the main template file):</p>
<p><code>{{ multidomain_access() }}</code></p>
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><strong>Map</strong>:
<ul>
<li><a href=3D"http://www.foo.com" class=3D"external-link" rel=3D"nofollow"=
>www.foo.com</a> =3D&gt; foo_front</li>
<li><a href=3D"http://admin.foo.com" class=3D"external-link" rel=3D"nofollo=
w">admin.foo.com</a> =3D&gt; foo_admin&nbsp;</li>
</ul><p><strong>Host name</strong>: <a href=3D"http://www.example.com" clas=
s=3D"external-link" rel=3D"nofollow">www.example.com</a></p><p><u>Matched s=
iteaccess</u>: foo_front</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>Map\URI</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Maps a URI to a siteaccess</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>A hash map of URI/siteaccess</p=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Map\URI:
                something: ezdemo_site
                foobar: ezdemo_site_admin</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The name of the&nbsp;<code>Map\URI</code> matcher must be the same as th=
e siteaccess name. This also means that only one URI can be addressed by th=
e same matcher.</p>
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>URI:</strong> <code>/so=
mething/my/content</code></p><p><u>Map</u>:</p>
<ul>
<li>something =3D&gt; ezdemo_site</li>
<li>foobar =3D&gt; ezdemo_site_admin</li>
</ul><p><u>Matched siteaccess</u>: ezdemo_site</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>Map\Port</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Maps a port to a siteaccess</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>A has map of Port/siteaccess</p=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Match\Port:
                80: foo
                8080: bar</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>URL:</strong> <code> <s=
pan class=3D"nolink"><a href=3D"http://exponential.dev:8080/my/content" class=
=3D"external-link" rel=3D"nofollow">http://exponential.dev:8080/my/content</a=
></span> </code></p><p><u>Map</u>:</p>
<ul>
<li>80: foo</li>
<li>8080: bar</li>
</ul><p><u>Matched siteaccess</u>: bar</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>Regex\Host</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Matches against a regexp and extra=
cts a portion of it</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>The regexp to match against <br=
>and the captured element to use</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Regex\Host:
                regex: "^(\\w+_sa)$"
                # Default is 1
                itemNumber: 1</pre>=20
</div>
</div></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>Host name:</strong> <co=
de>example_sa</code></p><p><u>regex</u>: <code>^(\\w+)_sa$</code> <br> <u>i=
temNumber</u>: 1</p><p><u>Matched siteaccess</u>: example</p></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd"><code>Regex\URI</code></td>
<td colspan=3D"1" class=3D"confluenceTd">Matches against a regexp and extra=
cts a portion of it</td>
<td colspan=3D"1" class=3D"confluenceTd"><p><span>The regexp to match again=
st <br>and the captured element to use</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Regex\URI:
                regex: "^/foo(\\w+)bar"
                # Default is 1
                itemNumber: 1</pre>=20
</div>
</div><p><span> <br> </span></p></td>
<td colspan=3D"1" class=3D"confluenceTd"><p><strong>URI:</strong> <code>/fo=
otestbar/something</code></p><p><u>regex</u>: ^/foo(\\w+)bar<br> <u>itemNum=
ber</u>: 1</p><p><u>Matched siteaccess</u>: test&nbsp;</p></td>
</tr>
</tbody>
</table>
</div>
<h3 id=3D"SiteAccess-Compoundsiteaccessmatcher">Compound siteaccess matcher=
</h3>
<p>The Compound siteaccess matcher allows you to combine several matchers t=
ogether:</p>
<ul>
<li><a href=3D"http://example.com/en" class=3D"external-link" rel=3D"nofoll=
ow">http://example.com/en</a>&nbsp;matches site_en (match on host=3D<a href=
=3D"http://example.com" class=3D"external-link" rel=3D"nofollow">example.co=
m</a> <em>and</em> URIElement(1)=3Den)</li>
<li><a href=3D"http://example.com/fr" class=3D"external-link" rel=3D"nofoll=
ow">http://example.com/fr</a>&nbsp;matches site_fr&nbsp;(match on host=3D<a=
 href=3D"http://example.com" class=3D"external-link" rel=3D"nofollow">examp=
le.com</a> <em>and</em> URIElement(1)=3Dfr)</li>
<li><a href=3D"http://admin.example.com" class=3D"external-link" rel=3D"nof=
ollow">http://admin.example.com</a>&nbsp;matches site_admin (match on host=
=3D<a href=3D"http://admin.example.com" class=3D"external-link" rel=3D"nofo=
llow">admin.example.com</a>)</li>
</ul>
<p>Compound matchers cover the legacy&nbsp;<strong> <em>host_uri</em> </str=
ong> matching feature.</p>
<p>They are based on logical combinations, or/and, using logical compound m=
atchers:</p>
<ul>
<li><code>Compound\LogicalAnd</code></li>
<li><code>Compound\LogicalOr</code></li>
</ul>
<p>Each compound matcher will specify two or more sub-matchers. A rule will=
 match if all the matchers, combined with the logical matcher, are positive=
.&nbsp;The example above would have used <code>Map\Host</code>&nbsp;and&nbs=
p;<code>Map\Uri</code>., combined with a <code>LogicalAnd</code>. When both=
 the URI and host match, the siteaccess configured with "match" is used.</p=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezplatform.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">exponential:
    siteaccess:
        match:
            Compound\LogicalAnd:
                # Nested matchers, with their configuration.
                # No need to precise their matching values (true will suffi=
ce).
                site_en:
                    matchers:
                        Map\URI:
                            en: true
                        Map\Host:
                            example.com: true
                    match: site_en
                site_fr:
                    matchers:
                        Map\URI:
                            fr: true
                        Map\Host:
                            example.com: true
                    match: site_fr
            Map\Host:
                admin.example.com: site_admin</pre>=20
</div>
</div>
<h3 id=3D"SiteAccess-Matchingbyrequestheader">Matching by request header</h=
3>
<p>It is possible to define which siteaccess to use by setting an <strong>X=
-Siteaccess</strong> header in your request. This can be useful for REST re=
quests.</p>
<p>In such case, <strong>X-Siteaccess</strong> must be the <strong>siteacce=
ss name</strong> (e.g. <em>ezdemo_site</em>).</p>
<h3 id=3D"SiteAccess-Matchingbyenvironmentvariable">Matching by environment=
 variable</h3>
<p>It is also possible to define which siteaccess to use directly via an <s=
trong>EZPUBLISH_SITEACCESS</strong> environment variable.</p>
<p>This is recommended if you want to get <strong>performance gain</strong>=
 since no matching logic is done in this case.</p>
<p>You can define this environment variable directly from your web server c=
onfiguration:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Apache VirtualHost example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: plain; gutter: false; theme: Eclipse" style=3D"font-si=
ze:12px;"># This configuration assumes that mod_env is activated
&lt;VirtualHost *:80&gt;
    DocumentRoot "/path/to/exponential5/web/folder"
    ServerName example.com
    ServerAlias www.example.com
    SetEnv EZPUBLISH_SITEACCESS ezdemo_site
&lt;/VirtualHost&gt;</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span>This can also be done via PHP-FPM configuration file, if you use i=
t. See&nbsp;</span> <a href=3D"http://php.net/manual/en/install.fpm.configu=
ration.php#example-60" class=3D"external-link" rel=3D"nofollow">PHP-FPM doc=
umentation</a> <span>&nbsp;for more information.</span></p>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Note about precedence</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>&nbsp;The precedence order for siteaccess matching is the following (the=
 first matched wins):</p>
<ol>
<li>Request header</li>
<li>Environment variable</li>
<li>Configured matchers</li>
</ol>
</div>
</div>
<h3 id=3D"SiteAccess-URILexerandsemanticPathinfo">URILexer and semanticPath=
info</h3>
<p>In some cases, after matching a siteaccess, it is neecessary to modify t=
he original request URI. This is for example needed with URI-based matchers=
 since the siteaccess is contained in the original URI and it is not part o=
f the route itself.</p>
<p>The problem is addressed by <em>analyzing</em> this URI and by modifying=
 it when needed through the <strong>URILexer</strong> interface.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>URILexer interface</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/**
 * Interface for SiteAccess matchers that need to alter the URI after match=
ing.
 * This is useful when you have the siteaccess in the URI like "/&lt;siteac=
cessName&gt;/my/awesome/uri"
 */
interface URILexer
{
    /**
     * Analyses $uri and removes the siteaccess part, if needed.
     *
     * @param string $uri The original URI
     * @return string The modified URI
     */
    public function analyseURI( $uri );
    /**
     * Analyses $linkUri when generating a link to a route, in order to hav=
e the siteaccess part back in the URI.
     *
     * @param string $linkUri
     * @return string The modified link URI
     */
    public function analyseLink( $linkUri );
}</pre>=20
</div>
</div>
<p>Once modified, the URI is stored in the <em> <strong>semanticPathinfo</s=
trong> </em> request attribute, and the original pathinfo is not modified.<=
/p>
<h1 id=3D"SiteAccess-Usage">Usage</h1>
<h2 id=3D"SiteAccess-Cross-siteacesslinks">Cross-siteacess links</h2>
<p>When using the <em>multisite</em> feature, it is sometimes useful to be =
able to <strong>generate cross-links</strong> between the different sites.<=
br> This allows you to link different resources referenced in the same cont=
ent repository, but configured independently with different tree roots.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Twig example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&nbsp;{# Linking a location #}=20
&lt;a href=3D"{{ url( 'ez_urlalias', {'locationId': 42, 'siteaccess': 'some=
_siteaccess_name'} ) }}"&gt;{{ ez_content_name( content ) }}&lt;/a&gt;

{# Linking a regular route #}=20
&lt;a href=3D"{{ url( "some_route_name", {"siteaccess": "some_siteaccess_na=
me"} ) }}"&gt;Hello world!&lt;/a&gt;</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
See=20
<span class=3D"confluence-link"><a href=3D"/display/DEVELOPER/Content+Rende=
ring#ContentRendering-ez_urlalias">ez_urlalias</a> </span>documentation pag=
e, for more information about linking to a Location
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>PHP example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\TestBundle\Controller;

use eZ\Bundle\EzPublishCoreBundle\Controller as BaseController;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;

class MyController extends BaseController
{
    public function fooAction()
    {
        // ...

        $location =3D $this-&gt;getRepository()-&gt;getLocationService()-&g=
t;loadLocation( 123 );
        $locationUrl =3D $this-&gt;generateUrl(
            $location,
            array( 'siteaccess' =3D&gt; 'some_siteaccess_name' ),
            UrlGeneratorInterface::ABSOLUTE_PATH
        );

        $regularRouteUrl =3D $this-&gt;generateUrl(
            'some_route_name',
            array( 'siteaccess' =3D&gt; 'some_siteaccess_name' ),
            UrlGeneratorInterface::ABSOLUTE_PATH
        );

        // ...
    }
}</pre>=20
</div>
</div>
<div class=3D"highlight highlight-php">
<pre>&nbsp;</pre>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Important</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
As siteaccess matchers can involve hosts and ports, it is=20
<strong>highly recommended</strong> to generate cross-siteaccess links in a=
n absolute form (e.g. using=20
<code>url()</code> Twig helper).
</div>
</div>
<h3 id=3D"SiteAccess-Troubleshooting">Troubleshooting</h3>
<ul>
<li>The<strong> first matcher succeeding always wins</strong>, so be carefu=
l when using <em>catch-all</em> matchers like <code>URIElement</code>.</li>
<li>If passed siteaccess name is not a valid one, an <code>InvalidArgumentE=
xception</code> will be thrown.</li>
<li>If matcher used to match the provided siteaccess doesn't implement <cod=
e>VersatileMatcher</code>, the link will be generated for the current sitea=
ccess.</li>
<li>When using <code>Compound\LogicalAnd</code>, all inner matchers <strong=
>must match</strong>. If at least one matcher doesn't implement <code>Versa=
tileMatcher</code>, it will fail.</li>
<li>When using <code>Compound\LogicalOr</code>, the first inner matcher suc=
ceeding will win.</li>
</ul>
<h3 id=3D"SiteAccess-Underthehood">Under the hood</h3>
<p>To implement this feature, a new <code>VersatileMatcher</code> was added=
 to allow siteaccess matchers to be able to <em>reverse-match</em>.<br> All=
 existing matchers implement this new interface, except the Regexp based ma=
tchers which have been deprecated.</p>
<p>The siteaccess router has been added a <code>matchByName()</code> method=
 to reflect this addition. Abstract URLGenerator and <code>DefaultRouter</c=
ode> have been updated as well.</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Note</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
Siteaccess router public methods have also been extracted to a new interfac=
e,=20
<code>SiteAccessRouterInterface</code>.
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<p class=3D"title">Landing Page - Known limitation</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>In eZ Studio's Landing Page you can encounter a 404 error when clicking =
a relative link which points to a different siteaccess (if the Content item=
 being previewed does not exist in the previously used siteaccess). This is=
 because detecting siteaccesses when navigating in preview is not functiona=
l yet. This is a known limitation that is awaiting resolution.</p>
</div>
</div>
<h2 id=3D"SiteAccess-DynamicSettingsInjection">Dynamic Settings Injection</=
h2>
<p>Before 5.4, if you wanted to implement a service needing siteaccess-awar=
e settings (e.g. language settings), you needed to inject the whole <code>C=
onfigResolver</code> (<code>exponential.config.resolver</code>) and get the n=
eeded settings from it. This was neither very convenient nor explicit.</p>
<p>The goal of this feature is to allow developers to inject these dynamic =
settings explicitly from their service definition (yml, xml, annotation, et=
c.).</p>
<h3 id=3D"SiteAccess-Syntax">Syntax</h3>
<p>Static container parameters follow the <code>%&lt;parameter_name&gt;%</c=
ode> syntax in Symfony.</p>
<p>Dynamic parameters have the following: <code>$&lt;parameter_name&gt;[; &=
lt;namespace&gt;[; &lt;scope&gt;]]$</code>, default namespace being <code>e=
zsettings</code>, and default scope being the current siteaccess.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
For more information, see=20
<a href=3D"https://doc.ez.no/display/DEVELOPER/SiteAccess#SiteAccess-Config=
uration" rel=3D"nofollow">ConfigResolver documentation</a>.
</div>
</div>
<h3 id=3D"SiteAccess-DynamicSettingParser">DynamicSettingParser</h3>
<p>This feature also introduces a <em>DynamicSettingParser</em> service tha=
t can be used for adding support of the dynamic settings syntax.<br> This s=
ervice has <code>exponential.config.dynamic_setting.parser</code> for ID and =
implements<code> eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configur=
ation\SiteAccessAware\DynamicSettingParserInterface</code>.</p>
<h3 id=3D"SiteAccess-Limitations">Limitations</h3>
<p>A few limitations still remain:</p>
<ul class=3D"task-list">
<li><span>It is not possible to use dynamic settings in your semantic confi=
guration (e.g. <code>config.yml</code> or <code>ezplatform.yml</code>)&nbsp=
;<span>as they are meant primarily for parameter injection in services.</sp=
an> </span></li>
<li>It is not possible to define an array of options having dynamic setting=
s. They will not be parsed. Workaround is to use separate arguments/setters=
.</li>
<li>Injecting dynamic settings in request listeners is <strong>not recommen=
ded</strong>, as it won't be resolved with the correct scope (request liste=
ners are <strong>instantiated before SiteAccess match</strong>). Workaround=
 is to inject the ConfigResolver instead, and resolving the setting in your=
 <code>onKernelRequest</code> method (or equivalent).</li>
</ul>
<h3 id=3D"SiteAccess-Examples">Examples</h3>
<h4 id=3D"SiteAccess-InjectinganeZparameter">Injecting an eZ parameter</h4>
<p>Defining a simple service needing <code>languages</code> parameter (i.e.=
 prioritized languages).</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<p class=3D"title">Note</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Internally, <code>languages</code> parameter is defined as <code>ezsetti=
ngs.&lt;siteaccess_name&gt;.languages</code>, <code>ezsettings</code> being=
 eZ internal <em>namespace</em>.</p>
</div>
</div>
<h4 id=3D"SiteAccess-Before5.4"><strong>Before 5.4<br> </strong></h4>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    acme_test.my_service.class: Acme\TestBundle\MyServiceClass

services:
    acme_test.my_service:
        class: %acme_test.my_service.class%
        arguments: [@exponential.config.resolver]

namespace Acme\TestBundle;</pre>=20
</div>
</div>
<p><strong> <br> </strong></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">use eZ\Publish\Core\MVC\ConfigResolverInterface;

class MyServiceClass
{
    /**
 * Prioritized languages
 *
 * @var array
 */
    private $languages;

    public function __construct( ConfigResolverInterface $configResolver )
    {
        $this-&gt;languages =3D $configResolver-&gt;getParameter( 'language=
s' );
    }
}</pre>=20
</div>
</div>
<h4 id=3D"SiteAccess-After,withsetterinjection(preferred)">After, with sett=
er injection (preferred)</h4>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">parameters:
    acme_test.my_service.class: Acme\TestBundle\MyServiceClass

services:
    acme_test.my_service:
        class: %acme_test.my_service.class%
        calls:
            - [setLanguages, ["$languages$"]]
</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\TestBundle;

class MyServiceClass
{
    /**
 * Prioritized languages
 *
 * @var array
 */
    private $languages;

    public function setLanguages( array $languages =3D null )
    {
        $this-&gt;languages =3D $languages;
    }
}</pre>=20
</div>
</div>
<p>&nbsp;</p>
<div class=3D"highlight highlight-php">
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-war=
ning">
<span class=3D"aui-icon aui-icon-small aui-iconfont-error confluence-inform=
ation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><strong>Important</strong>: Ensure you always add <code>null</code> as a=
 default value, especially if the argument is type-hinted.</p>
</div>
</div>
<h4 id=3D"SiteAccess-After,withconstructorinjection">After, with constructo=
r injection</h4>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">parameters:
    acme_test.my_service.class: Acme\TestBundle\MyServiceClass

services:
    acme_test.my_service:
        class: %acme_test.my_service.class%
        arguments: ["$languages$"]</pre>=20
</div>
</div>
<div class=3D"highlight highlight-yaml">
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\TestBundle;

class MyServiceClass
{
    /**
 * Prioritized languages
 *
 * @var array
 */
    private $languages;

    public function __construct( array $languages )
    {
        $this-&gt;languages =3D $languages;
    }
}</pre>=20
</div>
</div>
<p>&nbsp;</p>
</div>
<div class=3D"highlight highlight-php">
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<p class=3D"title">Tip</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Setter injection for dynamic settings should always be preferred, as it =
makes it possible to update your services that depend on them when ConfigRe=
solver is updating its scope (e.g. when previewing content in a given SiteA=
ccess). <strong>However, only one dynamic setting should be injected by set=
ter</strong> <span>.</span></p>
<p><strong>Constructor injection will make your service be reset in that ca=
se.</strong></p>
</div>
</div>
<h4 id=3D"SiteAccess-Injecting3rdpartyparameters"><span style=3D"color: rgb=
(0,98,147);">Injecting 3rd party parameters</span></h4>
</div>
<div class=3D"highlight highlight-yaml">
<p>&nbsp;</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: bash; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">parameters:
    acme_test.my_service.class: Acme\TestBundle\MyServiceClass
    # "acme" is our parameter namespace.
    # Null is the default value.
    acme.default.some_parameter: ~
    acme.ezdemo_site.some_parameter: foo
    acme.ezdemo_site_admin.some_parameter: bar
&nbsp;
services:
    acme_test.my_service:
        class: %acme_test.my_service.class%
        # The following argument will automatically resolve to the right va=
lue, depending on the current SiteAccess.
        # We specify "acme" as the namespace we want to use for parameter r=
esolving.
        calls:
            - [setSomeParameter, ["$some_parameter;acme$"]]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">namespace Acme\TestBundle;
class MyServiceClass
{
    private $myParameter;
    public function setSomeParameter( $myParameter =3D null )
    {
        // Will be "foo" for ezdemo_site, "bar" for ezdemo_site_admin, or n=
ull if another SiteAccess.
        $this-&gt;myParameter =3D $myParameter;
    }
}</pre>=20
</div>
</div>
</div>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"SiteAccess-Inthistopic:">In this topic:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485850465712 {padding: 0px;}
div.rbtoc1485850465712 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485850465712 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485850465712">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Introduction">Introduction</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Whatdoesasiteaccessdo?">What does a siteaccess d=
o?</a></li>=20
<li><a href=3D"#SiteAccess-Howisasiteaccessselected?">How is a siteaccess s=
elected?</a></li>=20
<li><a href=3D"#SiteAccess-Whatcanyouusesiteaccessesfor?">What can you use =
siteaccesses for?</a></li>=20
<li><a href=3D"#SiteAccess-Usecase:multilanguagesites">Use case: multilangu=
age sites</a></li>=20
<li><a href=3D"#SiteAccess-Thedefaultscope">The default scope</a></li>=20
</ul> </li>=20
<li><a href=3D"#SiteAccess-Configuration">Configuration</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Basics">Basics</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Example">Example</a></li>=20
</ul> </li>=20
<li><a href=3D"#SiteAccess-DynamicconfigurationwiththeConfigResolver">Dynam=
ic configuration with the ConfigResolver</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Scope">Scope</a></li>=20
<li><a href=3D"#SiteAccess-ConfigResolverUsage">ConfigResolver Usage</a></l=
i>=20
<li><a href=3D"#SiteAccess-InjecttheConfigResolverinyourservices">Inject th=
e ConfigResolver in your services</a></li>=20
</ul> </li>=20
<li><a href=3D"#SiteAccess-Customlocaleconfiguration">Custom locale configu=
ration</a></li>=20
<li><a href=3D"#SiteAccess-SiteaccessMatching">Siteaccess Matching</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Availablematchers">Available matchers</a></li>=
=20
<li><a href=3D"#SiteAccess-Compoundsiteaccessmatcher">Compound siteaccess m=
atcher</a></li>=20
<li><a href=3D"#SiteAccess-Matchingbyrequestheader">Matching by request hea=
der</a></li>=20
<li><a href=3D"#SiteAccess-Matchingbyenvironmentvariable">Matching by envir=
onment variable</a></li>=20
<li><a href=3D"#SiteAccess-URILexerandsemanticPathinfo">URILexer and semant=
icPathinfo</a></li>=20
</ul> </li>=20
</ul> </li>=20
<li><a href=3D"#SiteAccess-Usage">Usage</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Cross-siteacesslinks">Cross-siteacess links</a>=
=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Troubleshooting">Troubleshooting</a></li>=20
<li><a href=3D"#SiteAccess-Underthehood">Under the hood</a></li>=20
</ul> </li>=20
<li><a href=3D"#SiteAccess-DynamicSettingsInjection">Dynamic Settings Injec=
tion</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SiteAccess-Syntax">Syntax</a></li>=20
<li><a href=3D"#SiteAccess-DynamicSettingParser">DynamicSettingParser</a></=
li>=20
<li><a href=3D"#SiteAccess-Limitations">Limitations</a></li>=20
<li><a href=3D"#SiteAccess-Examples">Examples</a></li>=20
</ul> </li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h4 id=3D"SiteAccess-Relatedtopics:">Related topics:</h4>
<p><a href=3D"https://doc.ez.no/display/DEVELOPER/SiteAccess#SiteAccess-Cro=
ss-siteacesslinks" rel=3D"nofollow">Cross-siteaccess links</a></p>
<p><span class=3D"confluence-link"><a href=3D"/display/DEVELOPER/Multisite#=
Multisite-SettingTheIndexPage">Setting the Index Page</a></span></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2707_655943516.1485850465749--
