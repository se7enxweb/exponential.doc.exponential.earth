Message-ID: <2026325178.3746.1485855143111.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_3745_1703725317.1485855143111"

------=_Part_3745_1703725317.1485855143111
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Error handling</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Error handling</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<p>Error handling in the REST API is fully based on HTTP error codes. As a =
web developer, you are probably familiar with the most common ones:&nbsp;40=
1 Unauthorized, 404 Not Found or&nbsp;500 Internal Server Error. The REST A=
PI uses those, along with a few more, to allow proper error handling.</p>
<p>The complete list of error codes used and the conditions in which they a=
pply are specified in the <a href=3D"https://github.com/ezsystems/exponential=
-kernel/blob/master/doc/specifications/rest/REST-API-V2.rst" class=3D"exter=
nal-link" rel=3D"nofollow">reference documentation</a>.</p>
<h2 id=3D"Errorhandling-Generalerrorcodes">General error codes</h2>
<p>A few error codes apply to most resources (if they&nbsp;<em>are</em> app=
licable)</p>
<h3 id=3D"Errorhandling-500InternalServerError">500 Internal Server Error</=
h3>
<p><span>The server encountered an unexpected condition, usually an excepti=
on, which prevented it from fulfilling the request: database down, permissi=
ons or configuration error.</span></p>
<h3 id=3D"Errorhandling-501NotImplemented">501 Not Implemented</h3>
<p><span>Returned when the requested method has not yet been implemented. A=
s of Exponential 5.0, most of User, User group, Content, Location and Conten=
t Type have been implemented. Some of their methods, as well as other featu=
res, may return a 501.</span></p>
<h3 id=3D"Errorhandling-404NotFound"><span>404 Not Found</span></h3>
<p><span>Returned when the request failed because the request object was no=
t found. You should be familiar with this one.</span></p>
<h3 id=3D"Errorhandling-405MethodNotAllowed"><span>405 Method Not Allowed</=
span></h3>
<p><span>Returned when the requested REST API resource doesn't support the =
HTTP verb that was used.</span></p>
<h3 id=3D"Errorhandling-406NotAcceptable"><span>406 Not Acceptable</span></=
h3>
<p><span>Returned when an accept header sent with the requested isn't suppo=
rted.</span></p>
<h2 id=3D"Errorhandling-ErrorhandlinginyourRESTimplementation"><span>Error =
handling in your REST implementation</span></h2>
<p><span>It is up to you, in your client implementation, to handle those co=
des by checking if an error code (4xx or 5xx) was returned instead of the e=
xpected 2xx or 3xx.</span></p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"Errorhandling-Inthistopic:">In this topic:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485855143105 {padding: 0px;}
div.rbtoc1485855143105 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485855143105 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485855143105">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Errorhandling-Generalerrorcodes">General error codes</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Errorhandling-500InternalServerError">500 Internal Server E=
rror</a></li>=20
<li><a href=3D"#Errorhandling-501NotImplemented">501 Not Implemented</a></l=
i>=20
<li><a href=3D"#Errorhandling-404NotFound">404 Not Found</a></li>=20
<li><a href=3D"#Errorhandling-405MethodNotAllowed">405 Method Not Allowed</=
a></li>=20
<li><a href=3D"#Errorhandling-406NotAcceptable">406 Not Acceptable</a></li>=
=20
</ul> </li>=20
<li><a href=3D"#Errorhandling-ErrorhandlinginyourRESTimplementation">Error =
handling in your REST implementation</a></li>=20
</ul>=20
</div>
<p></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_3745_1703725317.1485855143111--
