Message-ID: <1146622059.2718.1485850502468.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2717_2108331928.1485850502468"

------=_Part_2717_2108331928.1485850502468
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Creating Landing Page blocks (Enterprise)</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Creating Landing Page blocks (Enterprise)</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<h1 id=3D"CreatingLandingPageblocks(Enterprise)-Description">Description</h=
1>
<p><span class=3D"status-macro aui-lozenge aui-lozenge-current">V1.2</span>=
</p>
<p>A Landing Page&nbsp;has a customizable&nbsp;<span class=3D"DEF"><span cl=
ass=3D"DEF">layout</span></span> with multiple zones where you can place pr=
edefined&nbsp;blocks with content.</p>
<p>By default eZ Enterprise comes with a number of preset Landing Page bloc=
ks. You can, however, add custom blocks to your configuration.</p>
<h1 id=3D"CreatingLandingPageblocks(Enterprise)-Solution">Solution</h1>
<h2 id=3D"CreatingLandingPageblocks(Enterprise)-Blockconfiguration">Block c=
onfiguration</h2>
<p>In the Demo installation the layout configuration is stored in <code>ezs=
tudio-demo-bundle/Resources/config/default_layouts.yml</code>:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example default_layouts.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">blocks:
    gallery:
        views:
            gallery:
                template: eZStudioDemoBundle:blocks:gallery.html.twig
                name: Default Gallery Block template
    keyword:
        views:
            keyword:
                template: eZStudioDemoBundle:blocks:keyword.html.twig
                name: Default Keyword Block template
    rss:
        views:
            rss:
                template: eZStudioDemoBundle:blocks:rss.html.twig
                name: Default RSS Block template
    tag:
        views:
            tag:
                template: eZStudioDemoBundle:blocks:tag.html.twig
                name: Default Tag Block template</pre>=20
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"CreatingLandingPageblocks(Enterprise)-Creatinganewblock">Creating=
 a new block</h2>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-Creatingaclassfortheblock">=
Creating a class for the block</h3>
<p>The class for the block must implement the <code>BlockType</code> interf=
ace:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\Bl=
ockType</pre>=20
</div>
</div>
<p>Most methods are implemented in a universal way by using <span>the <code=
>AbstractBlockType</code> abstract class:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\Ab=
stractBlockType </pre>=20
</div>
</div>
<p>If your block does not have specific attributes or a structure, you can =
extend the <code> AbstractBlockType </code> <strong> </strong>class, which =
contains simple generic converters designated for the block attributes.</p>
<p><span>For example:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
namespace AcmeDemoBundle\Block;

use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\Abstra=
ctBlockType;

/**
* RSS block
* Renders feed from a given URL.
*/
class RSSBlock extends AbstractBlockType
{
   // Class body
}</pre>=20
</div>
</div>
<p><span> <br> </span></p>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-Describingaclassdefinition"=
>Describing a class definition</h3>
<p>A block <strong>must</strong> have a definition set using two classes:</=
p>
<h4 id=3D"CreatingLandingPageblocks(Enterprise)-BlockAttributeDefinition">B=
lockAttributeDefinition</h4>
<p>The <code> BlockAttributeDefinition </code> class defines the attributes=
 of a block<span>:<br> </span></p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Attribute</th>
<th class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Definition</th>
</tr>
<tr>
<td class=3D"confluenceTd">$id</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block attribute ID</td>
</tr>
<tr>
<td class=3D"confluenceTd">$name</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block attribute name</td>
</tr>
<tr>
<td class=3D"confluenceTd">$type</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block attribute type, available options are:<br>
<ul>
<li><code> <span style=3D"color: rgb(61,60,64);">integer</span> </code></li=
>
<li><code> <span style=3D"color: rgb(61,60,64);">string</span> </code></li>
<li><code> <span style=3D"color: rgb(61,60,64);">url</span> </code></li>
<li><code> <span style=3D"color: rgb(61,60,64);">text</span> </code></li>
<li><code> <span style=3D"color: rgb(61,60,64);">embed</span> </code></li>
<li><code> <span style=3D"color: rgb(61,60,64);">select</span> </code></li>
<li><code> <span style=3D"color: rgb(61,60,64);">multiple</span> </code></l=
i>
</ul></td>
</tr>
<tr>
<td class=3D"confluenceTd">$regex</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block attribute regex used for validation</td>
</tr>
<tr>
<td class=3D"confluenceTd">$regexErrorMessage</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">message displayed when regex does not match</td>
</tr>
<tr>
<td class=3D"confluenceTd">$required</td>
<td class=3D"confluenceTd">bool</td>
<td class=3D"confluenceTd"><code>TRUE</code>&nbsp;if attribute is required<=
/td>
</tr>
<tr>
<td class=3D"confluenceTd">$inline</td>
<td class=3D"confluenceTd">bool</td>
<td class=3D"confluenceTd">indicates&nbsp;whether block attribute input sho=
uld be rendered inline in a form</td>
</tr>
<tr>
<td class=3D"confluenceTd">$values</td>
<td class=3D"confluenceTd">array</td>
<td class=3D"confluenceTd">array of chosen values</td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd">$options</td>
<td colspan=3D"1" class=3D"confluenceTd">array</td>
<td colspan=3D"1" class=3D"confluenceTd">array of available options</td>
</tr>
</tbody>
</table>
</div>
<p><span style=3D"color: rgb(0,0,0);"> <br> </span></p>
<h4 id=3D"CreatingLandingPageblocks(Enterprise)-BlockDefinition">BlockDefin=
ition</h4>
<p>The <code> BlockDefinition </code> class describes a block:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Attribute</th>
<th class=3D"confluenceTh">Type</th>
<th class=3D"confluenceTh">Definition</th>
<th colspan=3D"1" class=3D"confluenceTh">Note</th>
</tr>
<tr>
<td class=3D"confluenceTd"><p>$type</p></td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block type</td>
<td colspan=3D"1" class=3D"confluenceTd">&nbsp;</td>
</tr>
<tr>
<td class=3D"confluenceTd">$name</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block name</td>
<td colspan=3D"1" class=3D"confluenceTd">&nbsp;</td>
</tr>
<tr>
<td class=3D"confluenceTd">$category</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">block category</td>
<td colspan=3D"1" class=3D"confluenceTd">&nbsp;</td>
</tr>
<tr>
<td class=3D"confluenceTd">$thumbnail</td>
<td class=3D"confluenceTd">string</td>
<td class=3D"confluenceTd">path to block thumbnail image</td>
<td colspan=3D"1" class=3D"confluenceTd">&nbsp;</td>
</tr>
<tr>
<td class=3D"confluenceTd">$templates</td>
<td class=3D"confluenceTd">array</td>
<td class=3D"confluenceTd">array of available paths of templates</td>
<td colspan=3D"1" class=3D"confluenceTd"><p>Retrieved from the config file =
(default_layouts.yml)</p></td>
</tr>
<tr>
<td class=3D"confluenceTd">$attributes</td>
<td class=3D"confluenceTd">array</td>
<td class=3D"confluenceTd">array of block attributes (objects of&nbsp;<code=
> <strong>BlockAttributeDefinition</strong> </code>&nbsp;class)</td>
<td colspan=3D"1" class=3D"confluenceTd">&nbsp;</td>
</tr>
</tbody>
</table>
</div>
<p><span style=3D"color: rgb(0,0,0);"> <br> </span></p>
<p>&nbsp;</p>
<p>When extending <code>AbstractBlockType</code> you <strong>must</strong> =
implement at least 3 methods:</p>
<div id=3D"expander-920058343" class=3D"expand-container">
<div id=3D"expander-control-920058343" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"af918576c0365dadd34b26056af46801" widt=
h=3D"16" height=3D"16"></span>
<span class=3D"expand-control-text">createBlockDefinition()</span>
</div>
<div id=3D"expander-content-$toggleId" class=3D"expand-content">
<p>This method must return an<strong> <code>&nbsp;EzSystems\LandingPageFiel=
dTypeBundle\FieldType\LandingPage\Definition\BlockDefinition</code> </stron=
g>&nbsp;object.</p>
<p>Example of a Gallery block:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/**
 * Creates BlockDefinition object for block type.
 *
 * @return \EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Defi=
nition\BlockDefinition
 */
public function createBlockDefinition()
{
    return new BlockDefinition(
        'gallery',
        'Gallery Block',
        'default',
        'bundles/ezsystemslandingpagefieldtype/images/thumbnails/gallery.sv=
g',
        [],=20
        [
            new BlockAttributeDefinition(
                'contentId',
                'Folder',
                'embed',
                '/^([a-zA-Z]:)?(\/[a-zA-Z0-9_\/-]+)+\/?/',
                'Choose an image folder'
            ),
        ]
    );
}</pre>=20
</div>
</div>
</div>
</div>
<div id=3D"expander-1301663188" class=3D"expand-container">
<div id=3D"expander-control-1301663188" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"af918576c0365dadd34b26056af46801" widt=
h=3D"16" height=3D"16"></span>
<span class=3D"expand-control-text">getTemplateParameters(BlockValue $block=
Value)</span>
</div>
<div id=3D"expander-content-$toggleId" class=3D"expand-content">
<p>This method returns an array of parameters to be displayed in rendered v=
iew of block. <span>You can access them directly in a block template (e. g.=
 via twig </span> <code>{{ title }}</code> <span>).</span></p>
<p>&nbsp;</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>When parameters are used in the template you call them directly without =
the <code>parameters</code> array name:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Correct</th>
<th class=3D"confluenceTh">Not Correct</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code> <span style=3D"color: rgb(51,153,102);">&=
lt;h1&gt;{{ title }}&lt;/h1&gt;</span> </code></td>
<td class=3D"confluenceTd"><s> <code> <span style=3D"color: rgb(255,0,0);">=
&lt;h1&gt;{{ parameters.title }}&lt;/h1&gt;</span> </code> </s></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>Example of the <code>getTemplateParameters()</code> method implementatio=
n:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/**
* @param \EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\=
BlockValue $blockValue
*
* @return array
*/
public function getTemplateParameters(BlockValue $blockValue)
{
=09$attributes =3D $blockValue-&gt;getAttributes();
=09$limit =3D (isset($attributes['limit'])) ? $attributes['limit'] : 10;
=09$offset =3D (isset($attributes['offset'])) ? $attributes['offset'] : 0;
=09$parameters =3D [
=09=09'title' =3D&gt; $attributes['title'],
=09=09'limit' =3D&gt; $limit,
=09=09'offset' =3D&gt; $offset,
=09=09'feeds' =3D&gt; $this-&gt;RssProvider-&gt;getFeeds($attributes['url']=
),
=09];
=09
=09return $parameters;
}</pre>=20
</div>
</div>
<p><span>&nbsp;</span> <span> <br> </span></p>
</div>
</div>
<div id=3D"expander-1201453501" class=3D"expand-container">
<div id=3D"expander-control-1201453501" class=3D"expand-control">
<span class=3D"expand-control-icon"><img style=3D"vertical-align:middle;" c=
lass=3D"expand-control-image" src=3D"af918576c0365dadd34b26056af46801" widt=
h=3D"16" height=3D"16"></span>
<span class=3D"expand-control-text">checkAttributesStructure(array $attribu=
tes)</span>
</div>
<div id=3D"expander-content-$toggleId" class=3D"expand-content">
<p>This method validates the input fields for a block. You can specify your=
 own conditions to throw the <code>InvalidBlockAttributeException</code> ex=
ception.</p>
<p>This <code>InvalidBlockAttributeException</code> exception has the follo=
wing parameters:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Description</th>
</tr>
<tr>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
strong>blockType</strong> </span> </span></td>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi">na=
me of a block</span> </span></td>
</tr>
<tr>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi"> <strong>attribute</strong> </=
span> </span> </span> </span></td>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi">name of the block's attribute =
which failed validation</span> </span> </span> </span></td>
</tr>
<tr>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi"> <span class=3D"pl-s1"> <span =
class=3D"pl-smi"> <strong>message</strong> </span> </span> </span> </span> =
</span> </span></td>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi"> <span class=3D"pl-s1"> <span =
class=3D"pl-smi">a short information about an error</span> </span> </span> =
</span> </span> </span></td>
</tr>
<tr>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi"> <span class=3D"pl-s1"> <span =
class=3D"pl-smi"> <span class=3D"pl-s1"> <span class=3D"pl-smi"> <strong>pr=
evious</strong> </span> </span> </span> </span> </span> </span> </span> </s=
pan></td>
<td class=3D"confluenceTd"><span class=3D"pl-s1"> <span class=3D"pl-smi"> <=
span class=3D"pl-s1"> <span class=3D"pl-smi"> <span class=3D"pl-s1"> <span =
class=3D"pl-smi"> <span class=3D"pl-s1"> <span class=3D"pl-smi">previous ex=
ception, null by default</span> </span> </span> </span> </span> </span> </s=
pan> </span></td>
</tr>
</tbody>
</table>
</div>
<p><span class=3D"pl-s1">&nbsp;</span> <span class=3D"pl-s1"> <span class=
=3D"pl-smi"> <span class=3D"pl-s1"> <span class=3D"pl-smi"> <span class=3D"=
pl-s1"> <span class=3D"pl-smi"> <span class=3D"pl-s1"> <span class=3D"pl-sm=
i"> <br> </span> </span> </span> </span> </span> </span> </span> </span></p=
>
<p><span>For example:</span></p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/**
 * Checks if block's attributes are valid.
 *
 * @param array $attributes
 *
 * @throws \EzSystems\LandingPageFieldTypeBundle\Exception\InvalidBlockAttr=
ibuteException
 */
public function checkAttributesStructure(array $attributes)
{
    if (!isset($attributes['url'])) {
        throw new InvalidBlockAttributeException('RSS', 'url', 'URL must be=
 set.');
    }

    if (isset($attributes['limit']) &amp;&amp; (($attributes['limit'] &lt; =
1) || (!is_numeric($attributes['limit'])))) {
        throw new InvalidBlockAttributeException('RSS', 'limit', 'Limit mus=
t be a number greater than 0.');
    }

    if (isset($attributes['offset']) &amp;&amp; (($attributes['offset'] &lt=
; 0) || (!is_numeric($attributes['limit'])))) {
        throw new InvalidBlockAttributeException('RSS', 'offset', 'Offset m=
ust be a number no less than 0.');
    }
}</pre>=20
</div>
</div>
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>When the class is created make sure it is added to a container.</p>
</div>
</div>
<p>&nbsp;</p>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-Addingtheclasstothecontaine=
r">Adding the class to the container</h3>
<p>&nbsp;The <strong>services.yml</strong> file must contain info about you=
r block class.</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The description of your class must contain a tag which provides:</p>
<ul>
<li>tag name: <strong>landing_page_field_type.block_type</strong></li>
<li>tag alias: &lt;name of a block&gt;</li>
</ul>
</div>
</div>
<p>&nbsp;</p>
<p>For example:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">acme.landing_page.block.rss: =09=09=09=09=09=09=09=09=09=09=09# ser=
vice id
       class: AcmeDemoBundle\FieldType\LandingPage\Model\Block\RSSBlock # b=
lock's class with namespace
       tags: =09=09=09=09=09=09=09=09=09=09=09=09=09=09=09# service definit=
ion must contain tag with=20
           - { name: landing_page_field_type.block_type, alias: rss}=09# "l=
anding_page_field_type.block_type" name and block name as an alias
</pre>=20
</div>
</div>
<h2 id=3D"CreatingLandingPageblocks(Enterprise)-CustomeditingUI">Custom edi=
ting UI</h2>
<p>If you want to add a custom editing UI to your new block, you need to pr=
ovide the code for the custom popup UI in Javascript (see the code for <a h=
ref=3D"https://github.com/ezsystems/StudioUIBundle/blob/ea683e0443bc3660e9e=
e25fe24e435d99e1133ff/Resources/public/js/views/blocks/ezs-scheduleblockvie=
w.js" class=3D"external-link" rel=3D"nofollow">eZS.ScheduleBlockView</a> or=
 <a href=3D"https://github.com/ezsystems/StudioUIBundle/blob/162d6b9b967cb5=
49f32bc06c4405d3809d8546f0/Resources/public/js/views/blocks/ezs-tagblockvie=
w.js" class=3D"external-link" rel=3D"nofollow">eZS.TagBlockView</a> for exa=
mples).</p>
<p>Once it is ready, create a plugin for <code>eZS.LandingPageCreatorView</=
code> that makes a use of the <code>addBlock</code> public method from <cod=
e>eZS.LandingPageCreatorView</code>, see the example below:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">YUI.add('ezs-addcustomblockplugin', function (Y) {
    'use strict';

    var namespace =3D 'Any.Namespace.Of.Your.Choice',

    Y.namespace(namespace);
    NS =3D Y[namespace];

    NS.Plugin.AddCustomBlock =3D Y.Base.create('addCustomBlockPlugin', Y.Pl=
ugin.Base, [], {
        initializer: function () {
            this.get('host').addBlock('custom', NS.CustomBlockView);
        },
    }, {
        NS: 'dashboardPlugin'
    });

    Y.eZ.PluginRegistry.registerPlugin(
        NS.Plugin.AddCustomBlock, ['landingPageCreatorView']
    );
});</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<p class=3D"title">Upcoming feature - multiple block templates</p>
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>The ability to configure different templates (views) for one Landing Pag=
e block is upcoming. See <a href=3D"https://jira.ez.no/browse/EZS-1008" cla=
ss=3D"external-link" rel=3D"nofollow">EZS-1008</a> to follow its progress.<=
/p>
</div>
</div>
<p>&nbsp;</p>
<h1 id=3D"CreatingLandingPageblocks(Enterprise)-Example">Example</h1>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-BlockClass">Block Class</h3=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>TagBlock.php</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">&lt;?php
/**
 * @copyright Copyright (C) eZ Systems AS. All rights reserved.
 * @license For full copyright and license information view LICENSE file di=
stributed with this source code.
 */
namespace EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\=
Block;

use EzSystems\LandingPageFieldTypeBundle\Exception\InvalidBlockAttributeExc=
eption;
use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Definition\B=
lockDefinition;
use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Definition\B=
lockAttributeDefinition;
use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\Abstra=
ctBlockType;
use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\BlockT=
ype;
use EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model\BlockV=
alue;

/**
 * Tag block
 * Renders simple HTML.
 */
class TagBlock extends AbstractBlockType implements BlockType
{
    /**
     * Returns array of parameters required to render block template.
     *
     * @param array $blockValue Block value attributes
     *
     * @return array Template parameters
     */
    public function getTemplateParameters(BlockValue $blockValue)
    {
        return ['block' =3D&gt; $blockValue];
    }

=09/**
 =09 * Creates BlockDefinition object for block type.
 =09 *
 =09 * @return \EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\=
Definition\BlockDefinition
 =09 */
    public function createBlockDefinition()
    {
        return new BlockDefinition(
            'tag',
            'Tag Block',
            'default',
            'bundles/ezsystemslandingpagefieldtype/images/thumbnails/tag.sv=
g',
            [],
            [
                new BlockAttributeDefinition(
                    'content',
                    'Content',
                    'text',
                    '/[^\\s]/',
                    'Provide html code'
                ),
            ]
        );
    }

=09/**
 =09 * Checks if block's attributes are valid.
=09 *
=09 * @param array $attributes
=09 *
=09 * @throws \EzSystems\LandingPageFieldTypeBundle\Exception\InvalidBlockA=
ttributeException
=09 */
    public function checkAttributesStructure(array $attributes)
    {
        if (!isset($attributes['content'])) {
            throw new InvalidBlockAttributeException('Tag', 'content', 'Con=
tent must be set.');
        }
    }
}

</pre>=20
</div>
</div>
<div class=3D"confluence-information-macro confluence-information-macro-tip=
">
<span class=3D"aui-icon aui-icon-small aui-iconfont-approve confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><span class=3D"status-macro aui-lozenge aui-lozenge-current">V1.7</span>=
</p>
<p>If you want to make sure that your block is only available in the Elemen=
t menu in a specific situation, you can override the&nbsp;<code>isAvailable=
</code> method, which makes the block accessible by default:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">public function isAvailable()
    {
        return true;
    }</pre>=20
</div>
</div>
</div>
</div>
<p>&nbsp;</p>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-service.ymlconfiguration">s=
ervice.yml configuration</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>services.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: text; gutter: false; theme: Eclipse" style=3D"font-siz=
e:12px;">exponential.landing_page.block.tag:
    class: EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Model=
\Block\TagBlock
    tags:
        - { name: landing_page_field_type.block_type, alias: tag }</pre>=20
</div>
</div>
<h3 id=3D"CreatingLandingPageblocks(Enterprise)-Blocktemplate"><span>Block =
template</span></h3>
<pre>{{ block.attributes.content|raw }}</pre>
<p>&nbsp;</p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"CreatingLandingPageblocks(Enterprise)-Inthistopic:">In this topic=
:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485850502297 {padding: 0px;}
div.rbtoc1485850502297 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485850502297 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485850502297">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Description">Descript=
ion</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Solution">Solution</a=
>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Blockconfiguration">B=
lock configuration</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Creatinganewblock">Cr=
eating a new block</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Creatingaclassfortheb=
lock">Creating a class for the block</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Describingaclassdefin=
ition">Describing a class definition</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Addingtheclasstotheco=
ntainer">Adding the class to the container</a></li>=20
</ul> </li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-CustomeditingUI">Cust=
om editing UI</a></li>=20
</ul> </li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Example">Example</a>=
=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-BlockClass">Block Cla=
ss</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-service.ymlconfigurat=
ion">service.yml configuration</a></li>=20
<li><a href=3D"#CreatingLandingPageblocks(Enterprise)-Blocktemplate">Block =
template</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<p>&nbsp;</p>
<h4 id=3D"CreatingLandingPageblocks(Enterprise)-Relatedtopics:">Related top=
ics:</h4>
<p><a href=3D"/pages/viewpage.action?pageId=3D31430259">Creating Landing Pa=
ge layouts (Enterprise)</a></p>
<p><a href=3D"/pages/viewpage.action?pageId=3D31430521">Landing Page Field =
Type (Enterprise)</a></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2717_2108331928.1485850502468
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: file:///C:/af918576c0365dadd34b26056af46801

iVBORw0KGgoAAAANSUhEUgAAABAAAAAQBAMAAADt3eJSAAAAA3NCSVQICAjb4U/gAAAAFVBMVEX/
//9wcHBwcHBwcHBwcHBwcHBwcHA3RenHAAAAB3RSTlMAZoiZzN3/SzZomQAAAAlwSFlzAAALEgAA
CxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNui8sowAAAAUdEVYdENy
ZWF0aW9uIFRpbWUANi8xLzEzOKlF0AAAACFJREFUCJljYCATsCgwqIAZTMnMyRAhsTABCIMxkVxT
GQCLcwHyUKXpLgAAAABJRU5ErkJggg==
------=_Part_2717_2108331928.1485850502468--
